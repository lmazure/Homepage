<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../css/strict.xsl"?>
<PAGE xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../css/schema.xsd">
<TITLE>Subversion</TITLE>
<PATH>notes/svn.xml</PATH>
<DATE><YEAR>2021</YEAR><MONTH>1</MONTH><DAY>23</DAY></DATE>
<CONTENT>
<SLIST>
  <ITEM><BLIST><TITLE><U><B>Tortoise SVN</B></U></TITLE>
    <ITEM>install Tortoise SVN 1.6.7</ITEM>
    <ITEM>go in <CODEFILENAME>g:</CODEFILENAME></ITEM>
    <ITEM>create the directory <CODEFILENAME>laurent_svn_repository</CODEFILENAME></ITEM>
    <ITEM>go in it</ITEM>
    <ITEM>create the directory <CODEFILENAME>my_project</CODEFILENAME></ITEM>
    <ITEM>right click and select <CODEMENU>TortoiseSVN<CODEMENU>Create repository here</CODEMENU></CODEMENU></ITEM>
    <ITEM>somewhere else on the filesystem, create a directory <CODEFILENAME>tempo</CODEFILENAME></ITEM>
    <ITEM>go in it</ITEM>
    <ITEM>create the 3 directories <CODEFILENAME>branches</CODEFILENAME>, <CODEFILENAME>tags</CODEFILENAME> and <CODEFILENAME>trunk</CODEFILENAME></ITEM>
    <ITEM>go in the <CODEFILENAME>trunk</CODEFILENAME> directory</ITEM>
    <ITEM>copy the source hierarchy in it</ITEM>
    <ITEM>go back to where the <CODEFILENAME>tempo</CODEFILENAME> directory is created</ITEM>
    <ITEM>right click and select <CODEMENU>TortoiseSVN<CODEMENU>Import…</CODEMENU></CODEMENU></ITEM>
    <ITEM>select the URL: <CODEROUTINE>file:///G:/laurent_svn_repository/my_project</CODEROUTINE></ITEM>
    <ITEM>type the import commit comment</ITEM>
    <ITEM>click on <CODEMENU>OK</CODEMENU></ITEM>
  </BLIST></ITEM>
  <ITEM><BLIST><TITLE><U><B>Eclipse</B></U></TITLE>
    <ITEM><BLIST><TITLE>Installation</TITLE>
      <ITEM>add <CODEROUTINE>https://dl.bintray.com/subclipse/releases/subclipse/latest/</CODEROUTINE> to the update sites</ITEM>
      <ITEM>retrieve the packages from it</ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Solution 1</TITLE>
      <ITEM>open "SVN Repositories" View</ITEM>
      <ITEM>right-click and select <CODEMENU>New<CODEMENU>Repository location…</CODEMENU></CODEMENU></ITEM>
      <ITEM>set the location URL to <CODEROUTINE>file:///G:/laurent_svn_repository/my_project</CODEROUTINE></ITEM>
      <ITEM>expand the created repository</ITEM>
      <ITEM>right-click on the <CODEFILENAME>trunk</CODEFILENAME> directory and select <CODEMENU>Checkout…</CODEMENU></ITEM>
      <ITEM><BLIST><SUBTITLE>in the "Check out from SVN" dialog</SUBTITLE>
        <ITEM>select <CODEMENU>Check out as a project configured using the New Project Wizard</CODEMENU></ITEM>
        <ITEM>click on <CODEMENU>Finish</CODEMENU></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><SUBTITLE>in the "New Project" Dialog</SUBTITLE>
        <ITEM>select <CODEMENU>Java<CODEMENU>Java Project</CODEMENU></CODEMENU></ITEM>
        <ITEM>click on <CODEMENU>Next</CODEMENU></ITEM>
        <ITEM>type the project name in <CODEMENU>Project Name</CODEMENU></ITEM>
        <ITEM>select <CODEMENU>Use project folder as root for sources and class files</CODEMENU></ITEM>
        <ITEM>click on <CODEMENU>Finish</CODEMENU></ITEM>
      </BLIST></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Solution 2</TITLE>
      <ITEM><CODEMENU>File<CODEMENU>New<CODEMENU>Project…</CODEMENU></CODEMENU></CODEMENU></ITEM>
      <ITEM><BLIST><SUBTITLE>in the "New Project" Dialog</SUBTITLE>
        <ITEM>select <CODEMENU>SVN<CODEMENU>Checkout Projects from SVN</CODEMENU></CODEMENU></ITEM>
        <ITEM>click on <CODEMENU>Next</CODEMENU></ITEM>
        <ITEM>select <CODEMENU>Create a new repository location</CODEMENU></ITEM>
        <ITEM>set the location URL to <CODEROUTINE>file:///G:/laurent_svn_repository/my_project</CODEROUTINE></ITEM>
        <ITEM>click on <CODEMENU>Next</CODEMENU></ITEM>
        <ITEM>select the <CODEMENU>trunk</CODEMENU> directory</ITEM>
        <ITEM>click on <CODEMENU>Next</CODEMENU></ITEM>
        <ITEM>select <CODEMENU>Check out as a project configured using the New Project Wizard</CODEMENU></ITEM>
        <ITEM>click on <CODEMENU>Finish</CODEMENU></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><SUBTITLE>in the "New Project" Dialog</SUBTITLE>
        <ITEM>select <CODEMENU>Java<CODEMENU>Java Project</CODEMENU></CODEMENU></ITEM>
        <ITEM>click on <CODEMENU>Next</CODEMENU></ITEM>
        <ITEM>type the project name in <CODEMENU>Project Name</CODEMENU></ITEM>
        <ITEM>select <CODEMENU>Use project folder as root for sources and class files</CODEMENU></ITEM>
        <ITEM>click on <CODEMENU>Finish</CODEMENU></ITEM>
      </BLIST></ITEM>
    </BLIST></ITEM>
  </BLIST></ITEM>
  <ITEM><BLIST><TITLE><U><B>Command line</B></U></TITLE>
    <ITEM>Display help
      <CODESAMPLE>svn help</CODESAMPLE></ITEM>
    <ITEM>Display help of command <CODEROUTINE>foobar</CODEROUTINE>
      <CODESAMPLE>svn help foobar</CODESAMPLE>
      <CODESAMPLE>svn foobar -h</CODESAMPLE></ITEM>
    <ITEM>Create a repository
      <CODESAMPLE>svnadmin create &lt;dir&gt;</CODESAMPLE></ITEM>
    <ITEM>Perform a checkout (&lt;myDir&gt; will be created)
      <CODESAMPLE>svn co file:///cygdrive/m/laurent_svn_repository/Java\ sandbox/trunk &lt;myDir&gt;</CODESAMPLE></ITEM>
    <ITEM>Display repository, branch… of the current directory (i.e. working copy)
      <CODESAMPLE>svn info</CODESAMPLE></ITEM>
    <ITEM>Display status of working copy files and directories
      <CODESAMPLE>svn status</CODESAMPLE></ITEM>
    <ITEM><BLIST><TITLE>Commit</TITLE>
      <ITEM>Commit a file/dir
      <CODESAMPLE>svn commit -m "I have done blabla…" &lt;file/dir&gt;</CODESAMPLE></ITEM>
      <ITEM>Commit the current directory
      <CODESAMPLE>svn commit -m "I have done blabla…"</CODESAMPLE></ITEM>
    </BLIST></ITEM>
    <ITEM>Revert all files
    <CODESAMPLE>svn revert -R .</CODESAMPLE></ITEM>
    <ITEM><BLIST><TITLE>Display the diffs</TITLE>
      <ITEM>Display the diff of the current directory
      <CODESAMPLE>svn diff</CODESAMPLE></ITEM>
      <ITEM>Display the diff of a file/directory
      <CODESAMPLE>svn diff &lt;file/dir&gt;</CODESAMPLE></ITEM>
      <ITEM>Perform a side-by-side comparison (on Linux/cygwin)
      <CODESAMPLE>svn --diff-cmd "diff" --extensions "-y -W 250 --suppress-common-lines" diff</CODESAMPLE></ITEM>
      <ITEM>display the diff of a given commit
      <CODESAMPLE>svn diff -c 42 &lt;file/dir&gt;</CODESAMPLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Display the log</TITLE>
      <ITEM>Display the log of the current directory
      <CODESAMPLE>svn log</CODESAMPLE></ITEM>
      <ITEM>Display the log of a working copy of a file/directory
      <CODESAMPLE>svn log &lt;file/dir&gt;</CODESAMPLE></ITEM>
      <ITEM>Display the log of a repository
      <CODESAMPLE>svn log file:///cygdrive/m/svn_repository/my_project/trunk</CODESAMPLE></ITEM>
      <ITEM>Display the information about commit 42
      <CODESAMPLE>svn log -c 42</CODESAMPLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Blame</TITLE>
      <ITEM>Annotate each line with author and revision
      <CODESAMPLE>svn [blame|praise|annotate|ann] &lt;file&gt;</CODESAMPLE></ITEM>
      <ITEM>Annotate each line with author and revision, ignoring white space changes
      <CODESAMPLE>svn blame [--extensions|-x] -b &lt;file&gt;</CODESAMPLE></ITEM>
    </BLIST></ITEM>
    <ITEM>Update the current directory to head
    <CODESAMPLE>svn update</CODESAMPLE></ITEM>
    <ITEM>Display a revision of a file
    <CODESAMPLE>svn cat --revision=123 &lt;file&gt;</CODESAMPLE></ITEM>
    <ITEM>Copy a tag
    <CODESAMPLE>svn copy "https://svn.eurofins.local/EOL/tags/EOL-2014-12a-RC2" "https://svn.eurofins.local/EOL/tags/EOL-2014-12a" -m "issue #97713: Create SVN tag for EOL-2014-12a"</CODESAMPLE></ITEM>
    <ITEM>Clean up the working copy (i.e. remove locks and resume unfinished operation)
    <CODESAMPLE>svn cleanup</CODESAMPLE></ITEM>
    <ITEM>Verify the integrity of the repository
    <CODESAMPLE>svnadmin verify /cygdrive/m/laurent_svn_repository/homepage</CODESAMPLE></ITEM>
    <ITEM><BLIST><TITLE>Relocate</TITLE>
      <ITEM>Define the new location of the repository
      <CODESAMPLE>svn relocate file:///cygdrive/m/svn_repository/my_project/trunk working_copy</CODESAMPLE></ITEM>
      <ITEM>Define the new location of the repository (assuming the current directory is the working copy)
      <CODESAMPLE>svn relocate file:///cygdrive/m/svn_repository/my_project/trunk</CODESAMPLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Adding/removing files</TITLE>
      <ITEM>Add a file/directory in the local repository
      <CODESAMPLE>svn add &lt;file/dir&gt;</CODESAMPLE></ITEM>
      <ITEM>Add all new files (except the ignored ones) in the local repository
      <CODESAMPLE>svn add --force .</CODESAMPLE></ITEM>
      <ITEM>Delete a file from the local repository
      <CODESAMPLE>svn delete &lt;file&gt;<BR/>
      svn del &lt;file&gt;<BR/>
      svn remove &lt;file&gt;<BR/>
      svn rm &lt;file&gt;</CODESAMPLE></ITEM>
    </BLIST></ITEM>
    <ITEM>Renaming a file
    <CODESAMPLE>svn [move|mv] &lt;old name&gt; &lt;new name&gt;</CODESAMPLE></ITEM>
    <ITEM><BLIST><TITLE>Branches</TITLE>
      <ITEM>List the branches
      <CODESAMPLE>svn ls file:///cygdrive/m/svn_repository/my_project/branches</CODESAMPLE></ITEM>
      <ITEM>Create a branch &lt;branch name&gt; from trunk
      <CODESAMPLE>svn copy file:///cygdrive/m/svn_repository/my_project/trunk  file:///cygdrive/m/svn_repository/my_project/branches/&lt;branch name&gt; -m "Branch creation comment"</CODESAMPLE></ITEM>
      <ITEM>Check out branch &lt;branch name&gt;
      <CODESAMPLE>svn co file:///cygdrive/m/svn_repository/my_project/branches/&lt;branch name&gt; &lt;directory name&gt;</CODESAMPLE></ITEM>
      <ITEM>Merge trunk into current work directory (which contains the checkout of a branch)
      <CODESAMPLE>svn merge ^/trunk</CODESAMPLE></ITEM>
      <ITEM>merge a branch on trunk<BR/>
        in a checkout of trunk with no local edit<BR/>
        <CODESAMPLE>svn update</CODESAMPLE>
        <CODESAMPLE>svn merge --reintegrate ^/branches/my-branch</CODESAMPLE>
        check the merge result<BR/>
        <CODESAMPLE>svn commit -m "Merge my-branch into trunk"</CODESAMPLE>
        the branch is no longer usable for further work, it's not able to correctly absorb new trunk changes, nor can it be properly reintegrated to trunk again, so it is better to delete the branch<BR/>
        <CODESAMPLE>svn delete ^/branches/my-branch -m "Remove my-branch, reintegrated with trunk in r123."</CODESAMPLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Properties</TITLE>
      <ITEM>Set the value of a property on a file/directory
      <CODESAMPLE>svn propset &lt;property name&gt; &lt;property value&gt; &lt;file/directory name&gt;</CODESAMPLE>
      for example
      <CODESAMPLE>svn propset svn:ignore "*" tmpdir</CODESAMPLE></ITEM>
      <ITEM>Get the value of a property of a file/directory
      <CODESAMPLE>svn propget &lt;property name&gt; &lt;file/directory name&gt;</CODESAMPLE>
      for example
      <CODESAMPLE>svn propget svn:ignore tmpdir</CODESAMPLE></ITEM>
      <ITEM>Remove a property of a file/directory
      <CODESAMPLE>svn propdel &lt;property name&gt; &lt;file/directory name&gt;</CODESAMPLE>
      for example
      <CODESAMPLE>svn propdel svn:ignore tmpdir</CODESAMPLE></ITEM>
    </BLIST></ITEM>
    <ITEM><CODEROUTINE>svn:ignore</CODEROUTINE> is the property defining the elements ignored in a directory</ITEM>
    <ITEM><CODEROUTINE>svn:global-ignores</CODEROUTINE> is the property defining the elements ignored in a directory and its sub-directories</ITEM>
  </BLIST></ITEM>
</SLIST>
</CONTENT>
<X><T>Links</T><A>../links/coding.html#svn</A><L>en</L><F>HTML</F></X>
</PAGE>