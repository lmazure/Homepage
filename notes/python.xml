<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../css/strict.xsl"?>
<PAGE xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../css/schema.xsd" xml:lang="en">
<TITLE>Python</TITLE>
<PATH>notes/python.xml</PATH>
<DATE><YEAR>2022</YEAR><MONTH>1</MONTH><DAY>28</DAY></DATE>
<CONTENT>
<BLIST><TITLE><U><B>List</B></U></TITLE>
  <ITEM>Test if an element is in a list
    <CODESAMPLE>item in List</CODESAMPLE>
  </ITEM>
</BLIST>
<BLIST><TITLE><U><B>Set</B></U></TITLE>
  <ITEM>Create an empty set
    <CODESAMPLE>s = set()</CODESAMPLE>
  </ITEM>
</BLIST>
<BLIST><TITLE><U><B>Dictionary</B></U></TITLE>
  <ITEM>Create an empty dictionary
    <CODESAMPLE>d = {}</CODESAMPLE>
  </ITEM>
</BLIST>
<BLIST><TITLE><U><B>Exceptions</B></U></TITLE>
  <ITEM>Use <CODEROUTINE>try</CODEROUTINE> to declare the temptative code block and <CODEROUTINE>except</CODEROUTINE> to catch the exception.
  <CODESAMPLE>try:<BR/>
    <TAB/>…<BR/>
    except ValueError:<BR/>
    <TAB/>…</CODESAMPLE>
  </ITEM>
  <ITEM>It is possible to have several exceptions with the same handler and several handlers with the same <CODEROUTINE>try</CODEROUTINE> clause.
    <CODESAMPLE>try:<BR/>
    <TAB/>…<BR/>
    except (RuntimeError, TypeError, NameError):<BR/>
    <TAB/>…<BR/>
    except ValueError:<BR/>
    <TAB/>…</CODESAMPLE>
  </ITEM>
  <ITEM>A final <CODEROUTINE>except</CODEROUTINE> handler will catch all exceptions.
    <CODESAMPLE>try:<BR/>
    <TAB/>…<BR/>
    except (RuntimeError, TypeError, NameError):<BR/>
    <TAB/>…<BR/>
    except:<BR/>
    <TAB/>…</CODESAMPLE>
  </ITEM>
  <ITEM>An <CODEROUTINE>else</CODEROUTINE> clause may be added after the exception handlers, it will be executed anytime no exception occurred.
    <CODESAMPLE>try:<BR/>
    <TAB/>…<BR/>
    except (RuntimeError, TypeError, NameError):<BR/>
    <TAB/>…<BR/>
    else:<BR/>
    <TAB/>…</CODESAMPLE>
  </ITEM>
  <ITEM>It is possible to retrieve the exception details by adding a variable name after the exception list.
    <CODESAMPLE>try:<BR/>
    <TAB/>…<BR/>
    except IOError, (errno, strerror):<BR/>
    <TAB/>…<BR/>
    except ZeroDivisionError, detail:<BR/>
    <TAB/>…</CODESAMPLE>
  </ITEM>
  <ITEM>A <CODEROUTINE>finally</CODEROUTINE> block can be used instead of <CODEROUTINE>except</CODEROUTINE> handlers: it will be always executed, but if an exception occurred, it will be reraised after this execution.
    <CODESAMPLE>try:<BR/>
    <TAB/>…<BR/>
    finally:<BR/>
    <TAB/>…</CODESAMPLE>
  </ITEM>
  <ITEM><CODEROUTINE>raise</CODEROUTINE> can be used to raise an exception (the argument is optional).
    <CODESAMPLE>raise NameError, 'HiThere'</CODESAMPLE>
  </ITEM>
  <ITEM><CODEROUTINE>raise</CODEROUTINE> with no argument reraise the current exception.
  </ITEM>
</BLIST>
<BLIST><TITLE><U><B><CODEROUTINE>pip</CODEROUTINE></B></U></TITLE>
  <ITEM>install a package
    <CODESAMPLE>pip install &lt;package&gt;</CODESAMPLE>
  </ITEM>
  <ITEM>install the packages defined in a <CODEFILENAME>requirements.txt</CODEFILENAME> file
    <CODESAMPLE>pip install -r requirements.txt</CODESAMPLE>
  </ITEM>
  <ITEM>upgrade a package
    <CODESAMPLE>pip install --upgrade &lt;package&gt;</CODESAMPLE>
  </ITEM>
  <ITEM>install a package from the default branch of a Git repository
    <CODESAMPLE>pip install git+https://gitlab.com/opentestfactory/agent</CODESAMPLE>
    The version (commit ID) is available in <CODEFILENAME>/c/Users/lmazure/AppData/Local/Programs/Python/Python39/lib/site-packages/opentf_agent-*.dist-info/direct_url.json</CODEFILENAME>.<BR/>
    See <X><T>https://packaging.python.org/en/latest/specifications/direct-url/</T><A>https://packaging.python.org/en/latest/specifications/direct-url/</A><L>en</L><F>HTML</F></X>.
  </ITEM>
  <ITEM>install a package from a given branch of a Git repository
    <CODESAMPLE>pip install git+https://gitlab.com/opentestfactory/agent@rel-1.3.1</CODESAMPLE>
  </ITEM>
  <ITEM>list the installed packages
    <CODESAMPLE>pip list</CODESAMPLE>
  </ITEM>
  <ITEM>list the out-of-date installed packages
    <CODESAMPLE>pip list -o</CODESAMPLE>
    <CODESAMPLE>pip list --outdated</CODESAMPLE>
  </ITEM>
</BLIST></CONTENT>
<X><T>links</T><A>../links/python.html</A><L>en</L><F>HTML</F></X>
</PAGE>