<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../css/strict.xsl"?>
<PAGE xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../css/schema.xsd">
<TITLE>I/O</TITLE>
<PATH>notes/javaio2.xml</PATH>
<DATE><YEAR>2010</YEAR><MONTH>10</MONTH><DAY>27</DAY></DATE>
<CONTENT>
Reading UTF-8 Encoded Data
<CODESAMPLE>
try {<BR/>
<TAB/>BufferedReader in = new BufferedReader(new InputStreamReader(new FileInputStream("infilename"), "UTF8"));<BR/>
<TAB/>String str = in.readLine();<BR/>
} catch (UnsupportedEncodingException e) {<BR/>
} catch (IOException e) {<BR/>
}
</CODESAMPLE><BR/>
Writing UTF-8 Encoded Data
<CODESAMPLE>
try {<BR/>
<TAB/>Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream("outfilename"), "UTF8"));<BR/>
<TAB/>out.write(aString); <BR/>
<TAB/>out.close();<BR/>
} catch (UnsupportedEncodingException e) {<BR/>
} catch (IOException e) {<BR/>
}
</CODESAMPLE><BR/>
Reading ISO Latin-1 Encoded Data
<CODESAMPLE>
try {<BR/>
<TAB/>BufferedReader in = new BufferedReader(new InputStreamReader(new FileInputStream("infilename"), "8859_1"));<BR/>
<TAB/>String str = in.readLine();<BR/>
} catch (UnsupportedEncodingException e) {<BR/>
} catch (IOException e) {<BR/>
}
</CODESAMPLE><BR/>
Writing ISO Latin-1 Encoded Data
<CODESAMPLE>
try {<BR/>
Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream("outfilename"), "8859_1"));<BR/>
out.write(aString); <BR/>
out.close();<BR/>
} catch (UnsupportedEncodingException e) {<BR/>
} catch (IOException e) {<BR/>
}
</CODESAMPLE><BR/>
Listing All Available Unicode to Character Set Converters
<CODESAMPLE>
Map map = Charset.availableCharsets();<BR/>
Iterator it = map.keySet().iterator();<BR/>
while (it.hasNext()) {<BR/>
<TAB/>// Get charset name<BR/>
<TAB/>String charsetName = (String)it.next();<BR/>
<TAB/>// Get charset<BR/>
<TAB/>Charset charset = Charset.forName(charsetName); <BR/>
}
</CODESAMPLE><BR/>
Get the default character set of the JVM
<CODESAMPLE>
// not cross-platform safe<BR/>
System.out.println(System.getProperty("file.encoding"));
</CODESAMPLE>
<CODESAMPLE>
// jdk1.4<BR/>
System.out.println(new java.io.OutputStreamWriter(new java.io.ByteArrayOutputStream()).getEncoding());
</CODESAMPLE>
<CODESAMPLE>
// jdk1.5<BR/>
System.out.println(java.nio.charset.Charset.defaultCharset().name());
</CODESAMPLE>
</CONTENT>
</PAGE>