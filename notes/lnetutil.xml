<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../css/strict.xsl"?>
<PAGE xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../css/schema.xsd" xml:lang="en">
<TITLE>Linux network utilities</TITLE>
<PATH>notes/lnetutil.xml</PATH>
<DATE><YEAR>2025</YEAR><MONTH>1</MONTH><DAY>23</DAY></DATE>
<CONTENT>
<DEFINITIONTABLE>
  <ROW>
    <TERM><CODEROUTINE><X><T>wget</T><A>https://man7.org/linux/man-pages/man1/wget.1.html</A><L>en</L><F>HTML</F></X></CODEROUTINE></TERM>
    <DESC>download a file from the Web</DESC>
  </ROW>
</DEFINITIONTABLE>
<BR/>
<DEFINITIONTABLE>
  <ROW>
    <TERM><CODEROUTINE><X><T>wput</T><A>https://linux.die.net/man/1/wput</A><L>en</L><F>HTML</F></X> toto ftp://foobar:password@3.249.13.103</CODEROUTINE></TERM>
    <DESC>transfer directory <CODEROUTINE>toto</CODEROUTINE> in home directory of foobar on 3.249.13.103<BR/>
        <CODEROUTINE>wput</CODEROUTINE> can be retrieved from <X><T>https://sourceforge.net/projects/wput/</T><A>https://sourceforge.net/projects/wput/</A><L>en</L><F>HTML</F></X><BR/>
        it does not seem to work to push data on Hummingbird 7.1.1 FTP server</DESC>
  </ROW>
  <ROW>
    <TERM><CODEROUTINE>wput -v</CODEROUTINE></TERM>
    <DESC>verbose mode</DESC>
  </ROW>
  <ROW>
    <TERM><CODEROUTINE>wput -d</CODEROUTINE></TERM>
    <DESC>display debug messages</DESC>
  </ROW>
</DEFINITIONTABLE>
<BR/>
<DEFINITIONTABLE>
  <ROW>
    <TERM><CODEROUTINE><X><T>rcp</T><A>https://www.unix.com/man_page/redhat/1/rcp/</A><L>en</L><F>HTML</F></X></CODEROUTINE></TERM>
    <DESC>remote file copy</DESC>
  </ROW>
</DEFINITIONTABLE>
<BR/>
<DEFINITIONTABLE>
  <ROW>
    <TERM><CODEROUTINE><X><T>scp</T><A>https://man7.org/linux/man-pages/man1/scp.1.html</A><L>en</L><F>HTML</F></X></CODEROUTINE></TERM>
    <DESC>secure remote file copy program (use SSH)<BR/>
      <CODESAMPLE><PROMPT/>scp -r /vobs-awa/{AW4.3_src,AW4.1_outsource,AWApp_src,AiM_dev} johndoe@mars:/export/home1/mazurla/vobs-awa</CODESAMPLE></DESC>
  </ROW>
</DEFINITIONTABLE>
<BR/>
<DEFINITIONTABLE>
  <ROW>
    <TERM><CODEROUTINE><X><T>ftp</T><A>https://www.unix.com/man_page/redhat/1/ftp/</A><L>en</L><F>HTML</F></X></CODEROUTINE></TERM>
    <DESC>user interface to transfer files using the FTP protocol</DESC>
  </ROW>
</DEFINITIONTABLE>
<BR/>
<DEFINITIONTABLE>
  <ROW>
    <TERM><CODEROUTINE><X><T>sftp</T><A>https://man7.org/linux/man-pages/man1/sftp.1.html</A><L>en</L><F>HTML</F></X></CODEROUTINE></TERM>
    <DESC>implementation of FTP using SSH</DESC>
  </ROW>
</DEFINITIONTABLE>
<BR/>
<DEFINITIONTABLE>
  <ROW>
    <TERM><CODEROUTINE><X><T>lftp</T><A>https://www.unix.com/man_page/redhat/1/lftp/</A><L>en</L><F>HTML</F></X></CODEROUTINE></TERM>
    <DESC>implementation of FTP that also support the HTTP protocol</DESC>
  </ROW>
</DEFINITIONTABLE>
<BR/>
<DEFINITIONTABLE>
    <ROW>
      <TERM><CODEROUTINE><X><T>curl</T><A>https://man7.org/linux/man-pages/man1/curl.1.html</A><L>en</L><F>HTML</F></X></CODEROUTINE></TERM>
      <DESC>multi protocol tool</DESC>
    </ROW>
    <ROW>
      <TERM><CODEROUTINE>-H &lt;header&gt;</CODEROUTINE><BR/>
        <CODEROUTINE>--header &lt;header&gt;</CODEROUTINE></TERM>
      <DESC>define a header<BR/>
        <CODEROUTINE>-H 'Accept: application/json'</CODEROUTINE></DESC>
    </ROW>
    <ROW>
      <TERM><CODEROUTINE>-X &lt;method&gt;</CODEROUTINE><BR/>
        <CODEROUTINE>--request &lt;method&gt;</CODEROUTINE></TERM>
      <DESC>change the method to use when starting the transfer</DESC>
    </ROW>
    <ROW>
      <TERM><CODEROUTINE>-u &lt;user:password&gt;</CODEROUTINE><BR/>
        <CODEROUTINE>--user &lt;user:password&gt;</CODEROUTINE></TERM>
      <DESC>define user and password for server authentication</DESC>
    </ROW>
    <ROW>
      <TERM><CODEROUTINE>-d &lt;data&gt;</CODEROUTINE><BR/>
        <CODEROUTINE>--data &lt;data&gt;</CODEROUTINE></TERM>
      <DESC>send the specified data in a POST request to the HTTP server</DESC>
    </ROW>
    <ROW>
      <TERM><CODEROUTINE>-F &lt;name=content&gt;</CODEROUTINE><BR/>
        <CODEROUTINE>--form &lt;name=content&gt;</CODEROUTINE></TERM>
      <DESC>emulate a filled-in form<BR/>
        <CODEROUTINE>curl -F name=John -F shoesize=11 https://example.com</CODEROUTINE><BR/>
        <BR/>
        to attach a file, use <CODEROUTINE>@</CODEROUTINE>:<BR/>
        <CODEROUTINE>curl -F profile=@portrait.jpg https://example.com/upload.cgi</CODEROUTINE>:<BR/>
        <BR/>
        to use the content of a file as a field value, use <CODEROUTINE>&lt;</CODEROUTINE>:<BR/>
        <CODEROUTINE>curl -F "story=&lt;hugefile.txt" https://example.com/</CODEROUTINE></DESC>
    </ROW>
    <ROW>
      <TERM><CODEROUTINE>-o &lt;file&gt;</CODEROUTINE><BR/>
        <CODEROUTINE>--output &lt;file&gt;</CODEROUTINE></TERM>
      <DESC>write output to <CODEROUTINE>&lt;file&gt;</CODEROUTINE> instead of stdout.</DESC>
    </ROW>
    <ROW>
      <TERM><CODEROUTINE>-s</CODEROUTINE><BR/>
        <CODEROUTINE>--silent</CODEROUTINE></TERM>
      <DESC>display only the data sent by the server (i.e. no progress meter nor error message)</DESC>
    </ROW>
    <ROW>
      <TERM><CODEROUTINE>-i</CODEROUTINE><BR/>
        <CODEROUTINE>--include</CODEROUTINE></TERM>
      <DESC>include response headers in the output</DESC>
    </ROW>
    <ROW>
      <TERM><CODEROUTINE>-w &lt;format&gt;</CODEROUTINE><BR/>
        <CODEROUTINE>--write-ou &lt;format&gt;</CODEROUTINE></TERM>
      <DESC>display information on <CODEROUTINE>stdout</CODEROUTINE> after a completed transfer<BR/>
        variables are specified as <CODEROUTINE>%{variable_name}</CODEROUTINE>
        <DEFINITIONTABLE>
          <ROW><TERM><CODEROUTINE>http_code</CODEROUTINE></TERM><DESC>numerical response code that was found in the last retrieved HTTP(S) or FTP(s) transfer</DESC></ROW>
          <ROW><TERM><CODEROUTINE>num_redirects</CODEROUTINE></TERM><DESC>number of redirects that were followed in the request</DESC></ROW>
        </DEFINITIONTABLE><BR/>
        <CODEROUTINE>\n</CODEROUTINE> outputs a newline, <CODEROUTINE>\r</CODEROUTINE> a carriage return, <CODEROUTINE>\t</CODEROUTINE> outputs a tab</DESC>
    </ROW>
    <ROW>
      <TERM><CODEROUTINE>-c &lt;filename&gt;</CODEROUTINE><BR/>
        <CODEROUTINE>--cookie-jar &lt;filename&gt;</CODEROUTINE></TERM>
      <DESC>specify to which file to write all cookies after a completed operation.</DESC>
    </ROW>
    <ROW>
      <TERM><CODEROUTINE>-b &lt;filename&gt;</CODEROUTINE><BR/>
        <CODEROUTINE>--cookie &lt;filename&gt;</CODEROUTINE></TERM>
      <DESC>specify a filename to read previously stored cookie from.</DESC>
    </ROW>
    <ROW>
      <TERM><CODEROUTINE>-v</CODEROUTINE><BR/>
        <CODEROUTINE>--verbose</CODEROUTINE></TERM>
      <DESC>makes curl verbose during the operation</DESC>
    </ROW>
    </DEFINITIONTABLE>
    to retrieve the HTTP code:
    <CODESAMPLE>CODE=$(curl -o /dev/null -w '%{HTTP_CODE}' -u " user:password" https://sqtm-nightly-cloud.acceptance.squashtest.org/api/rest/latest/projects/999/test-cases)</CODESAMPLE>
    to retrieve an image file:
    <CODESAMPLE>curl -v -X GET http://localhost:8080/api/get_image/0 --output foobar.png</CODESAMPLE>
    to generate a token on TM
    <CODESAMPLE>#!/bin/sh<BR/>
      <BR/>
      URL=https://nightly-postgres.acceptance.squashtest.org<BR/>
      LOGIN=admin<BR/>
      PASSWORD=admin<BR/>
      <BR/>
      curl -s -c cookies.txt -o /dev/null -X GET $URL/login<BR/>
      TOKEN=$(grep 'XSRF-TOKEN' cookies.txt | awk '{print $NF}')<BR/>
      curl -s -b cookies.txt -c cookies.txt -d "username=$LOGIN&amp;password=$PASSWORD" -H "X-Xsrf-Token: $TOKEN" -o /dev/null -X POST $URL/backend/login<BR/>
      TOKEN=$(grep 'XSRF-TOKEN' cookies.txt | awk '{print $NF}')<BR/>
      curl -s -c cookies.txt -b cookies.txt -X POST -H "X-Xsrf-Token: $TOKEN" -H "Content-Type: application/json" -d '{"name":"test1234","expiryDate":"2025-01-11T23:00:00.000Z","permissions":"READ_WRITE"}' $URL/backend/api-token/generate-api-token | jq -r .token | base64 --decode</CODESAMPLE>
  </CONTENT>
</PAGE>