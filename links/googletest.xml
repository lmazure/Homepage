<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../css/strict.xsl"?>
<PAGE xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../css/schema.xsd">
<TITLE>Testing at Google</TITLE>
<PATH>links/googletest.xml</PATH>
<DATE><YEAR>2019</YEAR><MONTH>12</MONTH><DAY>4</DAY></DATE>
<CONTENT>
<LLIST>
  <ITEM><BLIST><TITLE>Articles</TITLE>
    <ITEM><ARTICLE><X><T>Test Sizes</T><A>https://testing.googleblog.com/2010/12/test-sizes.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Simon</FIRSTNAME><LASTNAME>Stewart</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>12</MONTH><DAY>13</DAY></DATE><COMMENT>The description of how Google defines test sizes (small vs medium vs large).</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>How Google Tests Software</T><A>https://testing.googleblog.com/2011/01/how-google-tests-software.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>James</FIRSTNAME><LASTNAME>Whittaker</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>1</MONTH><DAY>25</DAY></DATE><COMMENT>A description of the Engineering Productivity organisation.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>How Google Tests Software - Part Two</T><A>https://testing.googleblog.com/2011/02/how-google-tests-software-part-two.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>James</FIRSTNAME><LASTNAME>Whittaker</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>2</MONTH><DAY>9</DAY></DATE><COMMENT>The different engineering roles.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>How Google Tests Software - Part Three</T><A>https://testing.googleblog.com/2011/02/how-google-tests-software-part-three.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>James</FIRSTNAME><LASTNAME>Whittaker</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>2</MONTH><DAY>16</DAY></DATE><COMMENT>Development and testing are intricately linked.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>How Google Tests Software - A Brief Interlude</T><A>https://testing.googleblog.com/2011/02/how-google-tests-software-brief.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>James</FIRSTNAME><LASTNAME>Whittaker</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>2</MONTH><DAY>22</DAY></DATE><COMMENT>James Whittaker explains why he is not joking about developers as he used to.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>This Code is CRAP</T><A>https://testing.googleblog.com/2011/02/this-code-is-crap.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Alberto</FIRSTNAME><LASTNAME>Savoia</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>2</MONTH><DAY>22</DAY></DATE><COMMENT>A description of the Change Risk Anti-Patterns metric.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>How Google Tests Software - Part Four</T><A>https://testing.googleblog.com/2011/03/how-google-tests-software-part-four.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>James</FIRSTNAME><LASTNAME>Whittaker</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>3</MONTH><DAY>2</DAY></DATE><COMMENT>The channels corresponding to the release maturity: canary channel, dev channel, test channel, and release channel.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>How Google Tests Software - Part Five</T><A>https://testing.googleblog.com/2011/03/how-google-tests-software-part-five.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>James</FIRSTNAME><LASTNAME>Whittaker</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>3</MONTH><DAY>23</DAY></DATE><COMMENT>How Google classifies tests: small tests, medium tests, and large tests.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>The SET Career Path</T><A>https://testing.googleblog.com/2011/04/set-career-path.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>James</FIRSTNAME><LASTNAME>Whittaker</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>4</MONTH><DAY>5</DAY></DATE><COMMENT>The differences between an SWE (Software Engineer) and an SET (Software Engineer in Test).</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>How Google Tests Software - Part Six</T><A>https://testing.googleblog.com/2011/05/how-google-tests-software-part-six.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>James</FIRSTNAME><LASTNAME>Whittaker</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>5</MONTH><DAY>2</DAY></DATE><COMMENT>SETs are not involved at the beginning of the project and not all projects even have SETs in their team.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>How Google Tests Software - A Break for Q&amp;A</T><A>https://testing.googleblog.com/2011/05/how-google-tests-software-break-for-q.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>James</FIRSTNAME><LASTNAME>Whittaker</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>5</MONTH><DAY>4</DAY></DATE><COMMENT>Switching between SWE and SET position, people can remain Individual Contributors rather than becoming managers.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>How Google Tests Software - Part Seven</T><A>https://testing.googleblog.com/2011/05/how-google-tests-software-part-seven.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>James</FIRSTNAME><LASTNAME>Whittaker</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>5</MONTH><DAY>26</DAY></DATE><COMMENT>A description of the Test Engineer role.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Testing at the speed and scale of Google</T><A>https://google-engtools.blogspot.com/2011/06/testing-at-speed-and-scale-of-google.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Pooja</FIRSTNAME><LASTNAME>Gupta</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Mark</FIRSTNAME><LASTNAME>Ivey</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>John</FIRSTNAME><LASTNAME>Penix</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>6</MONTH><DAY>14</DAY></DATE><COMMENT>Google performs concurrent builds and is using dependency analysis to run less tests after each build.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Lessons in a 21st Century Tech Career: Failing Fast, 20% Time and Project Mobility</T><A>https://testing.googleblog.com/2011/06/lessons-in-21st-century-tech-career.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>James</FIRSTNAME><LASTNAME>Whittaker</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>6</MONTH><DAY>23</DAY></DATE><COMMENT>The title indicates what James Whittaker believes to be the factors that make Googlers so dedicated to their work.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>How We Tested Google Instant Pages</T><A>https://testing.googleblog.com/2011/07/how-we-tested-google-instant-pages.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jason</FIRSTNAME><LASTNAME>Arbon</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Tejas</FIRSTNAME><LASTNAME>Shah</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>7</MONTH><DAY>23</DAY></DATE><COMMENT>The title says all.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>The 10 Minute Test Plan</T><A>https://testing.googleblog.com/2011/09/10-minute-test-plan.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>James</FIRSTNAME><LASTNAME>Whittaker</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>9</MONTH><DAY>1</DAY></DATE><COMMENT>James Whittaker explains that he gives his teams 10 minutes to build a test plan. In fact, they are able to build 80% of this one in 30 minutes by using an AAC (attribute / component / capability) model.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Take a BITE out of Bugs and Redundant Labor</T><A>https://testing.googleblog.com/2011/10/take-bite-out-of-bugs-and-redundant.html</A><L>en</L><F>HTML</F></X><DATE><YEAR>2011</YEAR><MONTH>10</MONTH><DAY>12</DAY></DATE><COMMENT>Google is open sourcing the "head up display" that James Whittaker described in his GTAC 2010 presentation.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Google JS Test, now in Open Source</T><A>https://testing.googleblog.com/2011/10/google-js-test-now-in-open-source.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Aaron</FIRSTNAME><LASTNAME>Jacobs</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>10</MONTH><DAY>17</DAY></DATE><COMMENT>Google releases a JavaScript unit test framework as open source.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Google Test Analytics - Now in Open Source</T><A>https://testing.googleblog.com/2011/10/google-test-analytics-now-in-open.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jim</FIRSTNAME><LASTNAME>Reardon</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>10</MONTH><DAY>19</DAY></DATE><COMMENT>Google releases, as open source, a tool to create an ACC matrix and aggregate metrics (test cases, test results, commits,…) about it.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>ScriptCover makes Javascript coverage analysis easy</T><A>https://testing.googleblog.com/2011/10/scriptcover-makes-javascript-coverage.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Ekaterina</FIRSTNAME><LASTNAME>Kamenskaya</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>10</MONTH><DAY>25</DAY></DATE><COMMENT>Google releases an open source JavaScript code coverage tool.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>RPF: Google's Record Playback Framework</T><A>https://testing.googleblog.com/2011/11/rpf-googles-record-playback-framework.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jason</FIRSTNAME><LASTNAME>Arbon</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>11</MONTH><DAY>17</DAY></DATE><COMMENT>Some usage feedback about BITE's Record/Playback.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>EuroSTAR Software Testing Video: Ten Minute Test Plan with James Whittaker</T><A>https://www.youtube.com/watch?v=QEu3wmgTLqo</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>24</MINUTE><SECOND>14</SECOND></DURATION></X><AUTHOR><FIRSTNAME>James</FIRSTNAME><LASTNAME>Whittaker</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>11</MONTH><DAY>22</DAY></DATE><COMMENT>An overview of how Google tests: ten minutes test plan, ACC, risk analysis…</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Testing Google's New API Infrastructure</T><A>https://testing.googleblog.com/2012/08/testing-googles-new-api-infrastructure.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Anthony</FIRSTNAME><LASTNAME>Vallone</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>8</MONTH><DAY>20</DAY></DATE><COMMENT>A very high level overview of how Google tests its API Infrastructure.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Testing 2.0</T><A>https://testing.googleblog.com/2012/08/testing-20.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Anthony</FIRSTNAME><MIDDLENAME>F.</MIDDLENAME><LASTNAME>Voellm</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>8</MONTH><DAY>31</DAY></DATE><COMMENT>Testing is integrated to coding, so done by developers. SET s and TEs are providing expertise in particular for security, reliability, and performance. Nothing new here. I guess Google is just trying to hire more TEs and SETs.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Conversation with a Test Engineer</T><A>https://testing.googleblog.com/2012/09/conversation-with-test-engineer.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Alan</FIRSTNAME><LASTNAME>Myrvold</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Alan</FIRSTNAME><LASTNAME>Faulkner</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>9</MONTH><DAY>19</DAY></DATE><COMMENT>The interview of a Google Test Engineer. Once again nothing new here, this is a hiring advertisement.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Why Are There So Many C++ Testing Frameworks?</T><A>https://testing.googleblog.com/2012/10/why-are-there-so-many-c-testing.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Zhanyong</FIRSTNAME><LASTNAME>Wan</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>10</MONTH><DAY>27</DAY></DATE><COMMENT>Why they are so many C++ test framework and some Google Test design choices.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X quality='1'><T>Optimal Logging</T><A>https://testing.googleblog.com/2013/06/optimal-logging.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Anthony</FIRSTNAME><LASTNAME>Vallone</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>6</MONTH><DAY>14</DAY></DATE><COMMENT>A good overview of logging.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>How the Google+ Team Tests Mobile Apps</T><A>https://testing.googleblog.com/2013/08/how-google-team-tests-mobile-apps.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Eduardo</FIRSTNAME><MIDDLENAME>Bravo</MIDDLENAME><LASTNAME>Ortiz</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>8</MONTH><DAY>30</DAY></DATE><COMMENT>A short description of the types of tests the Google+ team is performing on Android and on iOS.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Hermetic Servers</T><A>https://testing.googleblog.com/2012/10/hermetic-servers.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Chaitali</FIRSTNAME><LASTNAME>Narla</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Diego</FIRSTNAME><LASTNAME>Salas</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>10</MONTH><DAY>3</DAY></DATE><COMMENT>Running tests on a single machine, with in-memory databases… to get fast and reliable tests.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>WebRTC Audio Quality Testing</T><A>https://testing.googleblog.com/2013/11/webrtc-audio-quality-testing.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Patrik</FIRSTNAME><LASTNAME>Höglund</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>11</MONTH><DAY>8</DAY></DATE><COMMENT>A description of how Google tests WebRTC audio.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>The Google Test and Development Environment - Pt. 1: Office and Equipment</T><A>https://testing.googleblog.com/2013/12/the-google-test-and-development.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Anthony</FIRSTNAME><LASTNAME>Vallone</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>12</MONTH><DAY>20</DAY></DATE><COMMENT>The offices and equipements at Google.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>The Google Test and Development Environment - Pt. 2: Dogfooding and Office Software</T><A>https://testing.googleblog.com/2014/01/the-google-test-and-development.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Anthony</FIRSTNAME><LASTNAME>Vallone</LASTNAME></AUTHOR><DATE><YEAR>2014</YEAR><MONTH>1</MONTH><DAY>3</DAY></DATE><COMMENT>Google is using a lot dogfood.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>The Google Test and Development Environment - Pt. 3: Code, Build, and Test</T><A>https://testing.googleblog.com/2014/01/the-google-test-and-development_21.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Anthony</FIRSTNAME><LASTNAME>Vallone</LASTNAME></AUTHOR><DATE><YEAR>2014</YEAR><MONTH>1</MONTH><DAY>21</DAY></DATE><COMMENT>Some little information about Google's build and test environment.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>ThreadSanitizer: Slaughtering Data Races</T><A>https://testing.googleblog.com/2014/06/threadsanitizer-slaughtering-data-races.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Dmitry</FIRSTNAME><LASTNAME>Vyukov</LASTNAME></AUTHOR><DATE><YEAR>2014</YEAR><MONTH>6</MONTH><DAY>30</DAY></DATE><COMMENT>Some marketing for ThreadSanitizer, a detector of data races.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Measuring Coverage at Google</T><A>https://testing.googleblog.com/2014/07/measuring-coverage-at-google.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Marko</FIRSTNAME><LASTNAME>Ivanković</LASTNAME></AUTHOR><DATE><YEAR>2014</YEAR><MONTH>7</MONTH><DAY>14</DAY></DATE><COMMENT>Some little feedback about the use of code coverage measurement at Google.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Chrome - Firefox WebRTC Interop Test - Pt 1</T><A>https://testing.googleblog.com/2014/08/chrome-firefox-webrtc-interop-test-pt-1.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Patrik</FIRSTNAME><LASTNAME>Höglund</LASTNAME></AUTHOR><DATE><YEAR>2014</YEAR><MONTH>8</MONTH><DAY>26</DAY></DATE><COMMENT>The setup of a test checking Chrome/Firefox WebRTC connection.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Chrome - Firefox WebRTC Interop Test - Pt 2</T><A>https://testing.googleblog.com/2014/09/chrome-firefox-webrtc-interop-test-pt-2.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Patrik</FIRSTNAME><LASTNAME>Höglund</LASTNAME></AUTHOR><DATE><YEAR>2014</YEAR><MONTH>9</MONTH><DAY>9</DAY></DATE><COMMENT>The continuation of the previous article.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Protractor: Angular testing made easy</T><A>https://testing.googleblog.com/2014/11/protractor-angular-testing-made-easy.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Hank</FIRSTNAME><LASTNAME>Duan</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Julie</FIRSTNAME><LASTNAME>Ralph</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Arif</FIRSTNAME><LASTNAME>Sukoco</LASTNAME></AUTHOR><DATE><YEAR>2014</YEAR><MONTH>11</MONTH><DAY>30</DAY></DATE><COMMENT>An introduction to Protractor, a framework for testing Angular applications.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Android UI Automated Testing</T><A>https://testing.googleblog.com/2015/03/android-ui-automated-testing.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Mona</FIRSTNAME><LASTNAME>El Mahdy</LASTNAME></AUTHOR><DATE><YEAR>2015</YEAR><MONTH>3</MONTH><DAY>20</DAY></DATE><COMMENT>The evolution of how the Google+ team tested the UI on Android.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Just Say No to More End-to-End Tests</T><A>https://testing.googleblog.com/2015/04/just-say-no-to-more-end-to-end-tests.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Mike</FIRSTNAME><LASTNAME>Wacker</LASTNAME></AUTHOR><DATE><YEAR>2015</YEAR><MONTH>4</MONTH><DAY>22</DAY></DATE><COMMENT>The usual explanation of the test pyramid: a lot of unit tests, fewer integration tests, and some system tests.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Multi-Repository Development</T><A>https://testing.googleblog.com/2015/05/multi-repository-development.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Patrik</FIRSTNAME><LASTNAME>Höglund</LASTNAME></AUTHOR><DATE><YEAR>2015</YEAR><MONTH>5</MONTH><DAY>15</DAY></DATE><COMMENT>A description of how the Chrome team automatically tests early third-party library upgrades.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Audio Testing - Automatic Gain Control</T><A>https://testing.googleblog.com/2015/10/audio-testing-automatic-gain-control.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Patrik</FIRSTNAME><LASTNAME>Höglund</LASTNAME></AUTHOR><DATE><YEAR>2015</YEAR><MONTH>10</MONTH><DAY>8</DAY></DATE><COMMENT>Some details on how the author implemented a test of Chrome's gain control.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>From QA to Engineering Productivity</T><A>https://testing.googleblog.com/2016/03/from-qa-to-engineering-productivity.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Ari</FIRSTNAME><LASTNAME>Shamash</LASTNAME></AUTHOR><DATE><YEAR>2016</YEAR><MONTH>3</MONTH><DAY>22</DAY></DATE><COMMENT>Software Engineers in Test are becoming Software Engineers, Tools &amp; Infrastructure.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Flaky Tests at Google and How We Mitigate Them</T><A>https://testing.googleblog.com/2016/05/flaky-tests-at-google-and-how-we.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>John</FIRSTNAME><LASTNAME>Micco</LASTNAME></AUTHOR><DATE><YEAR>2016</YEAR><MONTH>5</MONTH><DAY>27</DAY></DATE><COMMENT>The title says all.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X quality='1'><T>The Inquiry Method for Test Planning</T><A>https://testing.googleblog.com/2016/06/the-inquiry-method-for-test-planning.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Anthony</FIRSTNAME><LASTNAME>Vallone</LASTNAME></AUTHOR><DATE><YEAR>2016</YEAR><MONTH>6</MONTH><DAY>6</DAY></DATE><COMMENT>A list of points to be considered when defining a test strategy.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>What Test Engineers do at Google</T><A>https://testing.googleblog.com/2016/09/what-test-engineers-do-at-google.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Matt</FIRSTNAME><LASTNAME>Lowrie</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Manjusha</FIRSTNAME><LASTNAME>Parvathaneni</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Benjamin</FIRSTNAME><LASTNAME>Pick</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Jochen</FIRSTNAME><LASTNAME>Wuttke</LASTNAME></AUTHOR><DATE><YEAR>2016</YEAR><MONTH>9</MONTH><DAY>12</DAY></DATE><COMMENT>Some examples of tasks performed by Test Engineers.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>What Test Engineers do at Google: Building Test Infrastructure</T><A>https://testing.googleblog.com/2016/11/what-test-engineers-do-at-google.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jochen</FIRSTNAME><LASTNAME>Wuttke</LASTNAME></AUTHOR><DATE><YEAR>2016</YEAR><MONTH>11</MONTH><DAY>18</DAY></DATE><COMMENT>A longer example of a Test Engineer task: setting up a test framework for an application performing numerous RPC calls.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Discomfort as a Tool for Change</T><A>https://testing.googleblog.com/2017/02/discomfort-as-tool-for-change.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Dave</FIRSTNAME><LASTNAME>Gladfelter</LASTNAME></AUTHOR><DATE><YEAR>2017</YEAR><MONTH>2</MONTH><DAY>13</DAY></DATE><COMMENT>SETIs are responsible to ensure that the whole product is working correctly, for example by lobbying for having API owners creating fakes of their APIs which results into the fact that they will create APIs easier to use.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Evolution of GTAC and Engineering Productivity</T><A>https://testing.googleblog.com/2017/07/evolution-of-gtac-and-engineering.html</A><L>en</L><F>HTML</F></X><DATE><YEAR>2017</YEAR><MONTH>7</MONTH><DAY>12</DAY></DATE><COMMENT>The GTAC conferences are stopped and will be replaced by something else.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Efficacy Presubmit</T><A>https://testing.googleblog.com/2018/09/efficacy-presubmit.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Peter</FIRSTNAME><LASTNAME>Spragins</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>9</MONTH><DAY>17</DAY></DATE><COMMENT>Using machine learning to select the tests to execute before accepting a commit.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Android Platform Testing Made Easy</T><A>https://testing.googleblog.com/2019/01/android-platform-testing-made-easy.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Simran</FIRSTNAME><LASTNAME>Basi</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Dan</FIRSTNAME><LASTNAME>Shi</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Dan</FIRSTNAME><LASTNAME>Willemsen</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Clay</FIRSTNAME><LASTNAME>Murphy</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>1</MONTH><DAY>15</DAY></DATE><COMMENT>A short description of Atest and Test Mapping, some tools to simplify test management on Android.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Truth 1.0: Fluent Assertions for Java and Android Tests</T><A>https://testing.googleblog.com/2019/07/truth-10-fluent-assertions-for-java-and.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Chris</FIRSTNAME><LASTNAME>Povirk</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>7</MONTH><DAY>8</DAY></DATE><COMMENT>Google proposes yet another Java fluent assertion library.</COMMENT></ARTICLE></ITEM>
    <ITEM><BLIST><TITLE>Testing on the Toilet</TITLE>
      <ITEM><ARTICLE><X><T>Testing on the Toilet: Testing State vs. Testing Interactions</T><A>https://testing.googleblog.com/2013/03/testing-on-toilet-testing-state-vs.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Andrew</FIRSTNAME><LASTNAME>Trenk</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>3</MONTH><DAY>22</DAY></DATE><COMMENT>After explaining the difference between testing states and testing interactions, the author explains that we should test states except in some particular cases.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Testing on the Toilet: Don’t Overuse Mocks</T><A>https://testing.googleblog.com/2013/05/testing-on-toilet-dont-overuse-mocks.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Andrew</FIRSTNAME><LASTNAME>Trenk</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>5</MONTH><DAY>28</DAY></DATE><COMMENT>A description of some risks when using too much mocks.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Testing on the Toilet: Fake Your Way to Better Tests</T><A>https://testing.googleblog.com/2013/06/testing-on-toilet-fake-your-way-to.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Andrew</FIRSTNAME><LASTNAME>Trenk</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Jonathan</FIRSTNAME><LASTNAME>Rockway</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>6</MONTH><DAY>28</DAY></DATE><COMMENT>What are fakes and some advice on maintaining them.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Testing on the Toilet: Test Behavior, Not Implementation</T><A>https://testing.googleblog.com/2013/08/testing-on-toilet-test-behavior-not.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Andrew</FIRSTNAME><LASTNAME>Trenk</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>8</MONTH><DAY>5</DAY></DATE><COMMENT>The title says all.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Testing on the Toilet: Effective Testing</T><A>https://testing.googleblog.com/2014/05/testing-on-toilet-effective-testing.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Rich</FIRSTNAME><LASTNAME>Martin</LASTNAME></AUTHOR><DATE><YEAR>2014</YEAR><MONTH>5</MONTH><DAY>7</DAY></DATE><COMMENT>The qualities of good tests: high sensitivity to defects in production code, resilience to changes in production code, precision on the location of a bug when tests fail.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Testing on the Toilet: Risk-Driven Testing</T><A>https://testing.googleblog.com/2014/05/testing-on-toilet-risk-driven-testing.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Peter</FIRSTNAME><LASTNAME>Arrenbrecht</LASTNAME></AUTHOR><DATE><YEAR>2014</YEAR><MONTH>5</MONTH><DAY>30</DAY></DATE><COMMENT>The risks must be considered to define what tests to write.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Testing on the Toilet: Don't Put Logic in Tests</T><A>https://testing.googleblog.com/2014/07/testing-on-toilet-dont-put-logic-in.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Erik</FIRSTNAME><LASTNAME>Kuefler</LASTNAME></AUTHOR><DATE><YEAR>2014</YEAR><MONTH>7</MONTH><DAY>31</DAY></DATE><COMMENT>The code of a test should be very simple.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Testing on the Toilet: Web Testing Made Easier: Debug IDs</T><A>https://testing.googleblog.com/2014/08/testing-on-toilet-web-testing-made.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Ruslan</FIRSTNAME><LASTNAME>Khamitov</LASTNAME></AUTHOR><DATE><YEAR>2014</YEAR><MONTH>8</MONTH><DAY>12</DAY></DATE><COMMENT>Give an ID to HTML elements.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Testing on the Toilet: Writing Descriptive Test Names</T><A>https://testing.googleblog.com/2014/10/testing-on-toilet-writing-descriptive.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Andrew</FIRSTNAME><LASTNAME>Trenk</LASTNAME></AUTHOR><DATE><YEAR>2014</YEAR><MONTH>10</MONTH><DAY>16</DAY></DATE><COMMENT>The title says all.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Testing on the Toilet: Truth: a fluent assertion framework</T><A>https://testing.googleblog.com/2014/12/testing-on-toilet-truth-fluent.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Dori</FIRSTNAME><LASTNAME>Reuveni</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Kurt Alfred</FIRSTNAME><LASTNAME>Kluever</LASTNAME></AUTHOR><DATE><YEAR>2014</YEAR><MONTH>12</MONTH><DAY>19</DAY></DATE><COMMENT>The presentation of <X><T>Truth</T><A>http://google.github.io/truth/</A><L>en</L><F>HTML</F></X>, yet another assertion library.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Testing on the Toilet: Prefer Testing Public APIs Over Implementation-Detail Classes</T><A>https://testing.googleblog.com/2015/01/testing-on-toilet-prefer-testing-public.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Andrew</FIRSTNAME><LASTNAME>Trenk</LASTNAME></AUTHOR><DATE><YEAR>2015</YEAR><MONTH>1</MONTH><DAY>14</DAY></DATE><COMMENT>Do not test implementation details.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Testing on the Toilet: Change-Detector Tests Considered Harmful</T><A>https://testing.googleblog.com/2015/01/testing-on-toilet-change-detector-tests.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Alex</FIRSTNAME><LASTNAME>Eagle</LASTNAME></AUTHOR><DATE><YEAR>2015</YEAR><MONTH>1</MONTH><DAY>27</DAY></DATE><COMMENT>Tests should not mimic the code in production, but should check the correct behavior of this one.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Testing on the Toilet: What Makes a Good End-to-End Test?</T><A>https://testing.googleblog.com/2016/09/testing-on-toilet-what-makes-good-end.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Adam</FIRSTNAME><LASTNAME>Bender</LASTNAME></AUTHOR><DATE><YEAR>2017</YEAR><MONTH>9</MONTH><DAY>21</DAY></DATE><COMMENT>The title says all.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Testing on the Toilet: Only Verify State-Changing Method Calls</T><A>https://testing.googleblog.com/2017/12/testing-on-toilet-only-verify-state.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Dillon</FIRSTNAME><LASTNAME>Bly</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Andrew</FIRSTNAME><LASTNAME>Trenk</LASTNAME></AUTHOR><DATE><YEAR>2017</YEAR><MONTH>12</MONTH><DAY>11</DAY></DATE><COMMENT>When checking calls done on a mock, only the ones changing state should be verified.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Testing on the Toilet: Keep Cause and Effect Clear</T><A>https://testing.googleblog.com/2017/01/testing-on-toilet-keep-cause-and-effect.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Ben</FIRSTNAME><LASTNAME>Yu</LASTNAME></AUTHOR><DATE><YEAR>2017</YEAR><MONTH>12</MONTH><DAY>11</DAY></DATE><COMMENT>You should keep the Act part of the test near its Assert part.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Testing on the Toilet: Cleanly Create Test Data</T><A>https://testing.googleblog.com/2018/02/testing-on-toilet-cleanly-create-test.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Ben</FIRSTNAME><LASTNAME>Yu</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>2</MONTH><DAY>20</DAY></DATE><COMMENT>For arranging test data, create a helper with adequate default values, and write tests that do not rely on these default values and set all the values they require.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Testing on the Toilet: Keep Tests Focused</T><A>https://testing.googleblog.com/2018/06/testing-on-toilet-keep-tests-focused.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Ben</FIRSTNAME><LASTNAME>Yu</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>6</MONTH><DAY>11</DAY></DATE><COMMENT>A test should check only one scenario.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Testing on the Toilet: Only Verify Relevant Method Arguments</T><A>https://testing.googleblog.com/2018/06/testing-on-toilet-only-verify-relevant.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Dillon</FIRSTNAME><LASTNAME>Bly</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>6</MONTH><DAY>26</DAY></DATE><COMMENT>A test should check only the output data linked to the behaviour its checks.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Testing on the Toilet: Exercise Service Call Contracts in Tests</T><A>https://testing.googleblog.com/2018/11/testing-on-toilet-exercise-service-call.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Ben</FIRSTNAME><LASTNAME>Yu</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>11</MONTH><DAY>27</DAY></DATE><COMMENT>When testing code relying on a service, it is better to use a fake or a hermetic server rather than a mock.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Testing on the Toilet: Tests Too DRY? Make Them DAMP!</T><A>https://testing.googleblog.com/2019/12/testing-on-toilet-tests-too-dry-make.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Derek</FIRSTNAME><LASTNAME>Snyder</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Erik</FIRSTNAME><LASTNAME>Kuefler</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>12</MONTH><DAY>3</DAY></DATE><COMMENT>Test code should focus more on readability rather than on uniqueness.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>The Clean Code Talks: writing testable code</TITLE>
      <ITEM><ARTICLE><X><T>Clean Code Talks - "GuiceBerry"</T><A>https://www.youtube.com/watch?v=4E4672CS58Q</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>49</MINUTE><SECOND>11</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Luiz-Otavio</FIRSTNAME><LASTNAME>Zorzella</LASTNAME></AUTHOR><DATE><YEAR>2008</YEAR><MONTH>10</MONTH><DAY>9</DAY></DATE><COMMENT>A presentation of GuiceBerry.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>"The Clean Code Talks -- Unit Testing"</T><A>https://www.youtube.com/watch?v=wEhu57pih5w</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>32</MINUTE><SECOND>7</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Miško</FIRSTNAME><LASTNAME>Hevery</LASTNAME></AUTHOR><DATE><YEAR>2008</YEAR><MONTH>10</MONTH><DAY>30</DAY></DATE><COMMENT>An introduction to unit testing and dependency injection.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>The Clean Code Talks - Don't Look For Things!</T><A>https://www.youtube.com/watch?v=RlfLCWKxHJ0</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>37</MINUTE><SECOND>56</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Miško</FIRSTNAME><LASTNAME>Hevery</LASTNAME></AUTHOR><DATE><YEAR>2008</YEAR><MONTH>11</MONTH><DAY>6</DAY></DATE><COMMENT>How to write testable code: dependency injection, separating the business logic and the builders, not asserting non-nullness (in my mind, this advice is very bad and the example he gives is badly exploited: the test assumes that the door is not repainted by the <CODEROUTINE>paint()</CODEROUTINE> method, if this is changed in the future, the test breaks)…</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>The Clean Code Talks - "Global State and Singletons"</T><A>https://www.youtube.com/watch?v=-FRm3VPhseI</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>54</MINUTE><SECOND>8</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Miško</FIRSTNAME><LASTNAME>Hevery</LASTNAME></AUTHOR><DATE><YEAR>2008</YEAR><MONTH>11</MONTH><DAY>13</DAY></DATE><COMMENT>Why global state is evil and should be get rid of by using dependency injection.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>"The Clean Code Talks -- Inheritance, Polymorphism, &amp; Testing"</T><A>https://www.youtube.com/watch?v=4F72VULWFvc</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>38</MINUTE><SECOND>24</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Miško</FIRSTNAME><LASTNAME>Hevery</LASTNAME></AUTHOR><DATE><YEAR>2008</YEAR><MONTH>11</MONTH><DAY>20</DAY></DATE><COMMENT>Nothing interesting here, this presentation is a basic teaching of the purpose of polymorphism.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Design Tech Talk Series Presents: OO Design for Testability</T><A>https://www.youtube.com/watch?v=acjvKJiOvXw</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>56</MINUTE><SECOND>2</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Miško</FIRSTNAME><LASTNAME>Hevery</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>10</MONTH><DAY>6</DAY></DATE><COMMENT>The same information as the previous videos: do not call <CODEROUTINE>new</CODEROUTINE> in the class constructor but inject the dependencies, do not perform work in the constructor, do not use global states, and avoid diving deep in the entities relationship to get some data.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>How to Write Clean, Testable Code</T><A>https://www.youtube.com/watch?v=XcT4yYu_TTs</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>18</MINUTE><SECOND>41</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Miško</FIRSTNAME><LASTNAME>Hevery</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>12</MONTH><DAY>15</DAY></DATE><COMMENT>Still the same information as the previous videos.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>GTAC</TITLE>
      <ITEM><BLIST><TITLE>2006</TITLE>
        <ITEM><ARTICLE><X><T>Literate functional testing</T><A>https://www.youtube.com/watch?v=ClH9xCs3q4I</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>7</MINUTE><SECOND>50</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Robert</FIRSTNAME><LASTNAME>Chatley</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Tom</FIRSTNAME><LASTNAME>White</LASTNAME></AUTHOR><DATE><YEAR>2006</YEAR><MONTH>9</MONTH><DAY>7</DAY></DATE><COMMENT>The two guys have created a test framework in which tests are readable by non-software persons. Despite what they say, I am still doubting a lot about this interest of this…</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Google Test Automation Conference Lightning Talks</T><A>https://www.youtube.com/watch?v=mR2VmDVgX6E</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>46</MINUTE><SECOND>28</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Harry</FIRSTNAME><LASTNAME>Robinson</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Dan</FIRSTNAME><LASTNAME>North</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Steve</FIRSTNAME><LASTNAME>Freeman</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Nat</FIRSTNAME><LASTNAME>Pryce</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Christine</FIRSTNAME><LASTNAME>Newman</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Andrin</FIRSTNAME><MIDDLENAME>von</MIDDLENAME><LASTNAME>Rechenberg</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Ade</FIRSTNAME><LASTNAME>Oshineye</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Timur</FIRSTNAME><LASTNAME>Hairullin</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>James</FIRSTNAME><LASTNAME>Richardson</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>James</FIRSTNAME><LASTNAME>Lyndsay</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Jordan</FIRSTNAME><LASTNAME>Dea-Mattson</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Curtis</FIRSTNAME><MIDDLENAME>"Ovid"</MIDDLENAME><LASTNAME>Poe</LASTNAME></AUTHOR><DATE><YEAR>2006</YEAR><MONTH>9</MONTH><DAY>8</DAY></DATE><COMMENT><BLIST><TITLE>Some lightning talks:</TITLE><ITEM>automated test and lean manufacturing/product design</ITEM><ITEM>jMock</ITEM><ITEM>jMock2 vs jMock1</ITEM><ITEM>how to explain the value of automated test to non-IT persons</ITEM><ITEM>building a database of User Agent capabilities</ITEM><ITEM>some advertisement for ThoughtWorks</ITEM><ITEM>take into account the JavaScript execution time on the client PC</ITEM><ITEM>how to sell automated test?</ITEM><ITEM>some tests need to be manual but manual testers need to use their brain more than their hands so they require stuff like snippets of automation, bulk comparison, and virtual machines</ITEM><ITEM>avoiding single point of failure in test strategies: integrating the testing levels and the development tools, and TestQuest</ITEM><ITEM>Test Anything Protocol</ITEM></BLIST></COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>2007</TITLE>
        <ITEM><ARTICLE><X><T>GTAC 2007: Patrick Copeland - Keynote</T><A>https://www.youtube.com/watch?v=pDtfMYyaTQY</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>45</MINUTE><SECOND>10</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Patrick</FIRSTNAME><LASTNAME>Copeland</LASTNAME></AUTHOR><DATE><YEAR>2007</YEAR><MONTH>8</MONTH><DAY>23</DAY></DATE><COMMENT>Patrick Copeland presents Google testing: the challenge to test complex systems, having developers writing tests, certification within one day…</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>2008</TITLE>
        <ITEM><ARTICLE><X><T>GTAC 2008: Advances in Automated Software Testing Technologies</T><A>https://www.youtube.com/watch?v=HEpSdSyU03I</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>50</MINUTE><SECOND>49</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Elfriede</FIRSTNAME><LASTNAME>Dustin</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Marcus</FIRSTNAME><LASTNAME>Borch</LASTNAME></AUTHOR><DATE><YEAR>2008</YEAR><MONTH>10</MONTH><DAY>23</DAY></DATE><COMMENT>The speakers describe how their company, <X><T>Innovative Defense Technologies</T><A>https://idtus.com/</A><L>en</L><F>HTML</F></X>, is using many open source tools to automatically generate automated tests.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2008: The Value of Small Tests</T><A>https://www.youtube.com/watch?v=MpG2i_6nkUg</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>38</MINUTE><SECOND>7</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Christopher</FIRSTNAME><LASTNAME>Semturs</LASTNAME></AUTHOR><DATE><YEAR>2008</YEAR><MONTH>10</MONTH><DAY>24</DAY></DATE><COMMENT>How a tester can/should educate developers to perform tests by using dependency injection and mocks.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2008: The New Genomics - Software Development at Petabyte Scale</T><A>https://www.youtube.com/watch?v=A64WKH9gNI8</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>48</MINUTE><SECOND>0</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Matt</FIRSTNAME><LASTNAME>Wood</LASTNAME></AUTHOR><DATE><YEAR>2008</YEAR><MONTH>10</MONTH><DAY>23</DAY></DATE><COMMENT>A description of the hardware/software the <X><T>Wellcome Sanger Institute</T><A>https://www.sanger.ac.uk/</A><L>en</L><F>HTML</F></X> uses to handle 75 petabytes of data per week.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2008: Taming the Beast - How to Test an AJAX Application</T><A>https://www.youtube.com/watch?v=5jjrTBFZWgk</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>1</MINUTE><SECOND>18</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Markus</FIRSTNAME><LASTNAME>Clermont</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>John</FIRSTNAME><LASTNAME>Thomas</LASTNAME></AUTHOR><DATE><YEAR>2008</YEAR><MONTH>10</MONTH><DAY>23</DAY></DATE><COMMENT>Markus and John suggest testing each layer independently, then testing layer pairs, and at last doing a few tests on the whole system. The quick informal survey of the audience is also interesting.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2008: Practicing Testability in the Real World</T><A>https://www.youtube.com/watch?v=hL829wNaF78</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>7</MINUTE><SECOND>10</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Vishal</FIRSTNAME><LASTNAME>Chowdhary</LASTNAME></AUTHOR><DATE><YEAR>2008</YEAR><MONTH>10</MONTH><DAY>24</DAY></DATE><COMMENT>Vishal arguments why testability should be taken into account when designing software. He also describes the SOCK principle: Simplicity, Observability, Control, and Knowledge.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>2009</TITLE>
        <ITEM><ARTICLE><X><T>GTAC 2009 - Precondition Satisfaction by Smart Object Select</T><A>https://www.youtube.com/watch?v=HjVdmXGP84s</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>56</MINUTE><SECOND>50</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Yi</FIRSTNAME><LASTNAME>Wei</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Serge</FIRSTNAME><LASTNAME>Gebhardt</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>10</MONTH><DAY>21</DAY></DATE><COMMENT>Trying to get better random tests by selecting only the inputs objects that fulfil the preconditions.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X quality='1'><T>GTAC 2009 - Fighting Layout Bugs</T><A>https://www.youtube.com/watch?v=WY3C6FHqSqQ</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>56</MINUTE><SECOND>54</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Michael</FIRSTNAME><LASTNAME>Tamm</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>10</MONTH><DAY>21</DAY></DATE><COMMENT>Michael Tamm presents three ways to find some layout bugs: validating the HTML, validating the CSS, and, his real novelty, writing some heuristics to analyze the page.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2009 - Achieving Web Test Automation with a Mixed-Skill</T><A>https://www.youtube.com/watch?v=kCpDskZpA3I</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>58</MINUTE><SECOND>47</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Mark</FIRSTNAME><LASTNAME>Micallef</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>10</MONTH><DAY>21</DAY></DATE><COMMENT>Mark Micallef explains how he has started to use cucumber to allow different types of profiles (analysts vs enginers) to test web sites and .NET applications.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2009 - Automatic Workarounds for Web Applications</T><A>https://www.youtube.com/watch?v=P0W-HuoFDro</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>58</MINUTE><SECOND>0</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Mauro</FIRSTNAME><LASTNAME>Pezzè</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Alessandra</FIRSTNAME><LASTNAME>Gorla</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>10</MONTH><DAY>21</DAY></DATE><COMMENT>A study creating a database of workarounds and trying to apply them automatically when the user reports a failure. I am not sure of the interest of this: this cannot be used for applications modifying data (the data would be garbaged by the workaround tries), this can probably work only for some scripting languages, the set of bug types must be limited…</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2009 - Lightning Talks</T><A>https://www.youtube.com/watch?v=SMPSURr0QXo</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>41</MINUTE><SECOND>53</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Sylvain</FIRSTNAME><LASTNAME>Hallé</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Fred</FIRSTNAME><LASTNAME>Beringer</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>David</FIRSTNAME><LASTNAME>Conti</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Jason</FIRSTNAME><LASTNAME>Huggins</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Raphaël</FIRSTNAME><LASTNAME>Marvie</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Alec</FIRSTNAME><LASTNAME>Munru</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Chritiane</FIRSTNAME><LASTNAME>Phillips</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Weiwei</FIRSTNAME><LASTNAME>Cheng</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>10</MONTH><DAY>21</DAY></DATE><COMMENT>Some random subjects with a few interesting presentations.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2009 - Score One for Quality!</T><A>https://www.youtube.com/watch?v=m7hI_ah-bt0</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>45</MINUTE><SECOND>15</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Joshua</FIRSTNAME><LASTNAME>Williams</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Ross</FIRSTNAME><LASTNAME>Smith</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>10</MONTH><DAY>22</DAY></DATE><COMMENT>The speakers suggest using games, inside a company, to perform some testing activities. They give the example of crowdsourcing (internally to Microsoft) the review of Windows 7 localizations.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2009 - JsTestDriver</T><A>https://www.youtube.com/watch?v=aDKGGZv-T4M</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>42</MINUTE><SECOND>21</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Jeremie</FIRSTNAME><LASTNAME>Lenfant-Engelmann</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>10</MONTH><DAY>22</DAY></DATE><COMMENT>A presentation of JsTextDriver, a JavaScript test-running platform able to drive several browsers in parallel.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2009 - Automated Performance Test Data Collection and Reporting</T><A>https://www.youtube.com/watch?v=qQgDDAan4rM</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>52</MINUTE><SECOND>25</SECOND></DURATION></X><AUTHOR><FIRSTNAME>David</FIRSTNAME><LASTNAME>Burns</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>David</FIRSTNAME><LASTNAME>Henderson</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>10</MONTH><DAY>22</DAY></DATE><COMMENT>A description of an automated performance measurement and reporting environment. YSlow is used for generating the data.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>2010</TITLE>
        <ITEM><ARTICLE><X><T>GTAC 2010: The Future of Front-End Testing</T><A>https://www.youtube.com/watch?v=oX-0Mt5zju0</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>53</MINUTE><SECOND>48</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Simon</FIRSTNAME><LASTNAME>Stewart</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Greg</FIRSTNAME><LASTNAME>Dennis</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>10</MONTH><DAY>28</DAY></DATE><COMMENT>Some advice on automated front-end tests, Selenium, and the good and bad things looming in the future.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2010: Crowd Source Testing, Mozilla Community Style</T><A>https://www.youtube.com/watch?v=-MkyZG2Wa_E</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>54</MINUTE><SECOND>17</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Matt</FIRSTNAME><LASTNAME>Evans</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>10</MONTH><DAY>28</DAY></DATE><COMMENT>Some information on Mozilla testing process.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2010: Special Lightning Talk - Testivus on Testability</T><A>https://www.youtube.com/watch?v=wJbQgC_KTtg</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>5</MINUTE><SECOND>58</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Alberto</FIRSTNAME><LASTNAME>Savoia</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>10</MONTH><DAY>28</DAY></DATE><COMMENT>The humorous karma of unit testing.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2010: What Testability Tells Us About the Software Performance Envelope</T><A>https://www.youtube.com/watch?v=1keyEiJHqPw</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>5</MINUTE><SECOND>36</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Robert</FIRSTNAME><MIDDLENAME>V.</MIDDLENAME><LASTNAME>Binder</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>10</MONTH><DAY>28</DAY></DATE><COMMENT>A general presentation on testing where Robert V. Binder claims that model-based testing enables to improve by two orders of magnitude the test productivity and the resulting product reliability.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2010: Automatically Generating Test Data for Web Applications</T><A>https://www.youtube.com/watch?v=lmS5ElMyIHU</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>12</MINUTE><SECOND>45</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Jeff</FIRSTNAME><LASTNAME>Offutt</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>10</MONTH><DAY>29</DAY></DATE><COMMENT>Most of this talk is general information about testing which has been heard thousands times before, only the Automated Test Data Generation part is interesting.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2010: Lessons Learned from Testability Failures</T><A>https://www.youtube.com/watch?v=4CFj5thxYQA</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>40</MINUTE><SECOND>29</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Esteban</FIRSTNAME><MIDDLENAME>Manchado</MIDDLENAME><LASTNAME>Velázquez</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>10</MONTH><DAY>29</DAY></DATE><COMMENT>Some examples from Opera where the software was not properly testable and why testability is important.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2010: Turning Quality on its Head</T><A>https://www.youtube.com/watch?v=cqwXUTjcabs</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>18</MINUTE><SECOND>29</SECOND></DURATION></X><AUTHOR><FIRSTNAME>James</FIRSTNAME><LASTNAME>Whittaker</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>10</MONTH><DAY>29</DAY></DATE><COMMENT>After some general comment on developers vs testers, a presentation of Testify, a tool based on ACC (Attribute / Component / Capability) to help testers being more productive.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2010: Flexible Design? Testable Design? You Don't Have To Choose!</T><A>https://www.youtube.com/watch?v=K3q_y8H1ZTo</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>3</MINUTE><SECOND>8</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Russ</FIRSTNAME><LASTNAME>Rufer</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Tracy</FIRSTNAME><LASTNAME>Bialik</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>10</MONTH><DAY>29</DAY></DATE><COMMENT>Russ and Tracy describe some design mistakes, describe how to fix them, and explain why the fixed design also results into a better testability.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2010: Twist, A Next Generation Functional Testing Tool for Building and Evolving Test Suites</T><A>https://www.youtube.com/watch?v=13oE_7SVGoQ</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>48</MINUTE><SECOND>57</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Vivek</FIRSTNAME><LASTNAME>Prahlad</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>10</MONTH><DAY>28</DAY></DATE><COMMENT>A presentation of Twist, a tool to write test scenario at a functional level.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>2011</TITLE>
        <ITEM><ARTICLE><X><T>GTAC 2011: Opening Keynote Address - Test is Dead</T><A>https://www.youtube.com/watch?v=X1jWe5rOu3g</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>57</MINUTE><SECOND>53</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Alberto</FIRSTNAME><LASTNAME>Savoia</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>10</MONTH><DAY>26</DAY></DATE><COMMENT>The evolution of testing: from building it right to building the right it, by using pretotyping / Minimum Viable Product.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2011: Keynote - How Hackers See Bugs</T><A>https://www.youtube.com/watch?v=onpxOG3TrWg</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>16</MINUTE><SECOND>29</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Hugh</FIRSTNAME><LASTNAME>Thompson</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>10</MONTH><DAY>26</DAY></DATE><COMMENT>Some random ideas about security, there is nothing new here, but Hugh Thompson is a good showman.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2011: Developing and Testing WebGL</T><A>https://www.youtube.com/watch?v=olyxa0LVtiI</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>33</MINUTE><SECOND>45</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Roy</FIRSTNAME><LASTNAME>Williams</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>10</MONTH><DAY>26</DAY></DATE><COMMENT>After a short introduction to WebGL, some advice on testing applications using it and the announcement of GLSL-Unit, a unit testing framework to test shaders.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2011: BidiChecker: Automated Bidi Testing of Web Applications</T><A>https://www.youtube.com/watch?v=dTrzDFP8yVg</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>34</MINUTE><SECOND>11</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Yana</FIRSTNAME><LASTNAME>Margolin</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Jason</FIRSTNAME><LASTNAME>Elbaum</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>10</MONTH><DAY>26</DAY></DATE><COMMENT>First, a description of the bidi problem, then a presentation of a tool to detect bidi bugs.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2011: How to Hit a Moving Target in the Cloud</T><A>https://www.youtube.com/watch?v=Q2fUFSdUq20</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>44</MINUTE><SECOND>0</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Vishal</FIRSTNAME><LASTNAME>Chowdhary</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>10</MONTH><DAY>26</DAY></DATE><COMMENT>How Microsoft is testing its translator service, a piece of software whose results are always evolving.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2011: Lightning Talks I</T><A>https://www.youtube.com/watch?v=h7kk-WdiPy0</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>28</MINUTE><SECOND>36</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Roussi</FIRSTNAME><LASTNAME>Roussev</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Chris</FIRSTNAME><LASTNAME>Chen</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Timothy</FIRSTNAME><LASTNAME>Crooks</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Ekaterina</FIRSTNAME><LASTNAME>Kamenskaya</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Sai</FIRSTNAME><LASTNAME>Chintala</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>10</MONTH><DAY>26</DAY></DATE><COMMENT>Using the cloud for testing, ScriptCover (a JS test coverage tool), SalesForce testing infrastructure…</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2011: Keynote - Part the Clouds and See Fact from Fiction</T><A>https://www.youtube.com/watch?v=nXIA3VYN1To</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>53</MINUTE><SECOND>13</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Anthony</FIRSTNAME><LASTNAME>Voellm</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>10</MONTH><DAY>27</DAY></DATE><COMMENT>Some very high level information about the cloud and about testing in it. Nevertheless, the whole overview is OK.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2011: WebDriver</T><A>https://www.youtube.com/watch?v=OsNkcUq0veI</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>45</MINUTE><SECOND>20</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Simon</FIRSTNAME><LASTNAME>Stewart</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>10</MONTH><DAY>27</DAY></DATE><COMMENT>How to create a test infrastructure using WebDriver.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2011: Lightning Talks II (Web Testing)</T><A>https://www.youtube.com/watch?v=bU5lb32EY8s</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>26</MINUTE><SECOND>7</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Dounia</FIRSTNAME><LASTNAME>Berrada</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>David</FIRSTNAME><LASTNAME>Clarke</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Matt</FIRSTNAME><LASTNAME>DeVore</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>David</FIRSTNAME><LASTNAME>Burns</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Jerome</FIRSTNAME><LASTNAME>Mueller</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>10</MONTH><DAY>27</DAY></DATE><COMMENT>WebDriver for mobiles, writing tests in plain English, heat map, NativeDriver to test native iOS and Android applications…</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X quality ='-1'><T>GTAC 2011: The Latest in Google Test Tools</T><A>https://www.youtube.com/watch?v=fQtBrmUU8Uk</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>57</MINUTE><SECOND>25</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Ibrahim</FIRSTNAME><MIDDLENAME>El</MIDDLENAME><LASTNAME>Far</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Jason</FIRSTNAME><LASTNAME>Arbon</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>10</MONTH><DAY>27</DAY></DATE><COMMENT>A presentation of BITE (the "head up display" bug reporting system that James Whittaker described in the past) and of some quality bots.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2011: Closing Keynote - Secrets of World Class Software Organizations</T><A>https://www.youtube.com/watch?v=EE-t5J7hnHE</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>3</MINUTE><SECOND>42</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Steve</FIRSTNAME><LASTNAME>McConnell</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>10</MONTH><DAY>27</DAY></DATE><COMMENT>The common traits of the best software companies: hiring the best talents, strong sense of mission, business accountability, commitment to quality, frequent introspection, practices adapted to teams, all of these resulting into a high commitment of the staff.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>2013</TITLE>
        <ITEM><ARTICLE><X><T>GTAC 2013: WebDriver for Chrome</T><A>https://www.youtube.com/watch?v=dMwUZxRgJWs</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>15</MINUTE><SECOND>6</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Ken</FIRSTNAME><LASTNAME>Kania</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>4</MONTH><DAY>23</DAY></DATE><COMMENT>A new version of WebDriver for Chrome is available, aiming at supporting all platforms. This talk quickly describes how this new version has been implemented.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2013: Karma - Test Runner for JavaScript</T><A>https://www.youtube.com/watch?v=YG5DEzaQBIc</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>15</MINUTE><SECOND>34</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Vojta</FIRSTNAME><LASTNAME>Jina</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>4</MONTH><DAY>23</DAY></DATE><COMMENT>Description of Karma, a JavaScript Unit Test runner.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2013 Day 1 Closing Keynote: How Facebook Tests Facebook on Android</T><A>https://www.youtube.com/watch?v=HUE_yrd8tl0</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>46</MINUTE><SECOND>43</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Simon</FIRSTNAME><LASTNAME>Stewart</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>4</MONTH><DAY>23</DAY></DATE><COMMENT>A description of Facebook development environment: each team develops its features on all platforms, Git with one branch, homemade build system, tests…</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X quality='1'><T>GTAC 2013 Day 2 Keynote: Testable JavaScript - Architecting Your Application for Testability</T><A>https://www.youtube.com/watch?v=JjqKQ8ezwKQ</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>45</MINUTE><SECOND>36</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Mark</FIRSTNAME><LASTNAME>Trostler</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>4</MONTH><DAY>24</DAY></DATE><COMMENT>How to write testable JavaScript. This is mostly about applying the SOLID principles.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2013: Web Performance Testing with WebDriver</T><A>https://www.youtube.com/watch?v=0_kAPWSZNY4</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>14</MINUTE><SECOND>25</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Michael</FIRSTNAME><LASTNAME>Klepikov</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>4</MONTH><DAY>24</DAY></DATE><COMMENT>Chrome WebDriver has been extended to support profiling, so it is now possible to automate performance tests with it.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X quality='-1'><T>GTAC 2013: Finding Culprits Automatically in Failing Builds - i.e. Who Broke the Build?</T><A>https://www.youtube.com/watch?v=SZLuBYlq3OM</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>16</MINUTE><SECOND>34</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Celal</FIRSTNAME><LASTNAME>Ziftci</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Vivek</FIRSTNAME><LASTNAME>Ramavajjala</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>4</MONTH><DAY>24</DAY></DATE><COMMENT>A tool using heuristics to find which commit broke the build.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X quality='-1'><T>GTAC 2013: Empirical Investigation of Software Product Line Quality</T><A>https://www.youtube.com/watch?v=fiG-SdNcjTE</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>44</MINUTE><SECOND>42</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Katerina</FIRSTNAME><LASTNAME>Goseva-Popstojanova</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>4</MONTH><DAY>24</DAY></DATE><COMMENT>Using statistics to try to build a predictive model of which modules will contain the most bugs.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2013: AddressSanitizer, ThreadSanitizer and MemorySanitizer -- Dynamic Testing Tools for C++</T><A>https://www.youtube.com/watch?v=Q2C2lP8_tNE</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>29</MINUTE><SECOND>14</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kostya</FIRSTNAME><LASTNAME>Serebryany</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>4</MONTH><DAY>24</DAY></DATE><COMMENT>The title says all.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>GTAC 2013: Drinking the Ocean - Finding XSS at Google Scale</T><A>https://www.youtube.com/watch?v=rd5TZKRg-lc</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>31</MINUTE><SECOND>18</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Claudio</FIRSTNAME><LASTNAME>Criscione</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>4</MONTH><DAY>24</DAY></DATE><COMMENT>The history of how a Google team created a tool to detect XSS bugs.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
    </BLIST></ITEM>
  </BLIST></ITEM>
</LLIST>
</CONTENT>
</PAGE>