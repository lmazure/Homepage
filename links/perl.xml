<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../css/strict.xsl"?>
<PAGE status="unmaintained" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../css/schema.xsd" xml:lang="en">
<TITLE>Perl</TITLE>
<PATH>links/perl.xml</PATH>
<DATE><YEAR>2022</YEAR><MONTH>9</MONTH><DAY>16</DAY></DATE>
<CONTENT>
<LLIST>
  <ITEM><SLIST>
    <ITEM><CLIST>
      <ITEM><X><T>perl.com</T><A>https://www.perl.com</A><L>en</L><F>HTML</F><FEED><A>https://www.perl.com/index.xml</A><F>Atom</F></FEED></X></ITEM>
      <ITEM><X><T>perl.org</T><A>https://www.perl.org/</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>Raku</T><A>https://raku.org/</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>Perl Mongers</T><A>https://www.pm.org/</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>ActivePerl</T><A>https://www.activestate.com/products/perl/</A><L>en</L><F>HTML</F></X></ITEM>
    </CLIST></ITEM>
    <ITEM><X><T>CPAN</T><A>https://www.cpan.org/</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X><T>Perldoc</T><A>https://perldoc.perl.org/</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X status="obsolete"><T>Perl 5 Reference Guide</T><A>https://www.rexswain.com/perl5.html</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><BLIST><TITLE>Scripts</TITLE>
      <ITEM><X><T>Perl Power Tools</T><A>https://metacpan.org/pod/PerlPowerTools</A><L>en</L><F>HTML</F></X></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Modules</TITLE>
      <ITEM><X status="dead"><T>libwww-perl</T><A>http://gitorious.org/libwww-perl</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X status="dead"><T>SOAP::Lite</T><A>http://www.soaplite.com/</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>HTML::Mason</T><A>http://www.masonhq.com/</A><L>en</L><F>HTML</F></X></ITEM>
    </BLIST></ITEM>
    <ITEM><CLIST><TITLE>Books and 'zines</TITLE>
      <ITEM><X><T>The Perl Review</T><A>https://www.theperlreview.com/</A><L>en</L><F>HTML</F></X></ITEM>
    </CLIST></ITEM>
    <ITEM><X><T>personal notes</T><A>../notes/perl.htm</A><L>en</L><F>HTML</F></X></ITEM>
  </SLIST></ITEM>
  <ITEM><BLIST><TITLE>Articles and videos</TITLE>
    <ITEM><BLIST><TITLE>Books</TITLE>
      <ITEM><ARTICLE><X><T>Perl 5 by Example</T><A>https://affy.blogspot.com/p5be/index.htm</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>David</FIRSTNAME><LASTNAME>Medinets</LASTNAME></AUTHOR><DATE><YEAR>1996</YEAR></DATE><COMMENT>Yet another book on Perl.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Introduction</TITLE>
      <ITEM><ARTICLE><X><T>Getting started with Perl, Part 1</T><A>https://www.kingcomputerservices.com/unix_101/getting_started_with_perl_part_1.htm</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Mo</FIRSTNAME><LASTNAME>Budlong</LASTNAME></AUTHOR><DATE><YEAR>1999</YEAR><MONTH>5</MONTH></DATE><COMMENT>A quick introduction to functions, arrays and file reading in Perl.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE predecessor="https://www.kingcomputerservices.com/unix_101/getting_started_with_perl_part_1.htm"><X><T>Getting started with Perl, Part 2</T><A>https://www.kingcomputerservices.com/unix_101/getting_started_with_perl_part_2.htm</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Mo</FIRSTNAME><LASTNAME>Budlong</LASTNAME></AUTHOR><DATE><YEAR>1999</YEAR><MONTH>6</MONTH></DATE><COMMENT>Mo describes how to declare a routine, call it and get its parameters, how to use named blocks and how to open a file in write, read or append mode.</COMMENT></ARTICLE></ITEM>
      <ITEM><BLIST><TITLE>Road to better programming</TITLE>
        <ITEM><ARTICLE><X><T>Road to better programming: Chapter 1. Developing coding guidelines</T><A>http://www.opensourcetutorials.com/tutorials/Server-Side-Coding/Perl/developing-coding-guidelines/page1.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Teodor</FIRSTNAME><LASTNAME>Zlatanov</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>11</MONTH></DATE><COMMENT>An overview of the author book and the interest of code guidelines.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="http://www.opensourcetutorials.com/tutorials/Server-Side-Coding/Perl/developing-coding-guidelines/page1.html"><X><T>Road to better programming: Chapter 2. Commenting your code</T><A>http://www.opensourcetutorials.com/tutorials/Server-Side-Coding/Perl/commenting-your-code/page1.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Teodor</FIRSTNAME><LASTNAME>Zlatanov</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>11</MONTH></DATE><COMMENT>How to comment code.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="http://www.opensourcetutorials.com/tutorials/Server-Side-Coding/Perl/commenting-your-code/page1.html"><X><T>Road to better programming: Chapter 3. Loops, clean code, and the Perl idioms</T><A>http://www.opensourcetutorials.com/tutorials/Server-Side-Coding/Perl/loops-clean-code-perl-idioms/page1.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Teodor</FIRSTNAME><LASTNAME>Zlatanov</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>12</MONTH></DATE><COMMENT>Choosing the right flow controls: loops, tests…</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="http://www.opensourcetutorials.com/tutorials/Server-Side-Coding/Perl/loops-clean-code-perl-idioms/page1.html"><X><T>Road to better programming: Chapter 4. Functional programming</T><A>http://www.opensourcetutorials.com/tutorials/Server-Side-Coding/Perl/functional-programming/page1.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Teodor</FIRSTNAME><LASTNAME>Zlatanov</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>1</MONTH></DATE><COMMENT>An introduction to <CODEROUTINE>map</CODEROUTINE>, <CODEROUTINE>grep</CODEROUTINE> and <CODEROUTINE>sort</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="http://www.opensourcetutorials.com/tutorials/Server-Side-Coding/Perl/functional-programming/page1.html"><X><T>The road to better programming: Chapter 5 Modules and objects</T><A>http://www.opensourcetutorials.com/tutorials/Server-Side-Coding/Perl/modules-and-objects/page1.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Teodor</FIRSTNAME><LASTNAME>Zlatanov</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>1</MONTH></DATE><COMMENT>Some hot air on object orientation and a quick presentation of its Perl implementation.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="http://www.opensourcetutorials.com/tutorials/Server-Side-Coding/Perl/modules-and-objects/page1.html"><X><T>The road to better programming: Chapter 6. Developing cfperl</T><A>http://www.opensourcetutorials.com/tutorials/Server-Side-Coding/Perl/developing-cfperl/page1.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Teodor</FIRSTNAME><LASTNAME>Zlatanov</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>1</MONTH></DATE><COMMENT>The author starts an open source project: choice of the licence, version control, architecture…</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="http://www.opensourcetutorials.com/tutorials/Server-Side-Coding/Perl/developing-cfperl/page1.html"><X><T>The road to better programming: Chapter 7. Top-level control flow</T><A>http://www.opensourcetutorials.com/tutorials/Server-Side-Coding/Perl/top-level-control-flow/page1.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Teodor</FIRSTNAME><LASTNAME>Zlatanov</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>2</MONTH><DAY>5</DAY></DATE><COMMENT>Starting to code… Pity that there are some bugs (inadequate error handling: non existing file, incompatible command line options…).</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="http://www.opensourcetutorials.com/tutorials/Server-Side-Coding/Perl/top-level-control-flow/page1.html"><X><T>The road to better programming: Chapter 8. The top-level and compound-class parsers</T><A>http://www.opensourcetutorials.com/tutorials/Server-Side-Coding/Perl/top-level-compound-class-parsers/page1.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Teodor</FIRSTNAME><LASTNAME>Zlatanov</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>3</MONTH><DAY>6</DAY></DATE><COMMENT>Parsing the configuration files with <CODEROUTINE>Parse::RecDescent</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Core</TITLE>
      <ITEM><ARTICLE><X><T>Perl: Terse and Ugly?</T><A>http://www.antipope.org/charlie/old/attic/perl/one-liner.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Charlie</FIRSTNAME><LASTNAME>Stross</LASTNAME></AUTHOR><COMMENT>About inliners used to remove duplicates in a list.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="dead"><T>Is it a Number?</T><A>https://www.perl.com/doc/FMTEYEWTK/is_numeric.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Tom</FIRSTNAME><LASTNAME>Christiansen</LASTNAME></AUTHOR><DATE><YEAR>1996</YEAR></DATE><COMMENT>A humorous long answer to the question of testing if a string is a number.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="dead"><T>Re: mathematically correct?</T><A>http://hootbah.co.uk/oldsite/FMTEYEWTK/random</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Tom</FIRSTNAME><LASTNAME>Phoenix</LASTNAME></AUTHOR><DATE><YEAR>1997</YEAR><MONTH>3</MONTH><DAY>8</DAY></DATE><COMMENT>A short explanation of why Perl is bad to generate random numbers inside a big range.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="dead"><T>Working with localtime in Perl</T><A>http://www.users.voicenet.com/%7Ecorr/macsupt/macperl/localtime.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Paul</FIRSTNAME><LASTNAME>Corr</LASTNAME></AUTHOR><DATE><YEAR>1999</YEAR></DATE><COMMENT><CODEROUTINE>localtime</CODEROUTINE> for the dummies.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Bless My Referents</T><A>https://www.perl.com/pub/1999/09/refererents.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Damian</FIRSTNAME><LASTNAME>Conway</LASTNAME></AUTHOR><DATE><YEAR>1999</YEAR><MONTH>9</MONTH><DAY>16</DAY></DATE><COMMENT>A very good introduction to references and objects.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="dead"><T>Typeglobs and Function Prototypes</T><A>http://www.perlmonth.com/modules.php?name=News&amp;file=article&amp;sid=68</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jeff</FIRSTNAME><LASTNAME>Pinyan</LASTNAME></AUTHOR><DATE><YEAR>2000</YEAR></DATE><COMMENT>This is a description of how to use typeglobs and of the prototype syntax.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="dead"><T>"List" Is a Four-Letter Word</T><A>http://www.perlmonth.com/modules.php?name=News&amp;file=article&amp;sid=60</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jeff</FIRSTNAME><LASTNAME>Pinyan</LASTNAME></AUTHOR><DATE><YEAR>2000</YEAR></DATE><COMMENT>After a description of scalar context vs. list context, Jeff describes the comma operator and the list/array slices.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="dead"><T>Files and Filehandles</T><A>http://perlarchive.com/___TLC/7021.shtml</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jeff</FIRSTNAME><LASTNAME>Pinyan</LASTNAME></AUTHOR><DATE><YEAR>2000</YEAR><MONTH>1</MONTH><DAY>19</DAY></DATE><COMMENT>Jeff presents basic stuff on file management: <CODEROUTINE>open</CODEROUTINE>, <CODEROUTINE>close</CODEROUTINE>, <CODEROUTINE>select</CODEROUTINE>, <CODEROUTINE>print</CODEROUTINE>, quoted strings and here-docs.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="removed"><T>Small observations about the big picture</T><A>https://www.ibm.com/developerworks/linux/library/l-perl1/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Teodor</FIRSTNAME><LASTNAME>Zlatanov</LASTNAME></AUTHOR><DATE><YEAR>2000</YEAR><MONTH>6</MONTH></DATE><COMMENT>A miscellaneous list of tips: writing loops, using <CODEROUTINE>map</CODEROUTINE> and <CODEROUTINE>grep</CODEROUTINE>…</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Little acts of magic</T><A>http://www.stonehenge.com/merlyn/UnixReview/col34.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Randal</FIRSTNAME><MIDDLENAME>L.</MIDDLENAME><LASTNAME>Schwartz</LASTNAME></AUTHOR><DATE><YEAR>2000</YEAR><MONTH>10</MONTH></DATE><COMMENT>The usual Perl tricks to number the lines, reverse their order, count word occurrences…</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>What is that, anyway?</T><A>http://www.stonehenge.com/merlyn/UnixReview/col36.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Randal</FIRSTNAME><MIDDLENAME>L.</MIDDLENAME><LASTNAME>Schwartz</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>1</MONTH></DATE><COMMENT>How to walk through a file hierarchy and recognise file types.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="removed"><T>One-liners 101</T><A>https://www.ibm.com/developerworks/linux/library/l-p101/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Teodor</FIRSTNAME><LASTNAME>Zlatanov</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>4</MONTH></DATE><COMMENT>A presentation of the command line flags useful to write one liners.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Symbol::Approx::Sub: A Module for Bad Typists</T><A>https://www.drdobbs.com/symbolapproxsub-a-module-for-bad-typists/199102032</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Dave</FIRSTNAME><LASTNAME>Cross</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>5</MONTH></DATE><COMMENT>This module is a joke, but still a good introduction to typeglobs and <CODEROUTINE>AUTOLOAD</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Reversing Regular Expressions</T><A>https://www.perl.com/pub/2001/05/01/expressions.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Peter</FIRSTNAME><LASTNAME>Sergeant</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>5</MONTH><DAY>1</DAY></DATE><COMMENT>It is sometimes worthwhile to apply regular expressions on reversed strings.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Why Not Translate Perl to C?</T><A>https://www.perl.com/pub/2001/06/27/ctoperl.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Mark-Jason</FIRSTNAME><LASTNAME>Dominus</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>6</MONTH><DAY>27</DAY></DATE><COMMENT>The author tries to prove that compiling Perl scripts into C would not improve performance: but his demonstration is oversimplified and proves nothing (quick counter-proof: compile the script into a C program which calls the internal C routines of Perl interpreter, you have at least a marginal performance gain - no byte code to parse -, then perform aggressive inlining, suppress SV when possible - e.g. temporary variables -…).</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="removed"><T>The elegance of JAPH</T><A>https://www.ibm.com/developerworks/library/l-japh.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Teodor</FIRSTNAME><LASTNAME>Zlatanov</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>7</MONTH></DATE><COMMENT>Decoding some Just Another Perl Hacker signatures.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Using the Perl Debugger</T><A>https://www.drdobbs.com/using-the-perl-debugger/184404744</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>brian</FIRSTNAME><MIDDLENAME>d</MIDDLENAME><LASTNAME>foy</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>8</MONTH></DATE><COMMENT>A simple introduction to the Perl debugger.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="removed"><T>Apache::CodeRed</T><A>http://www.onlamp.com/lpt/a/apache/2001/08/16/code_red.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Reuven</FIRSTNAME><MIDDLENAME>M.</MIDDLENAME><LASTNAME>Lerner</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>8</MONTH><DAY>16</DAY></DATE><COMMENT><AUTHOR><FIRSTNAME>Reuven</FIRSTNAME><MIDDLENAME>M.</MIDDLENAME><LASTNAME>Lerner</LASTNAME></AUTHOR> describes how he wrote an Apache module using Perl to send alarm emails when CodeRed was trying to get into his machine.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Constants in Perl</T><A>https://interglacial.com/~sburke/tpj/as_html/tpj21.html</A><L>en</L><F>HTML</F></X><X><T>Constants in Perl</T><A>https://www.drdobbs.com/constants-in-perl/199102050</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Sean</FIRSTNAME><MIDDLENAME>M.</MIDDLENAME><LASTNAME>Burke</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>10</MONTH></DATE><COMMENT>A description of constant folding performed by the Perl compiler.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>The Lighter Side of CPAN</T><A>https://www.perl.com/pub/2001/10/31/lighter.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Alex</FIRSTNAME><LASTNAME>Gough</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>10</MONTH><DAY>31</DAY></DATE><COMMENT>A list of Perl modules which have absolutely no interest (they should be funny, but I've probably missed the point).</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Optimizing Your Perl</T><A>https://www.perl.com/pub/2002/02/12/bigo.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Robert</FIRSTNAME><LASTNAME>Spier</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>2</MONTH><DAY>12</DAY></DATE><COMMENT>Some very basic ideas about optimisation.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Why mod_perl?</T><A>https://www.perl.com/pub/2002/02/26/whatismodperl.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Stas</FIRSTNAME><LASTNAME>Bekman</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>2</MONTH><DAY>26</DAY></DATE><COMMENT>A presentation of mod_perl: much more laudatory than informational.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="dead"><T>Perl One-liners</T><A>https://www.theperlreview.com/Issues/The_Perl_Review_0_1.pdf</A><L>en</L><F>PDF</F></X><AUTHOR><FIRSTNAME>Jeff</FIRSTNAME><LASTNAME>Bay</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>3</MONTH><DAY>1</DAY></DATE><COMMENT>Input management, command line arguments, command line switches, resolving the shell quoting issues and BEGIN and END blocks.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Achieving Closure</T><A>https://www.perl.com/pub/2002/05/29/closure.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Simon</FIRSTNAME><LASTNAME>Cozens</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>5</MONTH><DAY>29</DAY></DATE><COMMENT>A quick presentation to the concept of closure.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Proxy Objects</T><A>https://www.perl.com/pub/2002/08/07/proxyobject.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Matt</FIRSTNAME><LASTNAME>Sergeant</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>8</MONTH><DAY>7</DAY></DATE><COMMENT>Using the <CODEROUTINE>AUTOLOAD</CODEROUTINE> mechanism to implement the proxy design pattern and resolve the garbage collection issue with circular references.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Building a Vector Space Search Engine in Perl</T><A>https://www.perl.com/pub/2003/02/19/engine.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Maciej</FIRSTNAME><LASTNAME>Ceglowski</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>2</MONTH><DAY>19</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="removed"><T>Cultured Perl: One-liners 102</T><ST>More one-line Perl scripts</ST><A>https://www.ibm.com/developerworks/linux/library/l-p102/index.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Teodor</FIRSTNAME><LASTNAME>Zlatanov</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>3</MONTH><DAY>12</DAY></DATE><COMMENT>Using Perl to extract the lines between 10 and 20, reversing the content of a file…</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Hidden Treasures of the Perl Core</T><A>https://www.perl.com/pub/2003/05/29/treasures.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Casey</FIRSTNAME><LASTNAME>West</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>5</MONTH><DAY>29</DAY></DATE><COMMENT>Some useful but badly known features of core modules.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE predecessor="https://www.perl.com/pub/2003/05/29/treasures.html/"><X><T>Hidden Treasures of the Perl Core, part II</T><A>https://www.perl.com/pub/2003/06/19/treasures.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Casey</FIRSTNAME><LASTNAME>West</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>6</MONTH><DAY>19</DAY></DATE><COMMENT>Except for the <CODEROUTINE>constant</CODEROUTINE> pragma, the described modules (<CODEROUTINE>Attribute::Handlers</CODEROUTINE>, <CODEROUTINE>B::Deparse</CODEROUTINE>, <CODEROUTINE>Class::Struct</CODEROUTINE>…) are less commonly useful than the ones described in the previous article.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Perl Design Patterns</T><A>https://www.perl.com/pub/2003/06/13/design1.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Phil</FIRSTNAME><LASTNAME>Crow</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>6</MONTH><DAY>13</DAY></DATE><COMMENT>The author explains that some GoF patterns (Iterator, Decorator, Flyweight, Singleton) are better implemented in Perl by using the core language instead of objects. As usual with Perl proselytes, he explains that is a proof that Perl is the best. Maybe this is just the proof that Perl is the messiest…</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE predecessor="https://www.perl.com/pub/2003/06/13/design1.html/"><X><T>Perl Design Patterns, Part 2</T><A>https://www.perl.com/pub/2003/08/07/design2.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Phil</FIRSTNAME><LASTNAME>Crow</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>8</MONTH><DAY>7</DAY></DATE><COMMENT>The demonstration continues with Strategy, Template Method, Builder, Interpreter.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="removed"><T>Cultured Perl: Inversion lists with Perl</T><A>https://www.ibm.com/developerworks/library/l-cpinv.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Teodor</FIRSTNAME><LASTNAME>Zlatanov</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>10</MONTH><DAY>8</DAY></DATE><COMMENT>What are inversion lists and a simple implementation.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Perl Slurp-Eaze</T><A>https://www.perl.com/pub/2003/11/21/slurp.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Uri</FIRSTNAME><LASTNAME>Guttman</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>11</MONTH><DAY>21</DAY></DATE><COMMENT>A description of file slurping and how to optimise it.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Using Bloom Filters</T><A>https://www.perl.com/pub/2004/04/08/bloom_filters.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Maciej</FIRSTNAME><LASTNAME>Ceglowski</LASTNAME></AUTHOR><DATE><YEAR>2004</YEAR><MONTH>4</MONTH><DAY>8</DAY></DATE><COMMENT>A presentation of <KEYWORD><KEYID>Bloom filter</KEYID><KEYEDTEXT>Bloom filters</KEYEDTEXT></KEYWORD> used to quickly, and with a small amount of memory, check if an element is in a set. There are some false positive, so the real check will have to be done. But this allows to trim most of the negative tests.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>This is not your grandfather's Perl</T><ST>That Perl interpreter you have on your Linux machine? Update it and check out the present.</ST><A>https://stackoverflow.blog/2022/09/08/this-is-not-your-grandfathers-perl/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Dave</FIRSTNAME><LASTNAME>Cross</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>9</MONTH><DAY>8</DAY></DATE><COMMENT>The Raku fork, Perl 5 is still evolving, and some "new" (15 years old) Perl features.</COMMENT></ARTICLE></ITEM>
      <ITEM><BLIST><TITLE>Sort</TITLE>
        <ITEM><ARTICLE><X><T>A Fresh Look at Efficient Perl Sorting</T><A>http://www.sysarch.com/Perl/sort_paper.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Uri</FIRSTNAME><LASTNAME>Guttman</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Larry</FIRSTNAME><LASTNAME>Rosler</LASTNAME></AUTHOR><COMMENT>The Guttman-Rosler Transform: using concatenated keys and values strings to accelerate the sorting.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Far More Than Everything You've Ever Wanted to Know About Sorting</T><A>ftp://rpmfind.net/linux/redhat-archive/6.2/cpan/CPAN-archive/doc/FMTEYEWTK/postscript/sorting.ps.gz</A><L>en</L><F>PostScript</F></X><AUTHOR><FIRSTNAME>Tom</FIRSTNAME><LASTNAME>Christiansen</LASTNAME></AUTHOR><DATE><YEAR>1995</YEAR><MONTH>10</MONTH><DAY>5</DAY></DATE><COMMENT>A detail deconstruction of the Schwartzian Transform and how to call the <CODEROUTINE>sort</CODEROUTINE> Unix utility.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>Tie</TITLE>
        <ITEM><ARTICLE><X><T>Changing Hash Behaviour with tie</T><A>https://www.perl.com/pub/2001/09/04/tiedhash.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Dave</FIRSTNAME><LASTNAME>Cross</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>9</MONTH><DAY>4</DAY></DATE><COMMENT>How to tie a hash.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>How Hashes Really Work</T><A>https://www.perl.com/pub/2002/10/01/hashes.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Abhijit</FIRSTNAME><LASTNAME>Menon-Sen</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>10</MONTH><DAY>1</DAY></DATE><COMMENT>Basic computer science: an introduction to hash tables. A Perl example is given with a tied hash.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X status="dead"><T>Cultured Perl: Tied variables - Examples of tying scalar, array, and hash variables through CPAN modules</T><A>http://old.tltsu.ru/archive/doc/programming/python/cp/l-cptied.pdf</A><L>en</L><F>PDF</F></X><AUTHOR><FIRSTNAME>Teodor</FIRSTNAME><LASTNAME>Zlatanov</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>1</MONTH></DATE><COMMENT>Examples of tying a scalar, an array and a hash.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>Multi-threading</TITLE>
        <ITEM><ARTICLE><X><T>Where Wizards Fear To Tread</T><A>https://www.perl.com/pub/2002/06/11/threads.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Artur</FIRSTNAME><LASTNAME>Bergman</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>6</MONTH><DAY>11</DAY></DATE><COMMENT>A presentation of multi-threading in Perl 5.8: shared variables and reimplementation of <CODEROUTINE>cwd</CODEROUTINE>, <CODEROUTINE>mkdir</CODEROUTINE>… In my mind, this multithreading is still immature.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Going Up?</T><A>https://www.perl.com/pub/2002/09/04/threads.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Sam</FIRSTNAME><LASTNAME>Tregar</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>9</MONTH><DAY>4</DAY></DATE><COMMENT>A detailed example of a multithreaded program.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>Avoiding bugs</TITLE>
        <ITEM><ARTICLE><X status="dead"><T>How to use safety guards to error proof your Perl scripts</T><A>http://perl.about.com/library/weekly/aa081701a.htm/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Emmie</FIRSTNAME><LASTNAME>Lewis</LASTNAME></AUTHOR><COMMENT>Same type of article describing <CODEROUTINE>-w flag</CODEROUTINE>, <CODEROUTINE>use strict</CODEROUTINE>, and <CODEROUTINE>use diagnostics</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Doing It Right the First Time</T><A>https://www.perl.com/pub/2001/01/begperl6.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Doug</FIRSTNAME><LASTNAME>Sheppard</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>1</MONTH><DAY>9</DAY></DATE><COMMENT>The basics to avoid bugs: the <CODEROUTINE>-w</CODEROUTINE> flag, tainting and the "<CODEROUTINE>use strict;</CODEROUTINE>" pragma.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>Regular expressions</TITLE>
        <ITEM><ARTICLE><X><T>Braille Contractions and Regular Expressions</T><A>https://interglacial.com/~sburke/tpj/as_html/tpj15.html</A><L>en</L><F>HTML</F></X><X><T>Braille Contractions and Regular Expressions</T><A>https://books.google.com/books?id=PidRpr7RgNIC&amp;pg=PA159</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Sean</FIRSTNAME><MIDDLENAME>M.</MIDDLENAME><LASTNAME>Burke</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Sheri</FIRSTNAME><LASTNAME>Wells-Jensen</LASTNAME></AUTHOR><DATE><YEAR>1999</YEAR></DATE><COMMENT>A nice article which presents how the author studied and implemented the Braille contractions by using some new Perl pattern matching features (lookbehind, lookahead, code).</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Regexp Power</T><A>https://www.perl.com/pub/2003/06/06/regexps.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Simon</FIRSTNAME><LASTNAME>Cozens</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>6</MONTH><DAY>6</DAY></DATE><COMMENT>Multi-line, /x and recursive regular expressions.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="https://www.perl.com/pub/2003/06/06/regexps.html/"><X><T>Power Regexps, Part II</T><A>https://www.perl.com/pub/2003/07/01/regexps.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Simon</FIRSTNAME><LASTNAME>Cozens</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>7</MONTH><DAY>1</DAY></DATE><COMMENT>Lookahead, lookbehind, /g, split and the regular expression modules.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Internals</TITLE>
      <ITEM><ARTICLE><X status="dead"><T>PerlGuts Illustrated</T><A>http://www.cpan.org/authors/id/GAAS/illguts-0.09.pdf</A><L>en</L><F>PDF</F></X><AUTHOR><FIRSTNAME>Gisle</FIRSTNAME><LASTNAME>Aas</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>6</MONTH><DAY>19</DAY></DATE><COMMENT>A nice introduction to Perl internal structures.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="dead"><T>perlhacktut - so you want to be a Perl porter?</T><A>https://www.theperlreview.com/Issues/The_Perl_Review_0_0.pdf</A><L>en</L><F>PDF</F></X><AUTHOR><FIRSTNAME>Simon</FIRSTNAME><LASTNAME>Cozens</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>2</MONTH><DAY>1</DAY></DATE><COMMENT>A quick introduction to Perl source code.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Where Wizards Fear To Tread</T><A>https://www.perl.com/pub/2002/05/07/optree.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Simon</FIRSTNAME><LASTNAME>Cozens</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>5</MONTH><DAY>7</DAY></DATE><COMMENT>Using <CODEROUTINE>B::Utils</CODEROUTINE> and <CODEROUTINE>B::Generate</CODEROUTINE> to modify the octree generated by the Perl compiler. What is the use of this?</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Modules</TITLE>
      <ITEM><ARTICLE><X><T>What Is POE, And Why Should I Use It?</T><A>https://www.perl.com/pub/2001/01/poe.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Dennis</FIRSTNAME><LASTNAME>Taylor</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Jeffrey</FIRSTNAME><LASTNAME>Goff</LASTNAME></AUTHOR><DATE><YEAR>2000</YEAR><MONTH>1</MONTH></DATE><COMMENT>This presentation of the Perl Object Environment could be clearer. But you can get the rough picture.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>So what's the difference?</T><A>http://www.stonehenge.com/merlyn/UnixReview/col35.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Randal</FIRSTNAME><MIDDLENAME>L.</MIDDLENAME><LASTNAME>Schwartz</LASTNAME></AUTHOR><DATE><YEAR>2000</YEAR><MONTH>12</MONTH></DATE><COMMENT>Using <CODEROUTINE>Algorithm::Diff</CODEROUTINE> to compare two lists.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Pathologically Polluting Perl</T><A>https://www.perl.com/pub/2001/02/inline.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Brian</FIRSTNAME><LASTNAME>Ingerson</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>2</MONTH><DAY>6</DAY></DATE><COMMENT><CODEROUTINE>Inline.pm</CODEROUTINE> can be used to embed C, C++ or Python code in a Perl script.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="removed"><T>Reading and writing Excel files with Perl</T><A>https://www.ibm.com/developerworks/linux/library/l-pexcel/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Teodor</FIRSTNAME><LASTNAME>Zlatanov</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>9</MONTH></DATE><COMMENT>Using <CODEROUTINE>Win32::OLE</CODEROUTINE>, <CODEROUTINE>Spreadsheet::WriteExcel</CODEROUTINE> and <CODEROUTINE>Spreadsheet::ParseExcel</CODEROUTINE> to read and generate Excel files.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>An Introduction to Testing</T><A>https://www.perl.com/pub/2001/12/04/testing.html/</A><L>en</L><F>HTML</F></X><AUTHOR><GIVENNAME>chromatic</GIVENNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>12</MONTH><DAY>4</DAY></DATE><COMMENT>A presentation of the <CODEROUTINE>Test::More</CODEROUTINE> test framework.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="dead"><T>Benchmarking Perl</T><A>https://www.theperlreview.com/Issues/The_Perl_Review_0_0.pdf</A><L>en</L><F>PDF</F></X><AUTHOR><FIRSTNAME>brian</FIRSTNAME><MIDDLENAME>d</MIDDLENAME><LASTNAME>foy</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>2</MONTH><DAY>1</DAY></DATE><COMMENT>A presentation of the <CODEROUTINE>Benchmark</CODEROUTINE> module.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>CPAN PLUS</T><A>https://www.perl.com/pub/2002/03/26/cpanplus.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jos</FIRSTNAME><LASTNAME>Boumans</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>3</MONTH><DAY>26</DAY></DATE><COMMENT><CODEROUTINE>CPANPLUS</CODEROUTINE> is a replacement of <CODEROUTINE>CPAN</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Acme::Comment</T><A>https://www.perl.com/pub/2002/08/13/comment.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jos</FIRSTNAME><LASTNAME>Boumans</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>8</MONTH><DAY>13</DAY></DATE><COMMENT>The other explains how he wrote <CODEROUTINE>Acme::Comment</CODEROUTINE> to allow multi-line comments and how to use <CODEROUTINE>Filter::Util::Call</CODEROUTINE> or <CODEROUTINE>Filter::Simple</CODEROUTINE> to write such source filters.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>The Fusion of Perl and Oracle</T><A>https://www.perl.com/pub/2002/09/04/perlfororacle.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Andy</FIRSTNAME><LASTNAME>Duncan</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>9</MONTH><DAY>4</DAY></DATE><COMMENT>Much bullshit and few information about <CODEROUTINE>PDBA</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Retire your debugger, log smartly with Log::Log4perl!</T><A>https://www.perl.com/pub/2002/09/11/log4perl.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Michael</FIRSTNAME><LASTNAME>Schilli</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>9</MONTH><DAY>11</DAY></DATE><COMMENT>A detailed presentation of <CODEROUTINE>Log::Log4perl</CODEROUTINE>, a rather powerful logging module.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Object Oriented Exception Handling in Perl</T><A>https://www.perl.com/pub/2002/11/14/exception.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Arun</FIRSTNAME><MIDDLENAME>Udaya</MIDDLENAME><LASTNAME>Shankar</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>11</MONTH><DAY>14</DAY></DATE><COMMENT>Using <CODEROUTINE>Error.pm</CODEROUTINE> to be able to use exceptions in Perl.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="removed"><T>Manage Perl persistence with Pixie</T><ST>A schema-less interface to relational data</ST><A>https://www.ibm.com/developerworks/linux/library/l-pixie.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>James</FIRSTNAME><MIDDLENAME>A.</MIDDLENAME><LASTNAME>Duncan</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>3</MONTH><DAY>4</DAY></DATE><COMMENT>Using <CODEROUTINE>Pixie</CODEROUTINE> to implement object persistency without coding tables in a RDMS.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="removed"><T>10 Perl modules all Java developers should know</T><A>https://www.techrepublic.com/article/10-perl-modules-all-java-developers-should-know/</A><L>en</L><F>HTML</F></X><AUTHOR><GIVENNAME>Melonfire</GIVENNAME></AUTHOR><DATE><YEAR>2007</YEAR><MONTH>2</MONTH><DAY>22</DAY></DATE><COMMENT>Some modules to run or piggyback Java.</COMMENT></ARTICLE></ITEM>
      <ITEM><BLIST><TITLE>LWP</TITLE>
        <ITEM><ARTICLE><X><T>Web Basics with LWP</T><A>https://www.perl.com/pub/2002/08/20/perlandlwp.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Sean</FIRSTNAME><MIDDLENAME>M.</MIDDLENAME><LASTNAME>Burke</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>8</MONTH><DAY>20</DAY></DATE><COMMENT>A good overview/cookbook of LWP.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>SOAP</TITLE>
        <ITEM><ARTICLE><X><T>Quick Start with SOAP</T><A>https://www.perl.com/pub/2001/01/soap.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Paul</FIRSTNAME><LASTNAME>Kulchenko</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>1</MONTH><DAY>29</DAY></DATE><COMMENT>An overview of <CODEROUTINE>SOAP::Lite</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Quick Start Guide with SOAP Part Two</T><A>https://www.perl.com/pub/2001/04/24/soap.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Paul</FIRSTNAME><LASTNAME>Kulchenko</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>4</MONTH><DAY>23</DAY></DATE><COMMENT>How to install SOAP services on the server, some examples of services available on Internet, security and complex data structures.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>Parsers</TITLE>
        <ITEM><ARTICLE><X status="removed"><T>Parsing with Perl modules</T><ST>The right tools simplify the tasks and extend the grammars</ST><A>https://www.ibm.com/developerworks/linux/library/l-perl-parsing/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Teodor</FIRSTNAME><LASTNAME>Zlatanov</LASTNAME></AUTHOR><DATE><YEAR>2000</YEAR><MONTH>4</MONTH></DATE><COMMENT>Another presentation of <CODEROUTINE>Parse::RecDescent</CODEROUTINE>. This one describes more things, but is less easy to read.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Parse::RecDescent Tutorial</T><A>https://www.perl.com/pub/2001/06/13/recdecent.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jeffrey</FIRSTNAME><LASTNAME>Goff</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>6</MONTH><DAY>13</DAY></DATE><COMMENT>A presentation of <CODEROUTINE>Parse::RecDescent</CODEROUTINE>, a parser for right recursive grammars.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X status="removed"><T>Building a Parrot Compiler</T><A>http://www.onlamp.com/pub/a/onlamp/2004/04/15/parrot_compiler_construction.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Dan</FIRSTNAME><LASTNAME>Sugalski</LASTNAME></AUTHOR><DATE><YEAR>2004</YEAR><MONTH>4</MONTH><DAY>15</DAY></DATE><COMMENT>An example of using <CODEROUTINE>Parse::RecDescent</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>Cryptography</TITLE>
        <ITEM><ARTICLE><X><T>Symmetric Cryptography in Perl</T><A>https://www.perl.com/pub/2001/07/10/crypto.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Abhijit</FIRSTNAME><LASTNAME>Menon-Sen</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>7</MONTH><DAY>10</DAY></DATE><COMMENT>A quick overview of the <CODEROUTINE>Crypt::</CODEROUTINE> namespace, in particular <CODEROUTINE>Crypt::Twofish</CODEROUTINE> and <CODEROUTINE>Crypt::CBC</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Asymmetric Cryptography in Perl</T><A>https://www.perl.com/pub/2001/09/26/crypto1.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Vipul</FIRSTNAME><MIDDLENAME>Ved</MIDDLENAME><LASTNAME>Prakash</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Benjamin</FIRSTNAME><LASTNAME>Trott</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>9</MONTH><DAY>26</DAY></DATE><COMMENT>Some quick samples to use <CODEROUTINE>Crypt::RSA</CODEROUTINE>, <CODEROUTINE>Crypt::DH</CODEROUTINE> and <CODEROUTINE>Crypt::DSA</CODEROUTINE> with a short theorical presentation for each algorithm.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>Mail</TITLE>
        <ITEM><ARTICLE><X><T>A MIME is a terrible thing to waste</T><A>http://www.stonehenge.com/merlyn/UnixReview/col37.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Randal</FIRSTNAME><MIDDLENAME>L.</MIDDLENAME><LASTNAME>Schwartz</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>4</MONTH></DATE><COMMENT>Using <CODEROUTINE>MIME::Parser</CODEROUTINE> and <CODEROUTINE>MIME::Entity</CODEROUTINE> to remove the HTML version of a mail.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Mail Filtering with Mail::Audit</T><A>https://www.perl.com/pub/2001/07/17/mailfiltering.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Simon</FIRSTNAME><LASTNAME>Cozens</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>7</MONTH><DAY>17</DAY></DATE><COMMENT>A description of <CODEROUTINE>Mail::Audit</CODEROUTINE> to filter incoming mails and <CODEROUTINE>News::Gateway</CODEROUTINE> to build a news/mailing list gateway.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Filtering Mail with PerlMx</T><A>https://www.perl.com/pub/2001/10/10/perlmx.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Mike</FIRSTNAME><LASTNAME>DeGraw-Bertsch</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>10</MONTH><DAY>10</DAY></DATE><COMMENT>A presentation of PerlMx and its callback mechanism.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Stopping Spam with SpamAssassin</T><A>https://www.perl.com/pub/2002/03/06/spam.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Simon</FIRSTNAME><LASTNAME>Cozens</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>3</MONTH><DAY>6</DAY></DATE><COMMENT>A presentation of <CODEROUTINE>Mail::SpamAssasin</CODEROUTINE>, a Perl module to flag spam mails.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Mail Filtering</T><A>https://www.perl.com/pub/2002/08/27/filtering.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Michael</FIRSTNAME><LASTNAME>Stevens</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>8</MONTH><DAY>27</DAY></DATE><COMMENT>A comparison of <CODEROUTINE>PerlMx</CODEROUTINE> and <CODEROUTINE>Mail::Audit</CODEROUTINE> to filter spam mails.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE><ANCHOR>build</ANCHOR><X><T>Web site building</T><A>build.html</A><L>en</L><F>HTML</F></X></TITLE>
        <ITEM><ARTICLE><X status="removed"><T>Simplify CGI with HTML::Mason</T><A>https://www.techrepublic.com/article/simplify-cgi-with-htmlmason/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>James</FIRSTNAME><LASTNAME>Scheinblum</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>4</MONTH><DAY>3</DAY></DATE><COMMENT>A presentation of <CODEROUTINE>HTML::Mason</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="https://www.techrepublic.com/article/simplify-cgi-with-htmlmason/"><X status="removed"><T>Advanced site building with HTML::Mason</T><A>https://www.techrepublic.com/article/advanced-site-building-with-htmlmason/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>James</FIRSTNAME><LASTNAME>Scheinblum</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>6</MONTH><DAY>4</DAY></DATE><COMMENT>The following part of the previous article: an overview of <CODEROUTINE>HTML::Mason</CODEROUTINE> capabilities (dhandlers, filters, XML, caching…).</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Choosing a Templating System</T><A>https://www.perl.com/pub/2001/08/21/templating.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Perrin</FIRSTNAME><LASTNAME>Harkins</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>8</MONTH><DAY>21</DAY></DATE><COMMENT>A presentation of the main Perl tools available to generate HTML pages.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Finding CGI Scripts</T><A>https://www.perl.com/pub/2002/01/23/cgi.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Dave</FIRSTNAME><LASTNAME>Cross</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>1</MONTH><DAY>23</DAY></DATE><COMMENT><X><T>nms</T><A>https://nms-cgi.sourceforge.net/</A><L>en</L><F>HTML</F></X> is a replacement to Matt’s Script Archive.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Preventing Cross-site Scripting Attacks</T><A>https://www.perl.com/pub/2002/02/20/css.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Paul</FIRSTNAME><LASTNAME>Lindner</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>2</MONTH><DAY>20</DAY></DATE><COMMENT>Using <CODEROUTINE>Apache::TaintRequest</CODEROUTINE> to avoid cross-site scripting.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>CGI::Kwiki</T><A>https://www.perl.com/pub/2003/05/14/kwiki.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Brian</FIRSTNAME><LASTNAME>Ingerson</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>5</MONTH><DAY>13</DAY></DATE><COMMENT>A presentation of <CODEROUTINE>CGI::Kwiki</CODEROUTINE>, a module to create Wiki sites.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>Web site reaping</TITLE>
        <ITEM><ARTICLE><X><T>Create RSS channels from HTML news sites</T><A>https://www.perl.com/pub/2001/11/15/creatingrss.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Chris</FIRSTNAME><LASTNAME>Ball</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>11</MONTH><DAY>15</DAY></DATE><COMMENT>Using <CODEROUTINE>LWP::Simple</CODEROUTINE> to retrieve HTML pages, <CODEROUTINE>HTML::TokeParser</CODEROUTINE> to get they content and <CODEROUTINE>XML::RSS</CODEROUTINE> to generate the RSS data.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Screen-scraping with WWW::Mechanize</T><A>https://www.perl.com/pub/2003/01/22/mechanize.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Chris</FIRSTNAME><LASTNAME>Ball</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>1</MONTH><DAY>22</DAY></DATE><COMMENT>Using <CODEROUTINE>WWW::Mechanize</CODEROUTINE> to automatise page navigation.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>FEAR-less Site Scraping</T><A>https://www.perl.com/pub/2006/06/01/fear-api.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Yung-chung</FIRSTNAME><LASTNAME>Lin</LASTNAME></AUTHOR><DATE><YEAR>2006</YEAR><MONTH>6</MONTH><DAY>1</DAY></DATE><COMMENT>Yet another API for scraping a site…</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>Fun</TITLE>
        <ITEM><ARTICLE><X><T>Just Another Perl Haiku</T><A>http://www.foo.be/docs/tpj/issues/vol4_4/tpj0404-0004.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Damian</FIRSTNAME><LASTNAME>Conway</LASTNAME></AUTHOR><DATE><YEAR>1999</YEAR></DATE><COMMENT>A presentation of <CODEROUTINE>Coy</CODEROUTINE> which replaces error messages by haikus.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Quantum::Entanglement</T><A>https://www.perl.com/pub/2001/08/08/quantum.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Alex</FIRSTNAME><LASTNAME>Gough</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>8</MONTH><DAY>8</DAY></DATE><COMMENT>Quantum calculus… What’s the use of this? The article is not clear, but this may be because I've forgotten my quantum mechanics lessons.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>GUI</TITLE>
        <ITEM><ARTICLE><X><T>wxPerl: Another GUI for Perl</T><A>https://www.perl.com/pub/2001/09/12/wxtutorial1.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jouke</FIRSTNAME><LASTNAME>Visser</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>9</MONTH><DAY>12</DAY></DATE><COMMENT>The Perl API for wxWindows.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>A Drag-and-Drop Primer for Perl/Tk</T><A>https://www.perl.com/pub/2001/12/11/perltk.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Steve</FIRSTNAME><LASTNAME>Lidie</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>12</MONTH><DAY>11</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Creating Custom Widgets</T><A>https://www.perl.com/pub/2002/01/09/perltk.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Steve</FIRSTNAME><LASTNAME>Lidie</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>1</MONTH><DAY>9</DAY></DATE><COMMENT>A description of implementing ballon help. Not very helpful since you have to already correctly know Tk to understand this article.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X status="removed"><T>Data visualization using Perl/Tk</T><ST>Build custom graphing tools with the standard GUI toolkit for Perl</ST><A>https://www.ibm.com/developerworks/linux/library/l-datavis/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Philipp</FIRSTNAME><MIDDLENAME>K.</MIDDLENAME><LASTNAME>Janert</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>8</MONTH><DAY>27</DAY></DATE><COMMENT>An introduction to <CODEROUTINE>Tk::Canvas</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE><ANCHOR>XML</ANCHOR><X><T>XML</T><A>xml.html</A><L>en</L><F>HTML</F></X></TITLE>
        <ITEM><ARTICLE><X><T>Using The Perl XML::Parser Module</T><A>https://www.xml.com/pub/a/98/09/xml-perl.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Clark</FIRSTNAME><LASTNAME>Cooper</LASTNAME></AUTHOR><DATE><YEAR>1998</YEAR><MONTH>9</MONTH><DAY>12</DAY></DATE><COMMENT>The author of the <CODEROUTINE>XML::Parser</CODEROUTINE> gives two small examples of how to use it.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X status="dead"><T>The DOMinant Technique for Parsing XML</T><A>http://vili.pmmf.hu/jegyzet/xml/perl_xml.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Eric</FIRSTNAME><LASTNAME>Bohlman</LASTNAME></AUTHOR><DATE><YEAR>1999</YEAR></DATE><COMMENT>A quick presentation of DOM and its advantages/disadvantages, followed by an example of the <CODEROUTINE>XML::DOM</CODEROUTINE> implementation.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Processing XML with Perl</T><A>https://www.xml.com/pub/a/2000/04/05/feature/index.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Michel</FIRSTNAME><LASTNAME>Rodriguez</LASTNAME></AUTHOR><DATE><YEAR>2000</YEAR><MONTH>4</MONTH><DAY>5</DAY></DATE><COMMENT>Michel lists the Perl modules available to parse XML data.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>High-Performance XML Parsing With SAX</T><A>https://www.xml.com/pub/a/2001/02/14/perlsax.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Kip</FIRSTNAME><LASTNAME>Hampton</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>2</MONTH><DAY>14</DAY></DATE><COMMENT>A quick presentation of <CODEROUTINE>XML::Parser::PerlSAX</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Creating Scalable Vector Graphics with Perl</T><A>https://www.xml.com/pub/a/2001/07/11/creatingsvg.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Kip</FIRSTNAME><LASTNAME>Hampton</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>7</MONTH><DAY>11</DAY></DATE><COMMENT>Using <CODEROUTINE>XML::Writer</CODEROUTINE> to generate a SVG file.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Creating VoiceXML Applications With Perl</T><A>https://www.xml.com/pub/a/2001/08/09/perlxml.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Kip</FIRSTNAME><LASTNAME>Hampton</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>8</MONTH><DAY>9</DAY></DATE><COMMENT>Using Perl to write a RSS/VoiceXML gateway and a CGI script generating VoiceXML.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Writing SAX Drivers for Non-XML Data</T><A>https://www.xml.com/pub/a/2001/09/19/sax-non-xml-data.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Kip</FIRSTNAME><LASTNAME>Hampton</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>9</MONTH><DAY>19</DAY></DATE><COMMENT>This is a kludge: replacing a real SAX driver by a driver working on non XML data so <CODEROUTINE>XML::Handler::XMLWriter</CODEROUTINE> can be used to output XML stuff.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>XML::LibXML - An XML::Parser Alternative</T><A>https://www.xml.com/pub/a/2001/11/14/xml-libxml.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Kip</FIRSTNAME><LASTNAME>Hampton</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>11</MONTH><DAY>14</DAY></DATE><COMMENT><CODEROUTINE>XML::LibXML</CODEROUTINE> is a XML implementation more up-to-date than <CODEROUTINE>XML::Parser</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Introducing XML::SAX::Machines, Part One</T><A>https://www.xml.com/pub/a/2002/02/13/sax-machines.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Kip</FIRSTNAME><LASTNAME>Hampton</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>2</MONTH><DAY>13</DAY></DATE><COMMENT><CODEROUTINE>XML::SAX::Machines</CODEROUTINE> is an easy way to chain XML filters. This article is an overview of the module with a simple static chain example.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="https://www.xml.com/pub/a/2002/02/13/sax-machines.html"><X><T>Introducing XML::SAX::Machines, Part Two</T><A>https://www.xml.com/pub/a/2002/03/20/machines.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Kip</FIRSTNAME><LASTNAME>Hampton</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>3</MONTH><DAY>20</DAY></DATE><COMMENT>Two more examples showing how to dynamically define the chain of XML filters.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Perl and XML on the Command Line</T><A>https://www.xml.com/pub/a/2002/04/17/perl-xml.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Kip</FIRSTNAME><LASTNAME>Hampton</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>4</MONTH><DAY>17</DAY></DATE><COMMENT>Some Perl one liners and other tools to manipulate XML files.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>PDF Presentations Using AxPoint</T><A>https://www.xml.com/pub/a/2002/06/19/perl-xml.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Kip</FIRSTNAME><LASTNAME>Hampton</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>6</MONTH><DAY>19</DAY></DATE><COMMENT>Using <CODEROUTINE>XML::Handler::AxPoint</CODEROUTINE> to generate a PDF file.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X status="removed"><T>Using XML Modules in Perl</T><A>http://www.oreillynet.com/pub/a/network/2002/07/09/perlandxml.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Nate</FIRSTNAME><LASTNAME>Patwardhan</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>7</MONTH><DAY>9</DAY></DATE><COMMENT>A very simple example of using <CODEROUTINE>XML::Simple</CODEROUTINE> and <CODEROUTINE>XMLRPC::Lite</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
        <ITEM><BLIST><TITLE>Perl XML Quickstart</TITLE>
          <ITEM><ARTICLE><X><T>Perl XML Quickstart: The Perl XML Interfaces</T><A>https://www.xml.com/pub/a/2001/04/18/perlxmlqstart1.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Kip</FIRSTNAME><LASTNAME>Hampton</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>4</MONTH><DAY>18</DAY></DATE><COMMENT><CODEROUTINE>XML::Simple</CODEROUTINE>, <CODEROUTINE>XML::SimpleObject</CODEROUTINE>, <CODEROUTINE>XML::TreeBuilder</CODEROUTINE>, and <CODEROUTINE>XML::Twig</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
          <ITEM><ARTICLE><X><T>Perl XML Quickstart: The Standard XML Interfaces</T><A>https://www.xml.com/pub/a/2001/05/16/perlxml.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Kip</FIRSTNAME><LASTNAME>Hampton</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>5</MONTH><DAY>16</DAY></DATE><COMMENT><CODEROUTINE>XML::DOM</CODEROUTINE>, <CODEROUTINE>XML::XPath</CODEROUTINE>, <CODEROUTINE>XML::Parser::PerlSAX</CODEROUTINE>, and <CODEROUTINE>Orchard::SAXDriver::Expat</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
          <ITEM><ARTICLE><X><T>Perl XML Quickstart: Convenience Modules</T><A>https://www.xml.com/pub/a/2001/06/13/perlxml.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Kip</FIRSTNAME><LASTNAME>Hampton</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>6</MONTH><DAY>13</DAY></DATE><COMMENT>Transforming some format into XML (<CODEROUTINE>XML::CSV</CODEROUTINE>, <CODEROUTINE>XML::Excel</CODEROUTINE>, and <CODEROUTINE>DBIx::XML_RDB</CODEROUTINE>), transforming HTML into XHTML (<CODEROUTINE>XML::PYX</CODEROUTINE> and <CODEROUTINE>XML::Driver::HTML</CODEROUTINE>), and comparing XML files (<CODEROUTINE>XML::SemanticDiff</CODEROUTINE>).</COMMENT></ARTICLE></ITEM>
        </BLIST></ITEM>
        <ITEM><BLIST><TITLE>Eric Bohlman</TITLE>
          <ITEM><ARTICLE><X status="dead"><T>Introducing XML</T><A>http://www.perlmonth.com/modules.php?name=News&amp;file=article&amp;sid=17</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Eric</FIRSTNAME><LASTNAME>Bohlman</LASTNAME></AUTHOR><DATE><YEAR>1999</YEAR></DATE><COMMENT>A quick presentation of XML history and syntax.</COMMENT></ARTICLE></ITEM>
          <ITEM><ARTICLE><X status="dead"><T>Parsing XML, Part 1</T><A>http://www.perlmonth.com/modules.php?name=News&amp;file=article&amp;sid=29</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Eric</FIRSTNAME><LASTNAME>Bohlman</LASTNAME></AUTHOR><DATE><YEAR>1999</YEAR></DATE><COMMENT>After describing the different types of XML parsers (validating vs. non-validating, stream-based vs. tree-based) and the available Perl implementations, Eric gives an example of <CODEROUTINE>XML::Parser</CODEROUTINE> stream-based use.</COMMENT></ARTICLE></ITEM>
          <ITEM><ARTICLE predecessor="http://www.perlmonth.com/modules.php?name=News&amp;file=article&amp;sid=29"><X status="dead"><T>Parsing XML, Part 2</T><A>http://www.perlmonth.com/modules.php?name=News&amp;file=article&amp;sid=34</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Eric</FIRSTNAME><LASTNAME>Bohlman</LASTNAME></AUTHOR><DATE><YEAR>1999</YEAR></DATE><COMMENT>Eric gives an overview of DTD, then gives an example of a validating stream-based parser written with <CODEROUTINE>XML::Parser</CODEROUTINE> and finishes with another example of <CODEROUTINE>XML::Parser-&gt;parsefile</CODEROUTINE> tree-based interface.</COMMENT></ARTICLE></ITEM>
        </BLIST></ITEM>
      </BLIST></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>History</TITLE>
      <ITEM><ARTICLE><X protection="free_registration" status="dead"><T>Uncultured Perl</T><A>https://www.linux-mag.com/id/322</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Larry</FIRSTNAME><LASTNAME>Wall</LASTNAME></AUTHOR><DATE><YEAR>1999</YEAR><MONTH>10</MONTH></DATE><COMMENT><AUTHOR><FIRSTNAME>Larry</FIRSTNAME><LASTNAME>Wall</LASTNAME></AUTHOR> tells us the history of Perl.</COMMENT></ARTICLE></ITEM>
      <ITEM><BLIST><TITLE>Conferences</TITLE>
        <ITEM><ARTICLE><X><T>Yet Another YAPC Report: Montreal</T><A>https://www.perl.com/pub/2001/06/21/yapcreport.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Schuyler</FIRSTNAME><LASTNAME>Erle</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>6</MONTH><DAY>21</DAY></DATE><COMMENT>Summary of Yet Another Perl Conference North America 2001.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Yet Another Perl Conference Europe 2001</T><A>https://www.perl.com/pub/2001/08/13/yapc-europe.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jouke</FIRSTNAME><LASTNAME>Visser</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>8</MONTH><DAY>13</DAY></DATE><COMMENT>Summary of Yet Another Perl Conference Europe 2001.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>Perl 5</TITLE>
        <ITEM><ARTICLE><X><T>The Seven Deadly Sins of Perl</T><A>https://www.perl.com/doc/FMTEYEWTK/versus/perl.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Tom</FIRSTNAME><LASTNAME>Christiansen</LASTNAME></AUTHOR><DATE><YEAR>1996</YEAR></DATE><COMMENT>A list of issues with the language.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Far More than Everything You've Ever Wanted to Know about Prototypes in Perl</T><A>https://www.perlmonks.org/?node_id=861966</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Tom</FIRSTNAME><LASTNAME>Christiansen</LASTNAME></AUTHOR><DATE><YEAR>1999</YEAR><MONTH>7</MONTH><DAY>25</DAY></DATE><COMMENT>Yet another brain dead Perl feature: prototypes.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Sins of Perl Revisited</T><A>https://www.perl.com/pub/1999/11/sins.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Mark-Jason</FIRSTNAME><LASTNAME>Dominus</LASTNAME></AUTHOR><DATE><YEAR>1999</YEAR><MONTH>11</MONTH><DAY>30</DAY></DATE><COMMENT>Three years after <AUTHOR><FIRSTNAME>Tom</FIRSTNAME><LASTNAME>Christiansen</LASTNAME></AUTHOR>’s paper, what is the current status of the listed issues? Perl, being intrinsically flawed, cannot be repaired without breaking backward compatibility: it is doomed.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>What's New in 5.6.0.</T><A>https://www.perl.com/pub/2000/04/whatsnew.html/?wwwrrr_20000418.txt</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Simon</FIRSTNAME><LASTNAME>Cozens</LASTNAME></AUTHOR><DATE><YEAR>2000</YEAR><MONTH>4</MONTH><DAY>18</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>riddles in the dark</T><A>https://www.nntp.perl.org/group/perl.perl5.porters/2001/04/msg33823.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Gurusamy</FIRSTNAME><LASTNAME>Sarathy</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>4</MONTH><DAY>8</DAY></DATE><COMMENT>Perl 5.6.1 release note.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>what happens next?</T><A>https://www.nntp.perl.org/group/perl.perl5.porters/2001/04/msg33851.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jarkko</FIRSTNAME><LASTNAME>Hietaniemi</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>4</MONTH><DAY>9</DAY></DATE><COMMENT>Perl 5.7.1 release note.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X status="dead"><T>Perl 5.7.2 Has Been Released</T><A>http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/2001-07/msg00894.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jarkko</FIRSTNAME><LASTNAME>Hietaniemi</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>7</MONTH><DAY>13</DAY></DATE><COMMENT>Perl 5.7.2 release note.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>What's new in Perl 5.8.0</T><A>https://www.perl.com/pub/2003/01/16/whatsnew.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Artur</FIRSTNAME><LASTNAME>Bergman</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>1</MONTH><DAY>16</DAY></DATE><COMMENT>Perl 5.8.0 release note.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>Perl 6</TITLE>
        <ITEM><ARTICLE><X status="removed"><T>What Will Be in Perl 6?</T><A>http://www.oreillynet.com/pub/a/linux/rt/07282000/transcript.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Dale</FIRSTNAME><LASTNAME>Dougherty</LASTNAME></AUTHOR><DATE><YEAR>2000</YEAR><MONTH>8</MONTH><DAY>1</DAY></DATE><COMMENT>The author discusses with <AUTHOR><FIRSTNAME>brian</FIRSTNAME><MIDDLENAME>d</MIDDLENAME><LASTNAME>foy</LASTNAME></AUTHOR> and <AUTHOR><FIRSTNAME>Mark-Jason</FIRSTNAME><LASTNAME>Dominus</LASTNAME></AUTHOR> on the development organisation for Perl 6.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Apocalypse 1: The Ugly, the Bad, and the Good</T><A>https://www.perl.com/pub/2001/04/02/wall.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Larry</FIRSTNAME><LASTNAME>Wall</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>4</MONTH><DAY>2</DAY></DATE><COMMENT>Some high-level ideas for the new future major release.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Apocalypse 2</T><A>https://www.perl.com/pub/2001/05/03/wall.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Larry</FIRSTNAME><LASTNAME>Wall</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>5</MONTH><DAY>3</DAY></DATE><COMMENT>Comments, data types, variables, literals, context, properties…</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Exegesis 2</T><A>https://www.perl.com/pub/2001/05/08/exegesis2.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Damian</FIRSTNAME><LASTNAME>Conway</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>5</MONTH><DAY>15</DAY></DATE><COMMENT>A detailed example describing some points specified by <AUTHOR><FIRSTNAME>Larry</FIRSTNAME><LASTNAME>Wall</LASTNAME></AUTHOR> in the above article.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>The State of the Onion 5</T><A>https://www.perl.com/pub/2001/07/25/onion.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Simon</FIRSTNAME><LASTNAME>Cozens</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>7</MONTH><DAY>25</DAY></DATE><COMMENT><AUTHOR><FIRSTNAME>Larry</FIRSTNAME><LASTNAME>Wall</LASTNAME></AUTHOR> gives an overview of Perl 6: specifications are beginning to stabilise…</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Parrot : Some Assembly Required</T><A>https://www.perl.com/pub/2001/09/18/parrot.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Simon</FIRSTNAME><LASTNAME>Cozens</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>9</MONTH><DAY>18</DAY></DATE><COMMENT>A quick presentation of Perl 6 virtual machine.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Apocalypse 3</T><A>https://www.perl.com/pub/2001/10/02/apocalypse3.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Larry</FIRSTNAME><LASTNAME>Wall</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>10</MONTH><DAY>2</DAY></DATE><COMMENT>Description of operator changes from Perl 5 to Perl 6.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Exegesis 3</T><A>https://www.perl.com/pub/2001/10/03/exegesis3.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Damian</FIRSTNAME><LASTNAME>Conway</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>10</MONTH><DAY>3</DAY></DATE><COMMENT>Damian still tries to illustrate Larry’s delirium…</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Perl 6 : Not Just For Damians</T><A>https://www.perl.com/pub/2001/10/23/damians.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Piers</FIRSTNAME><LASTNAME>Cawley</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>10</MONTH><DAY>23</DAY></DATE><COMMENT>… but some people are slightly worried about Perl 6 direction and yet another proselytism article is necessary.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Apocalypse 4</T><A>https://www.perl.com/pub/2002/01/15/apo4.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Larry</FIRSTNAME><LASTNAME>Wall</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>1</MONTH><DAY>15</DAY></DATE><COMMENT>Larry describes Perl 6 control structures, mainly <CODEROUTINE>switch</CODEROUTINE> and exceptions. Frankly, I am not able to understand all the stuff he describes.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>And Now for Something Completely Similar</T><A>https://www.drdobbs.com/and-now-for-something-completely-similar/199102341</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Damian</FIRSTNAME><LASTNAME>Conway</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>2</MONTH></DATE><COMMENT>Trying to prove that switching from Perl 5 to Perl 6 is no so painfull…</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Exegesis 4</T><A>https://www.perl.com/pub/2002/04/01/exegesis4.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Damian</FIRSTNAME><LASTNAME>Conway</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>5</MONTH><DAY>2</DAY></DATE><COMMENT>At last, things are getting clearer.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Apocalypse 5</T><A>https://www.perl.com/pub/2002/06/04/apo5.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Larry</FIRSTNAME><LASTNAME>Wall</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>5</MONTH><DAY>4</DAY></DATE><COMMENT>Big modifications of the regular expressions.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Synopsis 5</T><A>https://www.perl.com/pub/2002/06/26/synopsis5.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Allison</FIRSTNAME><LASTNAME>Randal</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Damian</FIRSTNAME><LASTNAME>Conway</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>6</MONTH><DAY>26</DAY></DATE><COMMENT>A summary of the new regex syntax.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Exegesis 5</T><A>https://www.perl.com/pub/2002/08/22/exegesis5.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Damian</FIRSTNAME><LASTNAME>Conway</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>8</MONTH><DAY>22</DAY></DATE><COMMENT>A complete and understandable description of the new regular expressions.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>On Topic</T><A>https://www.perl.com/pub/2002/10/30/topic.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Allison</FIRSTNAME><LASTNAME>Randal</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>10</MONTH><DAY>30</DAY></DATE><COMMENT>Nothing new in this article, but it helps to understand the management of <CODEROUTINE>$_</CODEROUTINE> and the <CODEROUTINE>-&gt;</CODEROUTINE> operator.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Perl 6 Design Philosophy</T><A>https://www.perl.com/pub/2003/06/25/perl6essentials.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Allison</FIRSTNAME><LASTNAME>Randal</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Dan</FIRSTNAME><LASTNAME>Sugalski</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Leopold</FIRSTNAME><LASTNAME>Tötsch</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>6</MONTH><DAY>25</DAY></DATE><COMMENT>Trying to rationalise something which is not rational…</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>State of the Onion 2003</T><A>https://www.perl.com/pub/2003/07/16/soto2003.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Larry</FIRSTNAME><LASTNAME>Wall</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>7</MONTH></DATE><COMMENT>The universal architectural diagram, the unreasonable and Ponie.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>The State of the Onion</T><A>https://www.perl.com/pub/2004/08/18/onion.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Larry</FIRSTNAME><LASTNAME>Wall</LASTNAME></AUTHOR><DATE><YEAR>2004</YEAR><MONTH>8</MONTH><DAY>19</DAY></DATE><COMMENT>Screensavers and Larry' health.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>The State of the Onion 9</T><A>https://www.perl.com/pub/2005/09/22/onion.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Larry</FIRSTNAME><LASTNAME>Wall</LASTNAME></AUTHOR><DATE><YEAR>2005</YEAR><MONTH>9</MONTH><DAY>22</DAY></DATE><COMMENT>The analogy between the characters of a spy game and the Perl developers.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X status="removed"><T>People of Perl: Patrick Michaud</T><A>http://www.oreillynet.com/onlamp/blog/2006/05/people_of_perl_patrick_michaud.html</A><L>en</L><F>HTML</F></X><AUTHOR><GIVENNAME>chromatic</GIVENNAME></AUTHOR><DATE><YEAR>2006</YEAR><MONTH>5</MONTH><DAY>2</DAY></DATE><COMMENT>An interview of <AUTHOR><FIRSTNAME>Patrick</FIRSTNAME><LASTNAME>Michaud</LASTNAME></AUTHOR>, the Perl 6 compiler pumpking.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X status="removed"><T>Roles: Composable Units of Object Behavior</T><A>http://www.oreillynet.com/onlamp/blog/2006/08/roles_composable_units_of_obje.html</A><L>en</L><F>HTML</F></X><AUTHOR><GIVENNAME>chromatic</GIVENNAME></AUTHOR><DATE><YEAR>2006</YEAR><MONTH>8</MONTH><DAY>31</DAY></DATE><COMMENT>A description about the roles (which may be part of Perl6). The presentation is interesting, but the comment about Java are wrong.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>The State of the Onion 10</T><A>https://www.perl.com/pub/2006/09/21/onion.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Larry</FIRSTNAME><LASTNAME>Wall</LASTNAME></AUTHOR><DATE><YEAR>2006</YEAR><MONTH>9</MONTH><DAY>21</DAY></DATE><COMMENT>Perl is a teenager.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X quality="-1"><T>Larry Wall Speaks at Google</T><A>https://www.youtube.com/watch?v=JzIWdJVP-wo</A><L>en</L><F>MP4</F><DURATION><MINUTE>57</MINUTE><SECOND>52</SECOND></DURATION><DATE><YEAR>2008</YEAR><MONTH>8</MONTH><DAY>26</DAY></DATE></X><AUTHOR><FIRSTNAME>Larry</FIRSTNAME><LASTNAME>Wall</LASTNAME></AUTHOR><DATE><YEAR>2008</YEAR><MONTH>6</MONTH><DAY>19</DAY></DATE><COMMENT>The presentation is unclear, Larry is picking some random Perl 6 details, there is no driving idea in his speech.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Parrot</TITLE>
      <ITEM><ARTICLE><X status="dead"><T>Parroty Bits: Bit 0, The Beginning</T><A>https://www.theperlreview.com/Issues/The_Perl_Review_0_1.pdf</A><L>en</L><F>PDF</F></X><AUTHOR><FIRSTNAME>Dan</FIRSTNAME><LASTNAME>Sugalski</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>3</MONTH><DAY>1</DAY></DATE><COMMENT>An introduction to Parrot: goals, architecture and current status.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Parroty Bits: Bit 1, The Parrot Vooms!</T><A>https://citeseerx.ist.psu.edu/document?type=pdf&amp;doi=7825e05edd742a0a1be860294a2038f595b54d6a</A><L>en</L><F>PDF</F></X><AUTHOR><FIRSTNAME>Dan</FIRSTNAME><LASTNAME>Sugalski</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>5</MONTH><DAY>1</DAY></DATE><COMMENT>An introduction to Parrot assembly code, registers and stacks.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Parroty Bits: Bit 2, BASIC PARROT</T><A>https://citeseerx.ist.psu.edu/document?type=pdf&amp;doi=efe5f092ade6ad5530b7a10a95fc2994fd098a67</A><L>en</L><F>PDF</F></X><AUTHOR><FIRSTNAME>Clinton</FIRSTNAME><MIDDLENAME>A.</MIDDLENAME><LASTNAME>Pierce</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>7</MONTH><DAY>1</DAY></DATE><COMMENT>The author explains how he wrote BASIC on Parrot.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Miscellaneous</TITLE>
      <ITEM><ARTICLE><X status="dead"><T>Aaron Sherman's Tcl vs Perl Comparison</T><A>https://www.perl.com/doc/FMTEYEWTK/versus/asherman-on-tcl.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Aaron</FIRSTNAME><LASTNAME>Sherman</LASTNAME></AUTHOR><COMMENT>A Perl proponent is bashing Tcl. Most arguments were right, but are now out-of-date with the newest Tcl releases.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="dead"><T>Python versus Perl</T><A>https://www.perl.com/doc/FMTEYEWTK/versus/python/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Tom</FIRSTNAME><LASTNAME>Christiansen</LASTNAME></AUTHOR><DATE><YEAR>1995</YEAR><MONTH>6</MONTH><DAY>2</DAY></DATE><COMMENT>A gentle comparison between Python and Perl. There is not much information in this.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Ten Perl Myths</T><A>https://www.perl.com/pub/2000/01/10PerlMyths.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Simon</FIRSTNAME><LASTNAME>Cozens</LASTNAME></AUTHOR><DATE><YEAR>2000</YEAR><MONTH>2</MONTH><DAY>23</DAY></DATE><COMMENT>Debunking some Perl misconceptions.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="removed"><T>Cultured Perl: Genetic algorithms applied with Perl</T><A>https://www.ibm.com/developerworks/library/l-genperl/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Teodor</FIRSTNAME><LASTNAME>Zlatanov</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>8</MONTH><DAY>1</DAY></DATE><COMMENT>An introduction to genetic algorithms.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Parsing Protein Domains with Perl</T><A>https://www.perl.com/pub/2001/11/16/perlbio2.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>James</FIRSTNAME><LASTNAME>Tisdall</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>11</MONTH><DAY>16</DAY></DATE><COMMENT>How to use Perl to find DNA sequences.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Visual Perl</T><A>https://www.perl.com/pub/2002/02/05/visperl.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Eric</FIRSTNAME><LASTNAME>Promislow</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>2</MONTH><DAY>6</DAY></DATE><COMMENT>An advertisement for ActiveState’s Perl IDE on Windows…</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="removed"><T>Cultured Perl: Genetic algorithms, the next generation</T><A>https://www.ibm.com/developerworks/library/l-genperl2/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Teodor</FIRSTNAME><LASTNAME>Zlatanov</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>10</MONTH><DAY>1</DAY></DATE><COMMENT>Some other examples of genetic algorithms. I don't see any value in this second part.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>A Review of Komodo</T><A>https://www.perl.com/pub/2002/10/09/komodo.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Simon</FIRSTNAME><LASTNAME>Cozens</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>10</MONTH><DAY>9</DAY></DATE><COMMENT>… but <AUTHOR><FIRSTNAME>Simon</FIRSTNAME><LASTNAME>Cozens</LASTNAME></AUTHOR> still not adopts it.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>The Year In Scripting Languages Lua/Perl/Python/Ruby/Tcl 2002</T><A>http://www.vendian.org/language_year/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Mitchell</FIRSTNAME><LASTNAME>Charity</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>1</MONTH></DATE><COMMENT>The 2002 summary for these fives languages.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Implementing Flood Control</T><A>https://www.perl.com/pub/2004/11/11/floodcontrol.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Vladi</FIRSTNAME><LASTNAME>Belperchinov-Shabanski</LASTNAME></AUTHOR><DATE><YEAR>2004</YEAR><MONTH>11</MONTH><DAY>11</DAY></DATE><COMMENT>A presentation of how to measure flood ratio, a simple algorithm implementing it and examples of its use.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Data Munging for Non-Programming Biologists</T><A>https://www.perl.com/pub/2005/10/20/scriptome.html/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Amir</FIRSTNAME><LASTNAME>Karger</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Eitan</FIRSTNAME><LASTNAME>Rubin</LASTNAME></AUTHOR><DATE><YEAR>2005</YEAR><MONTH>10</MONTH><DAY>20</DAY></DATE><COMMENT>A Perl cookbook for non-programmers.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
  </BLIST></ITEM>
</LLIST>
</CONTENT>
</PAGE>