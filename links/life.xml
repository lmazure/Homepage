<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../css/strict.xsl"?>
<PAGE xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../css/schema.xsd">
<TITLE>Life cycle</TITLE>
<PATH>links/life.xml</PATH>
<DATE><YEAR>2013</YEAR><MONTH>12</MONTH><DAY>10</DAY></DATE>
<CONTENT>

<BLIST><TITLE>development processes</TITLE>
  <ITEM><BLIST><TITLE>waterfall:</TITLE>
    <ITEM><X><T>Wikipedia</T><A>http://en.wikipedia.org/wiki/Waterfall_model</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM>SSADM:
      <X><T>Wikipedia</T><A>http://en.wikipedia.org/wiki/Structured_Systems_Analysis_and_Design_Method</A><L>en</L><F>HTML</F></X>
    </ITEM>
  </BLIST></ITEM>
  <ITEM>spiral:
  <X><T>Wikipedia</T><A>http://en.wikipedia.org/wiki/Spiral_model</A><L>en</L><F>HTML</F></X>
  </ITEM>
  <ITEM>RAD:
    <X><T>Wikipedia</T><A>http://en.wikipedia.org/wiki/Rapid_application_development</A><L>en</L><F>HTML</F></X>
  </ITEM>
  <ITEM>iterative:
    <X><T>Wikipedia</T><A>http://en.wikipedia.org/wiki/Iterative_and_incremental_development</A><L>en</L><F>HTML</F></X>
  </ITEM>
  <ITEM>cleanroom:
    <X><T>Wikipedia</T><A>http://en.wikipedia.org/wiki/Cleanroom_Software_Engineering</A><L>en</L><F>HTML</F></X>
  </ITEM>
  <ITEM>RUP:
    <X><T>Wikipedia</T><A>http://en.wikipedia.org/wiki/Rational_Unified_Process</A><L>en</L><F>HTML</F></X>,
    <X><T>Open Directory</T><A>http://dmoz.org/Computers/Programming/Methodologies/Unified_Process/</A><L>en</L><F>HTML</F></X>,
    <X><T>Rational Unified Process</T><A>http://www-01.ibm.com/software/awdtools/rup/</A><L>en</L><F>HTML</F></X>
  </ITEM>
  <ITEM><BLIST><TITLE>agile methods:
    <X><T>Wikipedia</T><A>http://en.wikipedia.org/wiki/Agile_software_development</A><L>en</L><F>HTML</F></X>,
    <X><T>Manifesto for Agile Software Development</T><A>http://agilemanifesto.org</A><L>en</L><F>HTML</F></X></TITLE>
    <ITEM><ANCHOR>xp</ANCHOR>XP:
      <X><T>Wikipedia</T><A>http://en.wikipedia.org/wiki/Extreme_Programming</A><L>en</L><F>HTML</F></X>,
      <X><T>xprogramming.com</T><A>http://www.xprogramming.com/</A><L>en</L><F>HTML</F><FEED><A>http://www.xprogramming.com/feed.xml</A><F>RSS</F></FEED></X>,
      <X><T>personal notes</T><A>../notes/xp.html</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM>scrum:
      <X><T>Wikipedia</T><A>http://en.wikipedia.org/wiki/Scrum_%28development%29</A><L>en</L><F>HTML</F></X>,
      <X><T>controlchaos</T><A>http://www.controlchaos.com/</A><L>en</L><F>HTML</F></X>,
      <X><T>Mountain Goat Software</T><A>http://www.mountaingoatsoftware.com</A><L>en</L><F>HTML</F></X>
      (<X><T>Poker Planning</T><A>http://www.planningpoker.com</A><L>en</L><F>HTML</F></X>),
      <X><T>blog of a French scrum master</T><A>http://www.fredericdoillon.com</A><L>fr</L><F>HTML</F></X>
    </ITEM>
    <ITEM>ASD:
      <X><T>Wikipedia</T><A>http://en.wikipedia.org/wiki/Adaptive_Software_Development</A><L>en</L><F>HTML</F></X>
    </ITEM>
    <ITEM>DSDM:
      <X><T>Wikipedia</T><A>http://en.wikipedia.org/wiki/Dynamic_Systems_Development_Method</A><L>en</L><F>HTML</F></X>
    </ITEM>
    <ITEM>lean:
      <X><T>Wikipedia</T><A>http://en.wikipedia.org/wiki/Lean_software_development</A><L>en</L><F>HTML</F></X>
    </ITEM>
  </BLIST></ITEM>
</BLIST>

<BLIST><TITLE>project management</TITLE>
  <ITEM><X><T>Project Management Institute</T><A>http://pmi.org/</A><L>en</L><F>HTML</F></X></ITEM>
  <ITEM><X><T>AFITEP</T><A>http://www.afitep.fr/</A><L>fr</L><F>HTML</F></X></ITEM>
  <ITEM><X><T>Baseline</T><A>http://www.baselinemag.com/</A><L>fr</L><F>HTML</F><FEED><A>http://rssnewsapps.ziffdavis.com/baseline.xml</A><F>RSS</F></FEED></X></ITEM>
  <ITEM><BLIST><TITLE>tools</TITLE>
    <ITEM>list: <X><T>Wikipedia</T><A>http://en.wikipedia.org/wiki/List_of_project_management_software</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X><T>Planner</T><A>http://live.gnome.org/Planner</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X><T>TaskJuggler</T><A>http://taskjuggler.org</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X><T>GANTT Project</T><A>http://ganttproject.biz</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X><T>AdeptTracker</T><A>http://www.adepttracker.net</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X><T>OpenProj</T><A>http://openproj.org</A><L>en</L><F>HTML</F></X></ITEM>
  </BLIST></ITEM>
</BLIST>

<BLIST><TITLE>workload estimation</TITLE>
<ITEM>COCOMO: <X><T>USC</T><A>http://sunset.usc.edu/research/COCOMOII/cocomo81_pgm/cocomo81.html</A><L>en</L><F>HTML</F></X></ITEM>
<ITEM>COCOMO II: <X><T>CSE</T><A>http://sunset.usc.edu/csse/research/COCOMOII/cocomo_main.html</A><L>en</L><F>HTML</F></X></ITEM>
</BLIST>

<BLIST><TITLE>documentation</TITLE>
  <ITEM><X><T>DITA</T><A>http://dita.xml.org</A><L>en</L><F>HTML</F></X></ITEM>
  <ITEM><X><T>DocBook</T><A>http://www.docbook.org</A><L>en</L><F>HTML</F></X></ITEM>
</BLIST>

<BLIST><TITLE>distribution</TITLE>
  <ITEM><ANCHOR>rpm</ANCHOR><X><T>rpm</T><A>http://www.rpm.org/</A><L>en</L><F>HTML</F></X>:
    <X><T>personal notes</T><A>../notes/rpm.html</A><L>en</L><F>HTML</F></X></ITEM>
  <ITEM><ANCHOR>apt</ANCHOR>apt:
    <X><T>HOWTO</T><A>http://www.debian.org/doc/manuals/apt-howto/index.en.html</A><L>en</L><F>HTML</F></X>,
    <X><T>personal notes</T><A>../notes/apt.html</A><L>en</L><F>HTML</F></X></ITEM>
</BLIST>

<BLIST><TITLE>code escrow</TITLE>
  <ITEM><X><T>LOGITAS</T><A>http://www.logitas.com</A><L>fr</L><F>HTML</F></X></ITEM>
</BLIST>

<BLIST><TITLE>defect classification</TITLE>
   <ITEM><X><T>ODC</T><A>http://researcher.watson.ibm.com/researcher/view_project.php?id=480</A><L>en</L><F>HTML</F></X></ITEM>
</BLIST>

<BLIST><TITLE>issue tracking</TITLE>
  <ITEM>list:
    <X><T>tigris.org</T><A>http://issuetrack.tigris.org</A><L>en</L><F>HTML</F></X></ITEM>
  <ITEM><ANCHOR>ddts</ANCHOR>ddts: <X><T>personal notes</T><A>../notes/ddts.htm</A><L>en</L><F>HTML</F></X></ITEM>
  <ITEM><X><T>ClearQuest</T><A>http://www-306.ibm.com/software/awdtools/clearquest/index.html</A><L>en</L><F>HTML</F></X></ITEM>
  <ITEM><X><T>Request Tracker</T><A>http://bestpractical.com/rt/</A><L>en</L><F>HTML</F></X></ITEM>
  <ITEM><X><T>bugzilla</T><A>http://www.bugzilla.org/</A><L>en</L><F>HTML</F></X></ITEM>
  <ITEM><X><T>JitterBug</T><A>http://www.samba.org/jitterbug/</A><L>en</L><F>HTML</F></X></ITEM>
  <ITEM><X><T>TWiki</T><A>http://develop.twiki.org</A><L>en</L><F>HTML</F></X></ITEM>
  <ITEM><X><T>Scarab</T><A>http://scarab.tigris.org/</A><L>en</L><F>HTML</F></X></ITEM>
  <ITEM><ANCHOR>jira</ANCHOR><X><T>JIRA</T><A>http://www.atlassian.com/software/jira/</A><L>en</L><F>HTML</F></X>:
    <X><T>doc</T><A>http://www.atlassian.com/software/jira/docs/latest/index.html</A><L>en</L><F>HTML</F></X>,
    <X><T>personal notes</T><A>../notes/jira.html</A><L>en</L><F>HTML</F></X></ITEM>
  <ITEM><X><T>Trac</T><A>http://trac.edgewall.org</A><L>en</L><F>HTML</F></X></ITEM>
  <ITEM><X><T>Track+</T><A>http://www.trackplus.com</A><L>en</L><F>HTML</F></X></ITEM>
  <ITEM><X><T>GNATS</T><A>http://www.gnu.org/software/gnats</A><L>en</L><F>HTML</F></X></ITEM>
  <ITEM><X><T>MantisBT</T><A>http://www.mantisbt.org</A><L>en</L><F>HTML</F></X></ITEM>
  <ITEM><X><T>PR-Tracker</T><A>http://www.prtracker.com</A><L>en</L><F>HTML</F></X></ITEM>
</BLIST>

<BLIST><TITLE>tool integration</TITLE>
  <ITEM><X><T>Rally</T><A>http://www.rallydev.com</A><L>en</L><F>HTML</F></X></ITEM>
  <ITEM><X><T>VectorCAST</T><A>http://www.vectorcast.com</A><L>en</L><F>HTML</F></X></ITEM>
  <ITEM><X><T>MasterControl</T><A>http://www.mastercontrol.com</A><L>en</L><F>HTML</F></X></ITEM>
  <ITEM><X><T>SonarQube</T><A>http://www.sonarqube.org</A><L>en</L><F>HTML</F></X>: duplicated code, coding standards, unit tests, code complexity, potential bugs, code coverage...</ITEM>
</BLIST>


<BLIST><TITLE>standards</TITLE>
  <ITEM><X><T>IEEE 1058-1998</T><A>http://elearning.nic.in/technical_documents/project-management/training/1058-1998.pdf</A><L>en</L><F>PDF</F></X>: IEEE Standard for Software Project Management Plans</ITEM>
  <ITEM><X><T>IEEE 1028-1997</T><A>http://pesona.mmu.edu.my/~wruslan/SE2/Readings/detail/Reading-6.pdf</A><L>en</L><F>PDF</F></X>: IEEE Standard for Software Reviews</ITEM>
</BLIST>

<LINE/>

<BLIST><TITLE>articles</TITLE>
  <ITEM><BLIST><TITLE>development processes</TITLE>
    <ITEM><BLIST><TITLE>project life cycles</TITLE>
      <ITEM><ARTICLE><X status='dead'><T>Software Life Cycle</T><A>http://www.engineering.wright.edu/~thartrum/CEG460FA09/chap15.pdf</A><L>en</L><F>PDF</F></X><AUTHOR>Bernd Bruegge</AUTHOR><AUTHOR>Allen Dutoit</AUTHOR><DATE><YEAR>2000</YEAR><MONTH>2</MONTH><DAY>4</DAY></DATE><COMMENT>A university presentation of waterfall, V and spiral life cycle models.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Project Lifecycle Models:  How they differ and when to use them</T><A>http://www.business-esolutions.com/islm.htm</A><L>en</L><F>HTML</F></X><AUTHOR>JJ Kuhl</AUTHOR><DATE><YEAR>2002</YEAR></DATE><COMMENT>A good overview of the main development cycles.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>agile methods</TITLE>
      <ITEM><ARTICLE><X><T>Survey Says...Agile Has Crossed the Chasm
Examining the effectiveness of agile practices</T><A>http://www.drdobbs.com/architecture-and-design/survey-saysagile-has-crossed-the-chasm/200001986</A><L>en</L><F>HTML</F></X><AUTHOR>Scott W. Ambler</AUTHOR><DATE><YEAR>2007</YEAR><MONTH>7</MONTH><DAY>2</DAY></DATE><COMMENT>A survey of agile methods usage and results, there is some interesting stuff despite the fact that the results are strongly biased (only persons interested in agility have answered).</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status='dead'><T>Are you agile or fragile?</T><A>http://video.google.com/videoplay?docid=490917380139552102</A><L>en</L><F>Flash Video</F><DURATION><HOUR>2</HOUR><MINUTE>2</MINUTE><SECOND>26</SECOND></DURATION></X><AUTHOR>Scott W. Ambler</AUTHOR><DATE><YEAR>2003</YEAR><MONTH>3</MONTH><DAY>27</DAY></DATE><COMMENT>A long discussion on agile methodologies: how to budget the project, generalizing specialists, agile modelling, change management...</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Agile RUP: Experiences from the trenches</T><A>http://www.ibm.com/developerworks/rational/library/edge/08/feb08/lines_barnes_holmes_ambler/index.html</A><L>en</L><F>HTML</F></X><AUTHOR>Scott W. Ambler</AUTHOR><AUTHOR>Mark Lines</AUTHOR><AUTHOR>Joshua Barnes</AUTHOR><AUTHOR>Julian Holmes</AUTHOR><DATE><YEAR>2008</YEAR><MONTH>2</MONTH><DAY>15</DAY></DATE><COMMENT>Some discussion about agility and RUP: requirement changes should be avoided at the end of the lifecycle, how to introduce agility in a RUP lifecycle, and geographically distributed teams.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Dialogue Sheets: A new tool for retrospectives</T><A>http://www.infoq.com/articles/dialogue-sheets-retrospectives</A><L>en</L><F>HTML</F></X><AUTHOR>Allan Kelly</AUTHOR><DATE><YEAR>2012</YEAR><MONTH>1</MONTH><DAY>3</DAY></DATE><COMMENT>This tool simply consists into using a large sheet of paper instead of a whiteboard and writing down the questions instead of having a facilitator.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>The 3 maturity stages of a software team and how scrum fails to identify them</T><A>http://5whys.com/blog/the-3-maturity-stages-of-a-software-team-and-how-scrum-fails.html</A><L>en</L><F>HTML</F></X><AUTHOR>Roy Osherove</AUTHOR><DATE><YEAR>2010</YEAR><MONTH>5</MONTH><DAY>17</DAY></DATE><COMMENT>Agile methodology is only for mature team. For a chaotic team, a dictator is required.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>So Long and Thanks for the All the Manifestos</T><A>http://visualstudiomagazine.com/articles/2013/06/01/so-long-and-thanks-for-the-all-the-manifestos.aspx</A><L>en</L><F>HTML</F></X><AUTHOR>David Starr</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>6</MONTH><DAY>16</DAY></DATE><COMMENT>The history of agile and the best practices it brought to software development.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X quality='1'><T>Coplien and Martin Debate TDD, CDD and Professionalism</T><A>http://www.infoq.com/interviews/coplien-martin-tdd</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>22</MINUTE><SECOND>48</SECOND></DURATION></X><X quality='1'><T>Jim Coplien and Bob Martin Debate TDD</T><A>http://www.youtube.com/watch?v=KtHQGs3zFAM</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>22</MINUTE><SECOND>48</SECOND></DURATION></X><AUTHOR>Jim Coplien</AUTHOR><AUTHOR>Robert C. Martin</AUTHOR><DATE><YEAR>2007</YEAR></DATE><COMMENT>The title says all.</COMMENT></ARTICLE></ITEM>
      <ITEM><BLIST><TITLE>XP</TITLE>
        <ITEM><ARTICLE><X status='dead'><T>Demystifying Extreme Programming: "XP distilled" revisited, Part 1</T><A>http://www.ibm.com/developerworks/library/j-xp0813/</A><L>en</L><F>HTML</F></X><AUTHOR>Roy W. Miller</AUTHOR><DATE><YEAR>2002</YEAR><MONTH>8</MONTH><DAY>13</DAY></DATE><COMMENT>XP is evolving : from being focussed mainly on programming, it is now looking at the whole organization (programmers, business and management). Miller describes the XP values and the joint practices.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X status='dead'><T>Demystifying Extreme Programming: "XP distilled" revisited, Part 2</T><A>http://www.ibm.com/developerworks/java/library/j-xp0910.html</A><L>en</L><F>HTML</F></X><AUTHOR>Roy W. Miller</AUTHOR><DATE><YEAR>2002</YEAR><MONTH>9</MONTH><DAY>10</DAY></DATE><COMMENT>A description of the programmer practices.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Demystifying Extreme Programming: "XP distilled" revisited, Part 3</T><A>http://www.ibm.com/developerworks/library/j-xp1008/</A><L>en</L><F>HTML</F></X><AUTHOR>Roy W. Miller</AUTHOR><DATE><YEAR>2002</YEAR><MONTH>10</MONTH><DAY>8</DAY></DATE><COMMENT>A description of the customer practices and management practices.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Using an Agile Software Process with Offshore Development</T><A>http://martinfowler.com/articles/agileOffshore.html</A><L>en</L><F>HTML</F></X><AUTHOR>Martin Fowler</AUTHOR><DATE><YEAR>2003</YEAR><MONTH>9</MONTH></DATE><COMMENT>The author describes the lessons learned by a company using extreme programming and off shoring some of its developments.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Code Improvement Through Cyclomatic Complexity</T><A>http://www.onjava.com/pub/a/onjava/2004/06/16/ccunittest.html</A><L>en</L><F>HTML</F></X><AUTHOR>Andrew Glover</AUTHOR><DATE><YEAR>2004</YEAR><MONTH>6</MONTH><DAY>16</DAY></DATE><COMMENT>First use CC to find potentially dangerous code, write unit tests, then refactor and check that the unit tests still pass.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Pair Programming Considered Harmful?</T><A>http://techcrunch.com/2012/03/03/pair-programming-considered-harmful/</A><L>en</L><F>HTML</F></X><AUTHOR>Jon Evans</AUTHOR><DATE><YEAR>2012</YEAR><MONTH>3</MONTH><DAY>3</DAY></DATE><COMMENT>The author claims that pair programming diminishes creativity.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Extreme Programming, a Reflection</T><A>http://blog.8thlight.com/uncle-bob/2013/12/10/Thankyou-Kent.html</A><L>en</L><F>HTML</F></X><AUTHOR>Robert C. Martin</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>12</MONTH><DAY>10</DAY></DATE><COMMENT>Uncle Bob goes back to Kent Beck's seminal book and explains that, despite the fact that the "Extreme Programming" term is out of fashion, the practices described in the book are still here.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>Scrum</TITLE>
        <ITEM><ARTICLE><X><T>Wrestling Gold from Today's Software Projects</T><A>http://itc.conversationsnetwork.org/shows/detail350.html</A><L>en</L><F>MP3</F><DURATION><MINUTE>45</MINUTE><SECOND>8</SECOND></DURATION></X><AUTHOR>Ken Schwaber</AUTHOR><DATE><YEAR>2004</YEAR><MONTH>7</MONTH><DAY>17</DAY></DATE><COMMENT>This is the usual presentation of the advantages of agile process (in particular scrum). The Q&amp;A part is more interesting.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X quality='2'><T>Scrum et Al</T><A>https://www.youtube.com/watch?v=_47VWIvOKH8</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>1</MINUTE><SECOND>4</SECOND></DURATION></X><AUTHOR>Ken Schwaber</AUTHOR><DATE><YEAR>2006</YEAR><MONTH>9</MONTH><DAY>5</DAY></DATE><COMMENT>The Scrum part is not large, Schwaber spends a lot of time pointing some deviances of the software companies: lowering quality to keep the dates, working overtime...</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Scrum Tuning: Lessons learned at Google</T><A>https://www.youtube.com/watch?v=9y10Jvruc_Q</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>0</MINUTE><SECOND>7</SECOND></DURATION></X><AUTHOR>Jeff Sutherland</AUTHOR><DATE><YEAR>2006</YEAR><MONTH>12</MONTH><DAY>7</DAY></DATE><COMMENT>(The sound is very bad for the 4 first minutes, but gets better after.) Sutherland describes the application of Scrum in the Google AdWords teams: how the Scrum elements were incrementally added, why they were set up... This description of a Scrum implementation would be much more valuable if Sutherland would add less dubious statements on the fact that Scrum is <B>the</B> wonderful software methodology. As a side note, I wonder why so few Google employees participate to this presentation and many leave before its end... Maybe they have the same kind of bullshit feeling as myself.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X protection='free_registration'><T>Getting Started With Scrum Development -- Of all current software development methodologies, the most recognizable in mainstream IT circles is Scrum</T><A>http://www.devx.com/enterprise/Article/45509</A><L>en</L><F>HTML</F></X><AUTHOR>Eric Landes</AUTHOR><DATE><YEAR>2010</YEAR><MONTH>8</MONTH><DAY>31</DAY></DATE><COMMENT>A short overview of Scrum.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X quality='2'><T>The Scrum Guide -- The Definitive Guide to Scrum: The Rules of the Game</T><A>https://www.scrum.org/portals/0/documents/scrum%20guides/scrum_guide.pdf</A><L>en</L><F>PDF</F></X><AUTHOR>Ken Schwaber</AUTHOR><AUTHOR>Jeff Sutherland</AUTHOR><DATE><YEAR>2011</YEAR><MONTH>10</MONTH></DATE><COMMENT>The official Scrum guide.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>Test Driven Development</TITLE>
        <ITEM><ARTICLE><X><T>Evolutionary architecture and emergent design: Test-driven design, Part 1 -- Allowing tests to drive and improve your design</T><A>http://www.ibm.com/developerworks/java/library/j-eaed2/</A><L>en</L><F>HTML</F></X><AUTHOR>Neal Ford</AUTHOR><DATE><YEAR>2009</YEAR><MONTH>2</MONTH><DAY>24</DAY></DATE><COMMENT>The author tries to convince that writing tests first results into a better design.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Evolutionary architecture and emergent design: Test-driven design, Part 2 -- More on allowing tests to drive and improve your design</T><A>http://www.ibm.com/developerworks/java/library/j-eaed3/</A><L>en</L><F>HTML</F></X><AUTHOR>Neal Ford</AUTHOR><DATE><YEAR>2009</YEAR><MONTH>4</MONTH><DAY>7</DAY></DATE><COMMENT>The continuation of the previous article.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>An Introduction to Test Driven Development in C#</T><A>http://www.youtube.com/watch?v=f60aIlNhMoE</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>9</MINUTE><SECOND>41</SECOND></DURATION></X><AUTHOR>Richard Banks</AUTHOR><DATE><YEAR>2008</YEAR><MONTH>1</MONTH><DAY>19</DAY></DATE><COMMENT>A quick introduction to TDD using C# and NUnit.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X quality='1'><T>J.B. Rainsberger</T><A>http://vimeo.com/37595051</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>6</MINUTE><SECOND>50</SECOND></DURATION></X><AUTHOR>J. B. Rainsberger</AUTHOR><DATE><YEAR>2012</YEAR><MONTH>2</MONTH><DAY>28</DAY></DATE><COMMENT>Another introduction, this one in Java.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Larry and Jen do Roman Numerals in C++</T><A>http://www.slideshare.net/JonJagger/larry-and-jen-do-roman-numerals-in-c</A><L>en</L><F>HTML</F></X><AUTHOR>Jon Jagger</AUTHOR><AUTHOR>Olve Maudal</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>7</MONTH><DAY>19</DAY></DATE><COMMENT>An example of C++ TDD.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>What Really Matters in Test-Driven Development -- It isn't about the tests -- it's about the feedback.</T><A>http://visualstudiomagazine.com/articles/2013/08/01/what-really-matters-in-developer-testing.aspx</A><L>en</L><F>HTML</F></X><AUTHOR>Peter Provost</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>8</MONTH><DAY>28</DAY></DATE><COMMENT>More than writing tests first, the important point is to have a very short code / test loop.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Test First</T><A>http://blog.8thlight.com/uncle-bob/2013/09/23/Test-first.html</A><L>en</L><F>HTML</F></X><AUTHOR>Robert C. Martin</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>9</MONTH><DAY>23</DAY></DATE><COMMENT>Tests should be written first, clean first, maintain first.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>MountainWest RubyConf 2013 Trolls of 2013 by Ryan Davis</T><A>http://www.youtube.com/watch?v=r1JMxJ06I98</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>36</MINUTE><SECOND>38</SECOND></DURATION></X><AUTHOR>Ryan Davis</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>4</MONTH><DAY>4</DAY></DATE><COMMENT>Writing an interpreter in Ruby while using TDD. Ryan Davis finishes with a lightning talk, presenting Flay, a code analysis tool detecting similar code pieces.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>The Transformation Priority Premise</T><A>http://blog.8thlight.com/uncle-bob/2013/05/27/TheTransformationPriorityPremise.html</A><L>en</L><F>HTML</F></X><AUTHOR>Robert C. Martin</AUTHOR><DATE><YEAR>2010</YEAR><MONTH>12</MONTH><DAY>19</DAY></DATE><COMMENT>Uncle Bob proposes a prioritized list of transformations (giving higher priority to simpler transformations) to be applied when the code must be changed to get the last added test green. Each transformation results in a more generic code. Uncle Bob claims that, by privileging the simplest transformations, the risk of an impasse (i.e. having to rewrite an important part of the production code in order to get the next test green) is reduced.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X quality='1'><T>Ian Cooper: TDD, where did it all go wrong</T><A>http://vimeo.com/68375232</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>0</MINUTE><SECOND>37</SECOND></DURATION></X><AUTHOR>Ian Cooper</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>6</MONTH></DATE><COMMENT>Coming back to the initial ideas of Kent Beck with some good advice on how to do TDD.</COMMENT></ARTICLE></ITEM>
        <ITEM><BLIST><TITLE>Brett L. Schuchert</TITLE>
          <ITEM><BLIST><TITLE>RPN calculator in Java using Eclipse</TITLE>
            <ITEM><ARTICLE><X><T>Getting Started with Tdd in Java using Eclipse</T><A>http://vimeo.com/10569751</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>51</MINUTE><SECOND>47</SECOND></DURATION></X><AUTHOR>Brett L. Schuchert</AUTHOR><DATE><YEAR>2010</YEAR><MONTH>3</MONTH><DAY>30</DAY></DATE><COMMENT>A rather slow but clear introduction to TDD using Java and Eclipse : creating a RPN calculator.</COMMENT></ARTICLE></ITEM>
            <ITEM><ARTICLE><X><T>Adding Basic Operators to the RpnCalcualtor</T><A>http://vimeo.com/10570537</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>13</MINUTE><SECOND>54</SECOND></DURATION></X><AUTHOR>Brett L. Schuchert</AUTHOR><DATE><YEAR>2010</YEAR><MONTH>3</MONTH><DAY>30</DAY></DATE><COMMENT>Adding add, subtract and factorial to the previous example.</COMMENT></ARTICLE></ITEM>
            <ITEM><ARTICLE><X><T>Removing Duplication and the Ocp</T><A>http://vimeo.com/10597511</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>10</MINUTE><SECOND>57</SECOND></DURATION></X><AUTHOR>Brett L. Schuchert</AUTHOR><DATE><YEAR>2010</YEAR><MONTH>3</MONTH><DAY>31</DAY></DATE><COMMENT>Modifying the API of the previously implemented operators.</COMMENT></ARTICLE></ITEM>
            <ITEM><ARTICLE><X><T>Extracting to strategy</T><A>http://vimeo.com/10597797</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>8</MINUTE><SECOND>52</SECOND></DURATION></X><AUTHOR>Brett L. Schuchert</AUTHOR><DATE><YEAR>2010</YEAR><MONTH>3</MONTH><DAY>31</DAY></DATE><COMMENT>Implementing the Strategy pattern.</COMMENT></ARTICLE></ITEM>
            <ITEM><ARTICLE><X><T>Removing Duplication by Refactoring</T><A>http://vimeo.com/10639853</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>8</MINUTE><SECOND>57</SECOND></DURATION></X><AUTHOR>Brett L. Schuchert</AUTHOR><DATE><YEAR>2010</YEAR><MONTH>4</MONTH><DAY>2</DAY></DATE><COMMENT>Factoring common code into a base class and adding multiply.</COMMENT></ARTICLE></ITEM>
            <ITEM><ARTICLE><X><T>Removing Duplication Via TDD using Mockito</T><A>http://vimeo.com/10647496</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>18</MINUTE><SECOND>46</SECOND></DURATION></X><AUTHOR>Brett L. Schuchert</AUTHOR><DATE><YEAR>2010</YEAR><MONTH>4</MONTH><DAY>2</DAY></DATE><COMMENT>Using Mockito, a mocking framework.</COMMENT></ARTICLE></ITEM>
            <ITEM><ARTICLE><X><T>Introducing an Abstract Factory</T><A>http://vimeo.com/10647851</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>24</MINUTE><SECOND>48</SECOND></DURATION></X><AUTHOR>Brett L. Schuchert</AUTHOR><DATE><YEAR>2010</YEAR><MONTH>4</MONTH><DAY>2</DAY></DATE><COMMENT>Explaining how to use dependency injection to be able to mock a class.</COMMENT></ARTICLE></ITEM>
            <ITEM><ARTICLE><X><T>Adding a Sum Operator</T><A>http://vimeo.com/10679730</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>8</MINUTE><SECOND>22</SECOND></DURATION></X><AUTHOR>Brett L. Schuchert</AUTHOR><DATE><YEAR>2010</YEAR><MONTH>4</MONTH><DAY>4</DAY></DATE><COMMENT>Using what has been done previously to add a sum operator.</COMMENT></ARTICLE></ITEM>
            <ITEM><ARTICLE><X><T>Adding a Prime Factors Operator</T><A>http://vimeo.com/10681803</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>18</MINUTE><SECOND>46</SECOND></DURATION></X><AUTHOR>Brett L. Schuchert</AUTHOR><DATE><YEAR>2010</YEAR><MONTH>4</MONTH><DAY>4</DAY></DATE><COMMENT>Using human readable (kind of BDD) test naming.</COMMENT></ARTICLE></ITEM>
            <ITEM><ARTICLE><X><T>Composing Math Operators and Programming the Calculator</T><A>http://vimeo.com/10685388</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>17</MINUTE><SECOND>53</SECOND></DURATION></X><AUTHOR>Brett L. Schuchert</AUTHOR><DATE><YEAR>2010</YEAR><MONTH>4</MONTH><DAY>4</DAY></DATE><COMMENT>An implementation of the composite pattern, but this does not teach new things about writing Unit Tests.</COMMENT></ARTICLE></ITEM>
            <ITEM><ARTICLE><X><T>Using FitNesse to Program The Calculator</T><A>http://vimeo.com/10686005</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>13</MINUTE><SECOND>8</SECOND></DURATION></X><AUTHOR>Brett L. Schuchert</AUTHOR><DATE><YEAR>2010</YEAR><MONTH>4</MONTH><DAY>4</DAY></DATE><COMMENT>A short demonstration on how to download, install, and write the fixtures for FitNesse.</COMMENT></ARTICLE></ITEM>
          </BLIST></ITEM>
          <ITEM><BLIST><TITLE>Shunting Yard Algorithm in C# using Visual Studio and ReSharper</TITLE>
            <ITEM><ARTICLE><X><T>Shunting Yard Algorithm in C#, Part 1</T><A>http://vimeo.com/10941784</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>18</MINUTE><SECOND>18</SECOND></DURATION></X><AUTHOR>Brett L. Schuchert</AUTHOR><DATE><YEAR>2010</YEAR><MONTH>4</MONTH><DAY>15</DAY></DATE><COMMENT>A demonstration on using TDD in Visual Studio. The pace is quite fast.</COMMENT></ARTICLE></ITEM>
            <ITEM><ARTICLE><X><T>Shunting Yard Algorithm in C#, Part 2</T><A>http://vimeo.com/10942447</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>13</MINUTE><SECOND>19</SECOND></DURATION></X><AUTHOR>Brett L. Schuchert</AUTHOR><DATE><YEAR>2010</YEAR><MONTH>4</MONTH><DAY>15</DAY></DATE><COMMENT>Implementation of operator precedence.</COMMENT></ARTICLE></ITEM>
            <ITEM><ARTICLE><X><T>Shunting Yard Algorithm in C#, Part 3</T><A>http://vimeo.com/10943328</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>12</MINUTE><SECOND>1</SECOND></DURATION></X><AUTHOR>Brett L. Schuchert</AUTHOR><DATE><YEAR>2010</YEAR><MONTH>4</MONTH><DAY>15</DAY></DATE><COMMENT>Implementation of parentheses. The design is dubious and the way he adds division support is even more hacky: he does not add a simple test for this one.</COMMENT></ARTICLE></ITEM>
          </BLIST></ITEM>
        </BLIST></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>agile methods and regulatory environments</TITLE>
        <ITEM><ARTICLE><X status='dead'><T>Agile v. FDA</T><A>http://forums.construx.com/forums/t/432.aspx</A><L>en</L><F>HTML</F></X><DATE><YEAR>2007</YEAR><MONTH>7</MONTH><DAY>5</DAY></DATE><COMMENT>An interesting forum discussion about FDA and agility.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Potentially Shippable Product Increments</T><A>http://cf.agilealliance.org/articles/system/article/file/970/file.pdf</A><L>en</L><F>PDF</F></X><AUTHOR>Ken Schwaber</AUTHOR><DATE><YEAR>2002</YEAR><MONTH>10</MONTH><DAY>27</DAY></DATE><COMMENT>Ken Schwaber explains that, in order to be compliant with the FDA when applying an agile method, you just have to be compliant with FDA regulations for each increment, for example updating the whole documentation set. This is obviously right, but this is much more difficult than he seems to imply: updating traceability matrices, FMEAs... is easy, but how do you revalidate the software every four weeks? Executing the automated functional tests is simple, but you have to perform the human acceptance tests (for the new features and also for the impacted features in order to ensure non-regression).</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X status='dead'><T>Agile Methodologies in a Validated Setting</T><A>http://www.jacquette.com/articles/agilevalidation.shtml</A><L>en</L><F>PDF</F></X><AUTHOR>Frank Jacquette</AUTHOR><DATE><YEAR>2002</YEAR><MONTH>3</MONTH><DAY>1</DAY></DATE><COMMENT>This article is more pragmatic, but, once again, user acceptance is ignored. I believe the author presumes that there is a validation phase (containing at least the acceptance tests) at the end of the agile cycles/sprints.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X quality='1'><T>Agile Methods: Most are not ready for prime time in medical device software design and development</T><A>http://www.inea.com/PDF/Agile_Methods_July_2006.pdf</A><L>en</L><F>PDF</F></X><AUTHOR>David A. Vogel</AUTHOR><DATE><YEAR>2006</YEAR><MONTH>7</MONTH><DAY>25</DAY></DATE><COMMENT>A good analysis of the applicability of agile methods for medical device software.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>defect management</TITLE>
      <ITEM><ARTICLE><X><T>How to Decide What Bugs to Fix When, Part 1</T><A>http://www.onlamp.com/pub/a/onlamp/2005/08/11/fixingbugs.html</A><L>en</L><F>HTML</F></X><AUTHOR>Scott Berkun</AUTHOR><DATE><YEAR>2005</YEAR><MONTH>8</MONTH><DAY>11</DAY></DATE><COMMENT>First, basic way to classify bugs: Must Fix; Might Fix; Won't Fix. Second, use more realistic Severity &amp; Priority classification with the software version, unique bug ID, finder name...</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>How to Decide What Bugs to Fix When, Part 2</T><A>http://www.onlamp.com/pub/a/onlamp/2005/08/11/fixingbugs2.html</A><L>en</L><F>HTML</F></X><AUTHOR>Scott Berkun</AUTHOR><DATE><YEAR>2005</YEAR><MONTH>9</MONTH><DAY>1</DAY></DATE><COMMENT>Third, defined exit criteria (number of bugs of such type, performance criteria, acceptance test cases...). Fourth, planned improvements.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Tracking Bugs</T><A>http://weblogs.asp.net/scottgu/archive/2004/11/03/251930.aspx</A><L>en</L><F>HTML</F></X><AUTHOR>Scott Guthrie</AUTHOR><DATE><YEAR>2004</YEAR><MONTH>11</MONTH><DAY>3</DAY></DATE><COMMENT>A description of Microsoft tracking tool and of their bug management process.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status='dead'><T>Bugsquad/TriageGuide/FrequentlyAskedQuestions</T><A>http://live.gnome.org/Bugsquad_2fTriageGuide_2fFrequentlyAskedQuestions</A><L>en</L><F>HTML</F></X><AUTHOR>Olav Vitters</AUTHOR><DATE><YEAR>2005</YEAR><MONTH>7</MONTH><DAY>28</DAY></DATE><COMMENT>A description of the Gnome bug triage.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
  </BLIST></ITEM>
  <ITEM><BLIST><TITLE>geographically distributed development</TITLE>
    <ITEM><ARTICLE><X><T>Tools for Geographically Distributed Software Development</T><A>http://www.onlamp.com/pub/a/onlamp/2007/05/17/tools-for-geographically-distributed-software-development.html</A><L>en</L><F>HTML</F></X><AUTHOR>Ryan Bagueros</AUTHOR><DATE><YEAR>2007</YEAR><MONTH>5</MONTH><DAY>17</DAY></DATE><COMMENT>The author described the tools (IRC, bugzilla, Skype...) he uses to work with offshore workmates.</COMMENT></ARTICLE></ITEM>
  </BLIST></ITEM>
  <ITEM><BLIST><TITLE>defect tracking</TITLE>
    <ITEM><ARTICLE><X><T>Bug Writing Guidelines</T><A>http://landfill.bugzilla.org/bugzilla-tip/page.cgi?id=bug-writing.html</A><L>en</L><F>HTML</F></X><AUTHOR>Bugzilla team</AUTHOR><COMMENT>Some good advice on how to report bugs.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Three free bug-tracking tools</T><A>http://www.techrepublic.com/article/three-free-bug-tracking-tools/</A><L>en</L><F>HTML</F></X><AUTHOR>Shelley Doll</AUTHOR><DATE><YEAR>2002</YEAR><MONTH>8</MONTH><DAY>22</DAY></DATE><COMMENT>A simplistic comparison of Bugzilla, JitterBug and Request Tracker.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X quality='1'><T>Bug Trackers: Do They Really All Suck?</T><A>http://www.oreillynet.com/pub/a/network/2005/12/09/do-bug-trackers-all-suck.html</A><L>en</L><F>HTML</F></X><AUTHOR>Matthew B. Doar</AUTHOR><DATE><YEAR>2005</YEAR><MONTH>12</MONTH><DAY>9</DAY></DATE><COMMENT>Some good points about the limitations of current bug tracking systems.</COMMENT></ARTICLE></ITEM>
    <ITEM><BLIST><TITLE>RT</TITLE>
      <ITEM><ARTICLE><X><T>Request Tracker</T><A>http://www.perl.com/pub/a/2001/11/28/request.html</A><L>en</L><F>HTML</F></X><AUTHOR>Robert Spier</AUTHOR><DATE><YEAR>2001</YEAR><MONTH>11</MONTH><DAY>28</DAY></DATE><COMMENT>An overview of RT, a task manager written and customizable with Perl.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>DDTS</TITLE>
      <ITEM><ARTICLE><X><T>How does the ClearDDTS locking mechanism work?</T><A>http://www-1.ibm.com/support/docview.wss?uid=swg21134117</A><L>en</L><F>HTML</F></X><DATE><YEAR>2001</YEAR><MONTH>3</MONTH><DAY>3</DAY></DATE><COMMENT>The title says all.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>DDTS problem-solving and debugging: tools and techniques Part</T><A>http://www-01.ibm.com/support/docview.wss?rs=0&amp;uid=swg21134969</A><L>en</L><F>HTML</F></X><DATE><YEAR>1999</YEAR><MONTH>12</MONTH><DAY>3</DAY></DATE><COMMENT>A description of the logfile management and a short list of the main deamons.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>DDTS problem-solving and debugging: tools and techniques Part 2</T><A>http://download.boulder.ibm.com/ibmdl/pub/software/rational/technote/10022_1-KCX7K_1-FEHX.txt</A><L>en</L><F>txt</F></X><DATE><YEAR>1999</YEAR><MONTH>12</MONTH><DAY>3</DAY></DATE><COMMENT>Some advice to resolve problems with the daemons (and their queues), Web interface and xddts.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Bugzilla</TITLE>
      <ITEM><ARTICLE><X><T>Track bugs with Bugzilla on Linux - A step-by-step installation guide for this popular open source defect tracker</T><A>http://www.ibm.com/developerworks/linux/library/l-bugzilla.html</A><L>en</L><F>HTML</F></X><AUTHOR>Jason "Jay" Clark</AUTHOR><DATE><YEAR>2005</YEAR><MONTH>3</MONTH><DAY>18</DAY></DATE><COMMENT>As indicated in the title, a step by step checklist for installing Bugzilla.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
  </BLIST></ITEM>
  <ITEM><BLIST><TITLE>distribution</TITLE>
    <ITEM><BLIST><TITLE>RPM</TITLE>
      <ITEM><ARTICLE><X status='zombie'><T>Packaging software with RPM, Part 1 - Using RPM on Red Hat Linux 7.1</T><A>http://www.ibm.com/developerworks/linux/library/l-rpm1/</A><L>en</L><F>HTML</F></X><AUTHOR>Dan Poirier</AUTHOR><DATE><YEAR>2001</YEAR><MONTH>11</MONTH></DATE><COMMENT>Creating a basic RPM file and changing the build root directory to avoid overwriting the binaries on the build machine.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status='zombie'><T>Packaging software with RPM, Part 2 - Building without root, patching software, and distributing RPMs</T><A>http://www.ibm.com/developerworks/linux/library/l-rpm2/</A><L>en</L><F>HTML</F></X><AUTHOR>Dan Poirier</AUTHOR><DATE><YEAR>2001</YEAR><MONTH>12</MONTH></DATE><COMMENT>Building packages without being root and handling patches on someone's else sources.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Packaging software with RPM, Part 3 - Running scripts at install and uninstall</T><A>http://ploug22.free.fr/doc/l-rpm3.pdf</A><L>en</L><F>PDF</F></X><AUTHOR>Dan Poirier</AUTHOR><DATE><YEAR>2002</YEAR><MONTH>2</MONTH></DATE><COMMENT>Pre and post install scripts and triggers on other packages.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
  </BLIST></ITEM>
  <ITEM><BLIST><TITLE>user interface</TITLE>
    <ITEM><ARTICLE><X><T>A Summary of Principles for User-Interface Design</T><A>http://www.sylvantech.com/%7Etalin/projects/ui_design.html</A><L>en</L><F>HTML</F></X><AUTHOR><X><T>Talin</T><A>http://www.sylvantech.com/%7Etalin</A><L>en</L><F>HTML</F></X></AUTHOR><DATE><YEAR>1998</YEAR></DATE><COMMENT>Talin has created a good summary of what must be kept in mind while designing a UI.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>GUI Architectures</T><A>http://martinfowler.com/eaaDev/uiArchs.html</A><L>en</L><F>HTML</F></X><AUTHOR>Martin Fowler</AUTHOR><DATE><YEAR>2006</YEAR><MONTH>7</MONTH><DAY>18</DAY></DATE><COMMENT>A comparison, not very clear, of different UI architectures: MVC, VisualWorks, and MVP.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Don't Make Me Click</T><A>http://www.youtube.com/watch?v=EuELwq2ThJE</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>4</MINUTE><SECOND>47</SECOND></DURATION></X><AUTHOR>Aza Raskin</AUTHOR><DATE><YEAR>2008</YEAR><MONTH>4</MONTH><DAY>2</DAY></DATE><COMMENT>Some ideas on Web UI: some are good, other ones are more food for thought.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X quality='-1'><T>Online Maps: A Walk in Space</T><A>http://www.youtube.com/watch?v=3a6bcnHr3tA</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>4</MINUTE><SECOND>6</SECOND></DURATION></X><AUTHOR>Ted Selker</AUTHOR><DATE><YEAR>2008</YEAR><MONTH>6</MONTH><DAY>14</DAY></DATE><COMMENT>Some comments on Google Maps ergonomics and some information on the speaker previous experiences, but this is very messy.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X quality='-1'><T>Real-Time Data Metaphors, understanding CHANGE without reading numbers: BASHIBA Panorama</T><A>http://www.youtube.com/watch?v=SMwBGOrbhZ4</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>57</MINUTE><SECOND>26</SECOND></DURATION></X><AUTHOR>Roberto Vitalini</AUTHOR><DATE><YEAR>2008</YEAR><MONTH>6</MONTH><DAY>28</DAY></DATE><COMMENT>A sea panorama is used to represent dynamic data, this allows people to unconsciously feel this data. The idea is interesting, but it should have been presented in 5 minutes, not for one hour.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X quality='1'><T>Multi-touch Screens in the Open Source World</T><A>http://www.youtube.com/watch?v=u5RqAz_AZSE</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>12</MINUTE><SECOND>41</SECOND></DURATION></X><AUTHOR>Pawel Solyga</AUTHOR><DATE><YEAR>2008</YEAR><MONTH>6</MONTH><DAY>9</DAY></DATE><COMMENT>A good overview of the multi-touch technology: the different hardware solutions, performing the image processing, the TUIO protocol, some open source libraries, and some demos.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X quality='1'><T>Seven website mockup tools</T><A>http://www.badlanguage.net/seven-website-mockup-tools</A><L>en</L><F>HTML</F></X><AUTHOR>Matthew Stibbe</AUTHOR><DATE><YEAR>2009</YEAR><MONTH>5</MONTH><DAY>23</DAY></DATE><COMMENT>A comparison of several mockup tools.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>"I Agreed to WHAT?!" Re-envisioning License Agreements and Privacy Statements</T><A>http://www.youtube.com/watch?v=mebqm-sTPXo</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>0</MINUTE><SECOND>30</SECOND></DURATION></X><AUTHOR>Michael Terry</AUTHOR><DATE><YEAR>2009</YEAR><MONTH>5</MONTH><DAY>12</DAY></DATE><COMMENT>An experiment to entice users to read the licence agreement by having some visual appeal in it.</COMMENT></ARTICLE></ITEM>
  </BLIST></ITEM>
  <ITEM><BLIST><TITLE>literate programming</TITLE>
    <ITEM><ARTICLE><X><T>POD is Not Literate Programming</T><A>http://www.perl.com/pub/a/tchrist/litprog.html</A><L>en</L><F>HTML</F></X><AUTHOR>Mark-Jason Dominus</AUTHOR><DATE><YEAR>2000</YEAR><MONTH>3</MONTH><DAY>20</DAY></DATE><COMMENT>The author explains that Perl's documentation system is not powerful enough.</COMMENT></ARTICLE></ITEM>
  </BLIST></ITEM>
  <ITEM><BLIST><TITLE>devops</TITLE>
    <ITEM><ARTICLE><X><T>Continuous Delivery</T><A>http://yow.eventer.com/events/1004/talks/1062</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>1</MINUTE><SECOND>9</SECOND></DURATION></X><AUTHOR>Jez Humble</AUTHOR><AUTHOR>Martin Fowler</AUTHOR><DATE><YEAR>2011</YEAR><MONTH>12</MONTH><DAY>2</DAY></DATE><COMMENT>After presenting the principle of Continuous Integration, Humble and Fowler propose to deploy continuously new releases on the production site.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X quality='-1'><T>MountainWest RubyConf 2013 Why We Need DevOps Now: A Fourteen Year Study Of High Performing IT...</T><A>http://www.youtube.com/watch?v=disjFj4ruHg</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>46</MINUTE><SECOND>55</SECOND></DURATION></X><AUTHOR>Gene Kim</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>4</MONTH><DAY>3</DAY></DATE><COMMENT>Some verbiage about devops, but this is marketing, no real information about processes, tools...</COMMENT></ARTICLE></ITEM>
    <ITEM><BLIST><TITLE>Agile DevOps</TITLE>
      <ITEM><ARTICLE><X><T>Agile DevOps: The flattening of the software release process -- How DevOps is transforming software delivery</T><A>https://www.ibm.com/developerworks/library/a-devops1/</A><L>en</L><F>HTML</F></X><AUTHOR>Paul Duvall</AUTHOR><DATE><YEAR>2012</YEAR><MONTH>8</MONTH><DAY>23</DAY></DATE><COMMENT>An introduction to agile DevOps: patterns, tools, and collaboration.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Agile DevOps: Infrastructure automation -- Treat infrastructure as code with Chef or Puppet</T><A>https://www.ibm.com/developerworks/library/a-devops2/</A><L>en</L><F>HTML</F></X><AUTHOR>Paul Duvall</AUTHOR><DATE><YEAR>2012</YEAR><MONTH>9</MONTH><DAY>11</DAY></DATE><COMMENT>A very short presentation of Puppet and Chef.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Agile DevOps: Transient environments -- Managing the illusion of infinite capacity to reduce environment scarcity</T><A>https://www.ibm.com/developerworks/library/a-devops3/</A><L>en</L><F>HTML</F></X><AUTHOR>Paul Duvall</AUTHOR><DATE><YEAR>2012</YEAR><MONTH>10</MONTH><DAY>9</DAY></DATE><COMMENT>Forcing oneself to use environments which are automatically created and, then, deleted after a given duration (of a few days).</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Agile DevOps: Unleash the Chaos Monkey -- How to deliberately use failure to ensure system resiliency</T><A>https://www.ibm.com/developerworks/library/a-devops4/</A><L>en</L><F>HTML</F></X><AUTHOR>Paul Duvall</AUTHOR><DATE><YEAR>2012</YEAR><MONTH>10</MONTH><DAY>23</DAY></DATE><COMMENT>Very little information on the tools open sourced by Netflix. Among them, Chaos Monkey tests the robustness of the system by terminating some virtual machines.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Agile DevOps: Test-driven infrastructure -- Continually testing scripted environments</T><A>https://www.ibm.com/developerworks/library/a-devops5/</A><L>en</L><F>HTML</F></X><AUTHOR>Paul Duvall</AUTHOR><DATE><YEAR>2012</YEAR><MONTH>11</MONTH><DAY>6</DAY></DATE><COMMENT>Using Cucumber and Gherkin to test infrastructure using a BDD approach. A few static analysis tools are also available.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Agile DevOps: Version everything -- Learn why all parts of a software system should use version control</T><A>https://www.ibm.com/developerworks/library/a-devops6/</A><L>en</L><F>HTML</F></X><AUTHOR>Paul Duvall</AUTHOR><DATE><YEAR>2012</YEAR><MONTH>11</MONTH><DAY>27</DAY></DATE><COMMENT>Scripting everything (application code, infrastructure, configuration, database's structure and data, development environment) in order to be able to version everything.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Agile DevOps: Dynamic configuration -- Reduce static configuration in the software delivery life cycle</T><A>https://www.ibm.com/developerworks/library/a-devops7/</A><L>en</L><F>HTML</F></X><AUTHOR>Paul Duvall</AUTHOR><DATE><YEAR>2012</YEAR><MONTH>12</MONTH><DAY>11</DAY></DATE><COMMENT>Instead of using property files, Paul Duvall advices the usage of a configuration database and scripts reading it and setting dynamically the properties.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Agile DevOps: Continuous software delivery in the cloud -- Leverage an open Continuous Delivery platform</T><A>https://www.ibm.com/developerworks/library/a-devops8/</A><L>en</L><F>HTML</F></X><AUTHOR>Paul Duvall</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>1</MONTH><DAY>8</DAY></DATE><COMMENT>A presentation of OpenDelivery, a Continuous Delivery environment based on Amazon services, GitHub, Jenkins, Puppet...</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Agile DevOps: Breaking down silos -- Learn how cross-functional teams are essential to successful DevOps</T><A>https://www.ibm.com/developerworks/library/a-devops9/</A><L>en</L><F>HTML</F></X><AUTHOR>Paul Duvall</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>2</MONTH><DAY>13</DAY></DATE><COMMENT>Having a cross-functional team containing "polyskilled" members.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
  </BLIST></ITEM>
  <ITEM><BLIST><TITLE>miscellaneous</TITLE>
    <ITEM><ARTICLE><X><T>Lisp: Good News, Bad News, How to Win Big</T><A>http://dreamsongs.com/WIB.html</A><L>en</L><F>HTML</F></X><X><T>Lisp: Good News, Bad News, How to Win Big</T><A>http://autocad.xarch.at/lisp/good-bad-win/good-bad-win.html</A><L>en</L><F>HTML</F></X><X><T>Lisp: Good News, Bad News, How to Win Big</T><A>http://www.dreamsongs.com/NewFiles/LispGoodNewsBadNews.pdf</A><L>en</L><F>PDF</F></X><AUTHOR>Richard P. Gabriel</AUTHOR><DATE><YEAR>1991</YEAR></DATE><COMMENT>The author defines what he believes to the new LISP should be. But this article is mainly known because of the explanation why &#8220;worse is better&#8221; design (having something up and running first, fixing possible problems in future releases) is more beneficial than "the right thing" design (trying to get everything right in the first release).</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Problems with Process</T><A>http://www.cs.wustl.edu/%7Eschmidt/editorial-5.html</A><L>en</L><F>HTML</F></X><AUTHOR>Douglas C. Schmidt</AUTHOR><DATE><YEAR>1996</YEAR></DATE><COMMENT>The author describes first some common problems with software development processes (applying a process too rigid for the project, 100 % automatic code generation, bureaucracy), then he lists some features of a good process (iterative development, continuous training, automatic generation of the documentation).</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>The Challenge of 'Good Enough' Software</T><A>http://www.di.ufpe.br/%7Ehermano/cursos/calcprog/good-enough-software.htm</A><L>en</L><F>HTML</F></X><X><T>The Challenge of 'Good Enough' Software</T><A>http://www.satisfice.com/articles/gooden2.pdf</A><L>en</L><F>PDF</F></X><AUTHOR>James Bach</AUTHOR><DATE><YEAR>1996</YEAR></DATE><COMMENT>Good enough quality seems to be the latest fad in the US software industry. In my opinion, this methodology is much more pragmatic than applying 6 sigma to software (which is what GE, the company I am working for, is trying to do: this is simply and plainly stupid).</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Software Development on Internet Time</T><A>http://www.ics.uci.edu/%7Ewscacchi/SA/Readings/Microsoft-Netscape-SDLC.pdf</A><L>en</L><F>PDF</F></X><AUTHOR>Michael A. Cusumano</AUTHOR><AUTHOR>David B. Yoffie</AUTHOR><DATE><YEAR>1999</YEAR><MONTH>10</MONTH></DATE><COMMENT>The authors describe the processes used by Microsoft and Netscape to deliver products in a volatile and fast market.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Of Crazy Numbers and Release Criteria</T><A>http://www.satisfice.com/articles/release_criteria.pdf</A><L>en</L><F>PDF</F></X><AUTHOR>Johanna Rothman</AUTHOR><DATE><YEAR>1998</YEAR><MONTH>12</MONTH></DATE><COMMENT>Defining an arbitrary release criteria as a limit on the bug number is a way to make people think about the development process.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Classic Mistakes Enumerated</T><A>http://www.stevemcconnell.com/rdenum.htm</A><L>en</L><F>HTML</F></X><AUTHOR>Steven C. McConnell</AUTHOR><DATE><YEAR>1996</YEAR></DATE><COMMENT>The title says all: the author lists some common errors during a software project. They are classified in four types: people, process, product and technology.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Coping with compliance: Meeting regulatory mandates with Good Systems Practices</T><A>http://iwww.ibm.com/developerworks/rational/library/content/RationalEdge/aug04/TheRationalEdge_August2004.pdf</A><L>en</L><F>PDF</F></X><AUTHOR>Jack Wilber</AUTHOR><DATE><YEAR>2004</YEAR><MONTH>8</MONTH><DAY>13</DAY></DATE><COMMENT>An interview of three pharmaceutical IT regulation gurus. There is a lot of pro-IBM bullshit, but also some interesting comments on the evolution of the pharma companies to risk based methodologies and some good links.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Running a Sprint</T><A>http://www.onlamp.com/pub/a/python/2006/10/19/running-a-sprint.html</A><L>en</L><F>HTML</F></X><AUTHOR>Steve Holden</AUTHOR><DATE><YEAR>2006</YEAR><MONTH>10</MONTH><DAY>19</DAY></DATE><COMMENT>Some advice to organize a sprint session (aka as the Open Source hackatons).</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Douglas Crockford: "Quality"</T><A>http://www.youtube.com/watch?v=t9YLtDJZtPY</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>48</MINUTE><SECOND>22</SECOND></DURATION></X><AUTHOR>Douglas Crockford</AUTHOR><DATE><YEAR>2007</YEAR><MONTH>3</MONTH></DATE><COMMENT>A collection of well known ideas: the evolution of software technologies, no silver bullet, avoiding code bloat... But this could be an interesting overview for people new to the software domain.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Automation for the people: Pushbutton documentation -- Automate the generation of your developer and user documentation</T><A>http://www.ibm.com/developerworks/java/library/j-ap06108/</A><L>en</L><F>HTML</F></X><AUTHOR>Paul Duvall</AUTHOR><DATE><YEAR>2008</YEAR><MONTH>6</MONTH><DAY>10</DAY></DATE><COMMENT><BLIST><TITLE>Some very miscellaneous tools for generating docs:</TITLE><ITEM>UML diagrams: UMLGraph</ITEM><ITEM>entity-relationship diagrams: SchemaSpy</ITEM><ITEM>Ant build diagrams: Grand</ITEM><ITEM>source-code documentation: Doxygen</ITEM><ITEM>user documentation: DocBook</ITEM></BLIST></COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Geppeto: Consumer's Approach to Programming</T><A>http://www.youtube.com/watch?v=rK5iI1W344I</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>29</MINUTE><SECOND>30</SECOND></DURATION></X><AUTHOR>Sinisa Srbljic</AUTHOR><AUTHOR>Marin Silic</AUTHOR><DATE><YEAR>2008</YEAR><MONTH>11</MONTH><DAY>10</DAY></DATE><COMMENT>A mechanism to chain gadgets together that aims to be simple enough so anybody can develop an application by using it.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Google I/O 2009 - Do You Believe in the Users?</T><A>http://www.youtube.com/watch?v=2an9bWOo89o</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>50</MINUTE><SECOND>19</SECOND></DURATION></X><AUTHOR>Ben Collins-Sussman</AUTHOR><AUTHOR>Brian W. Fitzpatrick</AUTHOR><DATE><YEAR>2009</YEAR><MONTH>6</MONTH><DAY>2</DAY></DATE><COMMENT>Some common, but nevertheless good to be remembered, ideas about users: under-promising and over-delivering, focused product goals, simple UI, performance, getting users involved...</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>CMake/CPack/CTest/CDash Open Source Tools to Build Test and Deploy C++ Software</T><A>http://www.youtube.com/watch?v=8Ut9o4OdSC0</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>8</MINUTE><SECOND>4</SECOND></DURATION></X><AUTHOR>Bill Hoffman</AUTHOR><DATE><YEAR>2010</YEAR><MONTH>1</MONTH><DAY>5</DAY></DATE><COMMENT><BLIST><TITLE>A presentation of the open source tools created by Kitware:</TITLE><ITEM>CMake: a build configurator</ITEM><ITEM>CTest: a test driver</ITEM><ITEM>CDash: a test dashboard</ITEM><ITEM>CPack: a tool to create installation packages</ITEM></BLIST></COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>The Frenzied Panic of Rushing</T><A>http://blog.8thlight.com/uncle-bob/2013/03/11/TheFrenziedPanicOfRushing.html</A><L>en</L><F>HTML</F></X><AUTHOR>Robert C. Martin</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>3</MONTH><DAY>11</DAY></DATE><COMMENT>Applying good practices does not slow down the development.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Real Architecture: Engineering? or Pompous Bullshit?</T><A>http://vimeo.com/28763240</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>0</MINUTE><SECOND>5</SECOND></DURATION></X><AUTHOR>Tom Gilb</AUTHOR><DATE><YEAR>2011</YEAR><MONTH>9</MONTH><DAY>8</DAY></DATE><COMMENT>Architecture should derive from the requirements of the stakeholders and should be quantified. There is some truth here, but is this really actionable? This presentation is high level ideas with no example, so this rather smells like bullshit.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>We are Principled: 10th Edition</T><A>http://blog.8thlight.com/mike-jansen/2013/07/15/we-are-principled-10.html</A><L>en</L><F>HTML</F></X><AUTHOR>Mike Jansen</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>7</MONTH><DAY>15</DAY></DATE><COMMENT>Take the time to find the problem before proposing a solution.</COMMENT></ARTICLE></ITEM>
  </BLIST></ITEM>
</BLIST>

</CONTENT>
</PAGE>
