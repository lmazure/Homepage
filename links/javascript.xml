<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../css/strict.xsl"?>
<PAGE xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../css/schema.xsd" xml:lang="en">
<TITLE>JavaScript</TITLE>
<PATH>links/javascript.xml</PATH>
<DATE><YEAR>2022</YEAR><MONTH>10</MONTH><DAY>9</DAY></DATE>
<CONTENT>
<LLIST>
  <ITEM><SLIST>
    <ITEM><X><T>ECMA-262 standard</T><A>https://www.ecma-international.org/publications-and-standards/standards/ecma-262/</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><CLIST><TITLE>Tutorials</TITLE>
      <ITEM><X status="obsolete"><T>Voodoo's Introduction to Javascript</T><A>http://www.cs.unibo.it/~montreso/doc/master/JavaScript/Tutorial/</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>W3 Schools</T><A>https://www.w3schools.com/js/</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>JavaScript Garden</T><A>http://bonsaiden.github.io/JavaScript-Garden/</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>javascript.info</T><A>https://javascript.info</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>The Principles of Object-Oriented JavaScript</T><A>https://ebooks-it.org/1593275404-ebook.htm</A><L>en</L><F>PDF</F></X></ITEM>
    </CLIST></ITEM>
    <ITEM><CLIST><TITLE>Profiling</TITLE>
      <ITEM><X><T>spy-js</T><A>http://spy-js.com</A><L>en</L><F>HTML</F></X></ITEM>
    </CLIST></ITEM>
    <ITEM><CLIST><TITLE>Code documentation</TITLE>
      <ITEM><X><T>JSDoc</T><A>https://github.com/jsdoc3/jsdoc</A><L>en</L><F>HTML</F></X></ITEM>
    </CLIST></ITEM>
    <ITEM><CLIST><TITLE>FAQ</TITLE>
      <ITEM><X><T>Meta-FAQ</T><A>http://www.faqs.org/faqs/computer-lang/java/javascript/</A><L>en</L><F>HTML</F></X></ITEM>
    </CLIST></ITEM>
    <ITEM><CLIST><TITLE>Minifiers</TITLE>
      <ITEM><X status="obsolete"><T>JSMin</T><A>http://crockford.com/javascript/jsmin</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>Dean Edwards Packer</T><A>http://dean.edwards.name/packer/</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>MiniME</T><A>https://github.com/toptensoftware/minime</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X status="dead"><T>Microsoft Ajax Minifier</T><A>https://ajaxmin.codeplex.com/</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>Closure Compiler</T><A>https://developers.google.com/closure/compiler/?csw=1</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>Wikipedia list</T><A>https://en.wikipedia.org/wiki/Minification_(programming)</A><L>en</L><F>HTML</F></X></ITEM>
    </CLIST></ITEM>
    <ITEM><CLIST><TITLE>Java implementations</TITLE>
      <ITEM><X><T>Nashorn</T><A>https://openjdk.java.net/projects/nashorn/</A><L>en</L><F>HTML</F></X></ITEM>
    </CLIST></ITEM>
    <ITEM><CLIST><TITLE>Demos</TITLE>
      <ITEM><X><T>Chrome Experiments</T><A>https://experiments.withgoogle.com/collection/chrome</A><L>en</L><F>HTML</F></X></ITEM>
    </CLIST></ITEM>
    <ITEM><CLIST><TITLE>Mashups</TITLE>
      <ITEM><X><T>ProgrammableWeb</T><A>https://www.programmableweb.com/</A><L>en</L><F>HTML</F></X></ITEM>
    </CLIST></ITEM>
    <ITEM><X><T>json.org</T><A>https://www.json.org/json-en.html</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X><T>JSONLint</T><A>https://jsonlint.com</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X><T>Node.js</T><A>https://nodejs.org</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X><T>hapi</T><A>https://hapijs.com</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X><T>personal notes</T><A>../notes/javascript.html</A><L>en</L><F>HTML</F></X></ITEM>
  </SLIST></ITEM>
  <ITEM><BLIST><TITLE>Articles and videos</TITLE>
    <ITEM><ARTICLE><X status="obsolete"><T>Pnglets</T><A>https://www.elf.org/pnglets/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Roger</FIRSTNAME><MIDDLENAME>E</MIDDLENAME><LASTNAME>Critchlow</LASTNAME><NAMESUFFIX>Jr.</NAMESUFFIX></AUTHOR><DATE><YEAR>1999</YEAR></DATE><COMMENT>Some (client side) JavaScript code to write PNG images on the flight.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>XML and Java: A potent partnership, Part 3</T><ST>Learn how to integrate Java and JavaScript, two popular programming languages</ST><A>https://www.infoworld.com/article/2076465/xml-and-java--a-potent-partnership--part-3.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Todd</FIRSTNAME><LASTNAME>Sundsted</LASTNAME></AUTHOR><DATE><YEAR>1999</YEAR><MONTH>8</MONTH></DATE><COMMENT>This is an introduction to Rhino, a JavaScript interpreter written in Java.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Javascript Closures</T><A>http://jibbering.com/faq/notes/closures/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Richard</FIRSTNAME><LASTNAME>Cornford</LASTNAME></AUTHOR><DATE><YEAR>2004</YEAR><MONTH>4</MONTH></DATE><COMMENT>A detailed description of closures.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Errors and AJAX</T><A>https://www.xml.com/pub/a/2005/05/11/ajax-error.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Joshua</FIRSTNAME><LASTNAME>Gitlin</LASTNAME></AUTHOR><DATE><YEAR>2005</YEAR><MONTH>5</MONTH><DAY>11</DAY></DATE><COMMENT>The author describes an implementation logging the client side JavaScript errors on the server, so they can be analysed and fixed.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Life After Ajax?</T><A>https://www.xml.com/pub/a/2005/06/29/deviant.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Micah</FIRSTNAME><LASTNAME>Dubinko</LASTNAME></AUTHOR><DATE><YEAR>2005</YEAR><MONTH>6</MONTH><DAY>29</DAY></DATE><COMMENT>The author asks for higher level technologies (e.g. languages) instead of using AJAX which is too difficult to debug.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X status="dead"><T>Scope chain of JScript Functions</T><A>https://blogs.msdn.microsoft.com/b/jscript/archive/2007/07/26/scope-chain-of-jscript-functions.aspx</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Don</FIRSTNAME><LASTNAME>Raman</LASTNAME></AUTHOR><DATE><YEAR>2006</YEAR><MONTH>7</MONTH><DAY>26</DAY></DATE><COMMENT>A shorter explanation of the scope chain.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Best Practices in Javascript Library Design</T><A>https://www.youtube.com/watch?v=0LKDImgRfrg</A><L>en</L><F>MP4</F><DURATION><HOUR>1</HOUR><MINUTE>1</MINUTE><SECOND>24</SECOND></DURATION><DATE><YEAR>2007</YEAR><MONTH>10</MONTH><DAY>8</DAY></DATE></X><AUTHOR><FIRSTNAME>John</FIRSTNAME><LASTNAME>Resig</LASTNAME></AUTHOR><DATE><YEAR>2007</YEAR><MONTH>8</MONTH><DAY>17</DAY></DATE><COMMENT><AUTHOR><FIRSTNAME>John</FIRSTNAME><LASTNAME>Resig</LASTNAME></AUTHOR> gives some advice for library developers: orthogonality, API as small as possible, encapsulation, documentation, testing…</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>The Lively Kernel</T><A>https://www.youtube.com/watch?v=gGw09RZjQf8</A><L>en</L><F>MP4</F><DURATION><HOUR>1</HOUR><MINUTE>1</MINUTE><SECOND>19</SECOND></DURATION><DATE><YEAR>2008</YEAR><MONTH>1</MONTH><DAY>26</DAY></DATE></X><AUTHOR><FIRSTNAME>Dan</FIRSTNAME><LASTNAME>Ingalls</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Krzysztof</FIRSTNAME><LASTNAME>Palacz</LASTNAME></AUTHOR><DATE><YEAR>2008</YEAR><MONTH>1</MONTH><DAY>24</DAY></DATE><COMMENT>A demo of the Lively Kernel, a kind of SmallTalk reincarnation, a self-supporting computing kernel written in JavaScript and using SVG.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Drop-in JavaScript Performance</T><A>https://www.youtube.com/watch?v=bsad6dr8Kzo</A><L>en</L><F>MP4</F><DURATION><HOUR>1</HOUR><MINUTE>2</MINUTE><SECOND>20</SECOND></DURATION><DATE><YEAR>2009</YEAR><MONTH>2</MONTH><DAY>9</DAY></DATE></X><AUTHOR><FIRSTNAME>John</FIRSTNAME><LASTNAME>Resig</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>1</MONTH><DAY>30</DAY></DATE><COMMENT>A description of the improvements coming in the future releases of the Browsers.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X status="dead" quality="1"><T>YUI Theater — John Resig: “The DOM Is a Mess”</T><A>https://yuiblog.com/blog/2009/02/02/video-resig-2/</A><L>en</L><F>Flash Video</F><F>MP4</F><DURATION><HOUR>1</HOUR><MINUTE>12</MINUTE><SECOND>59</SECOND></DURATION></X><AUTHOR><FIRSTNAME>John</FIRSTNAME><LASTNAME>Resig</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>2</MONTH><DAY>2</DAY></DATE><COMMENT>How to work around the bugs of the Browser JS engines or their missing features, how to not pollute outside code…</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X quality="1"><T>JavaScript: The Good Parts</T><A>https://www.youtube.com/watch?v=hQVTIJBZook</A><L>en</L><F>MP4</F><DURATION><HOUR>1</HOUR><MINUTE>3</MINUTE><SECOND>47</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Douglas</FIRSTNAME><LASTNAME>Crockford</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>2</MONTH><DAY>27</DAY></DATE><COMMENT>Some do's and don't's for JavaScript.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X status="dead"><T>YUI Theater — PPK (Peter-Paul Koch): “JavaScript Events”</T><A>https://yuiblog.com/blog/2009/04/27/video-ppk-jsevents/</A><L>en</L><F>Flash Video</F><F>MP4</F><DURATION><MINUTE>55</MINUTE><SECOND>16</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Peter-Paul</FIRSTNAME><LASTNAME>Koch</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>4</MONTH><DAY>23</DAY></DATE><COMMENT>After speaking about JavaScript implementations on usual computers (key events, change event, and event bubbling vs. event capturing), Peter-Paul Koch describes the mess with current JS implementation on mobile phones and gives some rules to deal with them.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Speed Up Your JavaScript</T><A>https://www.youtube.com/watch?v=mHtdZgou0qU</A><L>en</L><F>MP4</F><DURATION><MINUTE>56</MINUTE><SECOND>22</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Nicholas</FIRSTNAME><MIDDLENAME>C.</MIDDLENAME><LASTNAME>Zakas</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>6</MONTH><DAY>4</DAY></DATE><COMMENT>Some low level JavaScript optimisations: taking care of variable scope, data access (literal vs. variable vs. object property vs. array item), loops, and DOM.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Nicholas Zakas: Scalable JavaScript Application Architecture</T><A>https://www.youtube.com/watch?v=vXjVFPosQHw</A><L>en</L><F>MP4</F><DURATION><MINUTE>52</MINUTE><SECOND>22</SECOND></DURATION><DATE><YEAR>2011</YEAR><MONTH>8</MONTH><DAY>28</DAY></DATE></X><AUTHOR><FIRSTNAME>Nicholas</FIRSTNAME><LASTNAME>Zakas</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>9</MONTH></DATE><COMMENT>How to define a layered JavaScript framework: base library, application core, sandbox, and modules. The slides are available <X><T>here</T><A>https://www.slideshare.net/nzakas/scalable-javascript-application-architecture</A><L>en</L><F>HTML</F></X>.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X status="zombie"><T>Project JSMeter: JavaScript Performance Analysis in the Real World</T><A>https://channel9.msdn.com/Shows/Going+Deep/E2E-Research-Perspectives-on-JavaScript-with-Erik-Meijer-Ben-Zorn-and-Ben-Livshits</A><L>en</L><F>Windows Media Player</F><DURATION><MINUTE>49</MINUTE><SECOND>35</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Charles</FIRSTNAME></AUTHOR><AUTHOR><FIRSTNAME>Erik</FIRSTNAME><LASTNAME>Meijer</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Ben</FIRSTNAME><LASTNAME>Livshits</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Ben</FIRSTNAME><LASTNAME>Zorn</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>3</MONTH><DAY>28</DAY></DATE><COMMENT>Two Microsoft guys have analysed how JS is really used on the Web.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Event delegation in JavaScript</T><A>https://humanwhocodes.com/blog/2009/06/30/event-delegation-in-javascript/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Nicholas</FIRSTNAME><MIDDLENAME>C.</MIDDLENAME><LASTNAME>Zakas</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>6</MONTH><DAY>30</DAY></DATE><COMMENT>An explanation of event bubbling and capturing.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Building a JavaScript-Based Game Engine for the Web</T><A>https://www.youtube.com/watch?v=_RRnyChxijA</A><L>en</L><F>MP4</F><DURATION><MINUTE>48</MINUTE><SECOND>11</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Paul</FIRSTNAME><LASTNAME>Bakaus</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>7</MONTH><DAY>10</DAY></DATE><COMMENT><AUTHOR><FIRSTNAME>Paul</FIRSTNAME><LASTNAME>Bakaus</LASTNAME></AUTHOR> explains his technical choices and some of the performance tricks he used to implement Aves Engine, a 2D/isometric game engine.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Philip Tellis: Measuring the Web with Boomerang</T><A>https://www.youtube.com/watch?v=gy1DTBMOA74</A><L>en</L><F>MP4</F><DURATION><MINUTE>47</MINUTE><SECOND>37</SECOND></DURATION><DATE><YEAR>2011</YEAR><MONTH>9</MONTH><DAY>24</DAY></DATE></X><AUTHOR><FIRSTNAME>Philip</FIRSTNAME><LASTNAME>Tellis</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>11</MONTH><DAY>8</DAY></DATE><COMMENT>The presentation of Boomerang, a JavaScript library used to measure latency and bandwidth and to send them back to the server.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X status="dead"><T>Strict Mode Is Coming To Town</T><A>https://yuiblog.com/blog/2010/12/14/strict-mode-is-coming-to-town/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Douglas</FIRSTNAME><LASTNAME>Crockford</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>12</MONTH><DAY>14</DAY></DATE><COMMENT>A short introduction to the <CODEROUTINE>strict</CODEROUTINE> mode.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Introducing HTML 5 Web Workers: Bringing Multi-threading to JavaScript</T><A>https://www.htmlgoodies.com/html5/tutorials/introducing-html-5-web-workers-bringing-multi-threading-to-javascript.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Rob</FIRSTNAME><LASTNAME>Gravelle</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR></DATE><COMMENT>A short introduction to Web Workers.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Determine an Image's Type using the JavaScript FileReader</T><A>https://www.htmlgoodies.com/html5/tutorials/determine-an-images-type-using-the-javascript-filereader.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Rob</FIRSTNAME><LASTNAME>Gravelle</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR></DATE><COMMENT>How to check a file type by extracting and checking its Magic Number.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Use JavaScript to Add a Read More Link When Text is Copied From Your Site</T><A>https://www.htmlgoodies.com/javascript/use-javascript-to-add-a-read-more-link-when-text-is-copied-from-your-site/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Scott</FIRSTNAME><LASTNAME>Clark</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>1</MONTH></DATE><COMMENT>A presentation of Tynt Insight service which adds a link to text cut 'n pasted from your site. I do not think the interest of this: people (probably the majority) who don't want the link will delete it, people who want the link could add it by themselves.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>7 minutes on recent DOM APIs</T><A>https://www.youtube.com/watch?v=svEg7MiqGf8</A><L>en</L><F>MP4</F><DURATION><MINUTE>7</MINUTE><SECOND>18</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Paul</FIRSTNAME><LASTNAME>Irish</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>9</MONTH><DAY>28</DAY></DATE><COMMENT><CODEROUTINE>element.classList</CODEROUTINE>, <CODEROUTINE>element.dataset</CODEROUTINE>, <CODEROUTINE>window.matchMedia()</CODEROUTINE>, <CODEROUTINE>element.textContent</CODEROUTINE>, and <CODEROUTINE>element.matchesSelector()</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Utilizing Web Workers and Shared Web Workers</T><A>https://www.htmlgoodies.com/html/web-workers-and-shared-workers/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Rob</FIRSTNAME><LASTNAME>Gravelle</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>12</MONTH><DAY>8</DAY></DATE><COMMENT>The same with Shared Web Workers.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X quality="-2"><T>JS Coding Standards</T><A>https://www.youtube.com/watch?v=8Qrxe9PnwuQ</A><L>en</L><F>MP4</F><DURATION><MINUTE>23</MINUTE><SECOND>3</SECOND></DURATION><DATE><YEAR>2012</YEAR><MONTH>8</MONTH><DAY>8</DAY></DATE></X><AUTHOR><FIRSTNAME>Samuel</FIRSTNAME><LASTNAME>Mburu</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR></DATE><COMMENT>Some JavaScript Coding Rules… very badly explained.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Douglas Crockford: Principles of Security</T><A>https://www.youtube.com/watch?v=zKuFu19LgZA</A><L>en</L><F>MP4</F><DURATION><MINUTE>59</MINUTE><SECOND>52</SECOND></DURATION><DATE><YEAR>2012</YEAR><MONTH>4</MONTH><DAY>9</DAY></DATE></X><AUTHOR><FIRSTNAME>Douglas</FIRSTNAME><LASTNAME>Crockford</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>3</MONTH><DAY>5</DAY></DATE><COMMENT>There is nothing new here, but, as usual with <AUTHOR><FIRSTNAME>Douglas</FIRSTNAME><LASTNAME>Crockford</LASTNAME></AUTHOR>, this presentation contains some good information.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Fluent 2012: Steve Souders, "Your Script Just Killed My Site"</T><A>https://www.youtube.com/watch?v=aHDNmTpqi7w</A><L>en</L><F>MP4</F><DURATION><MINUTE>9</MINUTE><SECOND>39</SECOND></DURATION><DATE><YEAR>2012</YEAR><MONTH>5</MONTH><DAY>31</DAY></DATE></X><AUTHOR><FIRSTNAME>Steve</FIRSTNAME><LASTNAME>Souders</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>5</MONTH><DAY>30</DAY></DATE><COMMENT>Loading synchronously a third party script may result in blocking your site.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Paul Irish, "JavaScript Development Workflow of 2013"</T><A>https://www.youtube.com/watch?v=f7AU2Ozu8eo</A><L>en</L><F>MP4</F><DURATION><MINUTE>24</MINUTE><SECOND>30</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Paul</FIRSTNAME><LASTNAME>Irish</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>5</MONTH><DAY>31</DAY></DATE><COMMENT>A quick presentation of the current JavaScript development tools.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Best of Fluent 2012 - You don't need a Framework for that!</T><A>https://www.youtube.com/watch?v=FbpUt3XLGlE</A><L>en</L><F>MP4</F><DURATION><MINUTE>41</MINUTE><SECOND>23</SECOND></DURATION><DATE><YEAR>2013</YEAR><MONTH>6</MONTH><DAY>11</DAY></DATE></X><AUTHOR><FIRSTNAME>Estelle</FIRSTNAME><LASTNAME>Weyl</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>5</MONTH><DAY>31</DAY></DATE><COMMENT>Some simple tasks can be done without loading jQuery, but by using <CODEROUTINE>classList</CODEROUTINE>, <CODEROUTINE>getElementById</CODEROUTINE>, <CODEROUTINE>getElementsByClassName</CODEROUTINE>, <CODEROUTINE>querySelector</CODEROUTINE>, <CODEROUTINE>querySelectorAll</CODEROUTINE>, data- attributes, CSS.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Fluent 2012: Gary Flake, "Bookmarklets as Applications"</T><A>https://www.youtube.com/watch?v=e5dJVfipkhY</A><L>en</L><F>MP4</F><DURATION><MINUTE>15</MINUTE><SECOND>10</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Gary</FIRSTNAME><MIDDLENAME>William</MIDDLENAME><LASTNAME>Flake</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>5</MONTH><DAY>31</DAY></DATE><COMMENT>The technical tricks used by Clipboard.com to capture a part of a page and redisplay it in their site.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Just cause it’s JavaScript, doesn’t give you a license to write rubbish</T><A>https://vimeo.com/43536490</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>56</MINUTE><SECOND>41</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Hadi</FIRSTNAME><LASTNAME>Hariri</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>6</MONTH><DAY>6</DAY></DATE><COMMENT>Software best practices can and should be used with JavaScript.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Adventures in Single Page Applications</T><A>https://www.youtube.com/watch?v=BqDJqKGfIiE</A><L>en</L><F>MP4</F><DURATION><MINUTE>46</MINUTE><SECOND>58</SECOND></DURATION><DATE><YEAR>2012</YEAR><MONTH>11</MONTH><DAY>13</DAY></DATE></X><AUTHOR><FIRSTNAME>Mikito</FIRSTNAME><LASTNAME>Takada</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>10</MONTH><DAY>15</DAY></DATE><COMMENT>Miscellaneous points: pros and cons of Single Page Applications, the MVC's controller problem, namespaces vs. modules and packages, view.json…</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X status="zombie"><T>Understand memory leaks in JavaScript applications</T><ST>Detect and address memory issues</ST><A>https://www.ibm.com/developerworks/library/wa-jsmemory/index.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Ben</FIRSTNAME><LASTNAME>Dolmar</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>11</MONTH><DAY>6</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>The Joys of Static Memory JavaScript</T><A>http://radar.oreilly.com/2013/10/the-joys-of-static-memory-javascript.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Colt</FIRSTNAME><LASTNAME>McAnlis</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>10</MONTH><DAY>1</DAY></DATE><COMMENT>Limiting the performance impact of garbage collection by using object pools.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Ariya Hidayat: Next-Generation JavaScript Language Tooling</T><A>https://www.youtube.com/watch?v=uElc4ZUE6qo</A><L>en</L><F>MP4</F><DURATION><MINUTE>27</MINUTE><SECOND>32</SECOND></DURATION><DATE><YEAR>2014</YEAR><MONTH>2</MONTH><DAY>10</DAY></DATE></X><AUTHOR><FIRSTNAME>Ariya</FIRSTNAME><LASTNAME>Hidayat</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>11</MONTH><DAY>7</DAY></DATE><COMMENT>Some tools for static analysis (finding code patterns, computing cyclomatic complexity), code transformation and dynamic analysis (code coverage, performance).</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Comment le hoisting fonctionne en JavaScript et pourquoi</T><A>https://blog.wax-o.com/2014/09/comment-le-hoisting-fonctionne-en-javascript-et-pourquoi/</A><L>fr</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Fabien</FIRSTNAME><LASTNAME>Huet</LASTNAME></AUTHOR><DATE><YEAR>2014</YEAR><MONTH>9</MONTH><DAY>1</DAY></DATE><COMMENT>A not so clear explanation of hosting, with a lot of misspellings.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>node.js vs Java nashorn</T><A>https://pieroxy.net/blog/2015/06/29/node_js_vs_java_nashorn.html</A><L>en</L><F>HTML</F></X><AUTHOR><GIVENNAME>pieroxy</GIVENNAME></AUTHOR><DATE><YEAR>2015</YEAR><MONTH>6</MONTH><DAY>29</DAY></DATE><COMMENT>Some performance measurement of Nashorn and Node.js.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>DOMException: The play() request was interrupted</T><A>https://developers.google.com/web/updates/2017/06/play-request-was-interrupted</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>François</FIRSTNAME><LASTNAME>Beaufort</LASTNAME></AUTHOR><DATE><YEAR>2017</YEAR><MONTH>6</MONTH><DAY>16</DAY></DATE><COMMENT>How to properly use <CODEROUTINE>video.play()</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Abortable fetch</T><A>https://developers.google.com/web/updates/2017/09/abortable-fetch</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jake</FIRSTNAME><LASTNAME>Archibald</LASTNAME></AUTHOR><DATE><YEAR>2017</YEAR><MONTH>10</MONTH><DAY>2</DAY></DATE><COMMENT>The <CODEROUTINE>AbortController</CODEROUTINE> and <CODEROUTINE>AbortSignal</CODEROUTINE> API is at last defined, Firefox has already implemented it.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>SmooshGate FAQ</T><A>https://developer.chrome.com/blog/smooshgate/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Mathias</FIRSTNAME><LASTNAME>Bynens</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>3</MONTH><DAY>19</DAY></DATE><COMMENT>The story of <CODEROUTINE>Array.prototype.flatten</CODEROUTINE> breaking MooTols.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Coding Challenge 125: Fourier Series</T><A>https://www.youtube.com/watch?v=Mm2eYfj0SgA</A><L>en</L><F>MP4</F><DURATION><MINUTE>28</MINUTE><SECOND>46</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Shiffman</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>12</MONTH><DAY>19</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>🚀⚙️ JavaScript Visualized: the JavaScript Engine</T><A>https://dev.to/lydiahallie/javascript-visualized-the-javascript-engine-4cdf</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Lydia</FIRSTNAME><LASTNAME>Hallie</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>12</MONTH><DAY>13</DAY></DATE><COMMENT>A basic description of how V8 manages JavaScript.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>WebSockets for fun and profit</T><A>https://stackoverflow.blog/2019/12/18/websockets-for-fun-and-profit/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Max</FIRSTNAME><LASTNAME>Pekarsky</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>12</MONTH><DAY>18</DAY></DATE><COMMENT>An introduction to WebSockets. It speaks only positively about this technology, the comments give a less biased opinion.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Does ES6 make JavaScript frameworks obsolete?</T><ST>Is ES6 the JavaScript release that will finally free us from the endless cycle of frameworks?</ST><A>https://stackoverflow.blog/2021/11/10/does-es6-make-javascript-frameworks-obsolete/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Theodoros</FIRSTNAME><LASTNAME>Karasavvas</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Ryan</FIRSTNAME><LASTNAME>Donovan</LASTNAME></AUTHOR><DATE><YEAR>2021</YEAR><MONTH>11</MONTH><DAY>10</DAY></DATE><COMMENT>As regularly published for many years, yet another article announcing the death of the JavaScript frameworks.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>JavaScript APIs You Don’t Know About</T><A>https://www.smashingmagazine.com/2022/09/javascript-api-guide/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Juan Diego</FIRSTNAME><LASTNAME>Rodríguez</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>9</MONTH><DAY>14</DAY></DATE><COMMENT>A short presentation of Page Visibility API, Web Share API, Broadcast Channel API, and Internationalization API.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>js13kGames 2022 winners 🏆</T><ST>The eleventh annual js13kGames coding competition, challenging participants to create games in 13kB or less of JavaScript in a month, just wrapped up. This post highlights the top thirteen entries.</ST><A>https://github.blog/2022-10-06-js13k-2022-winners/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Lee</FIRSTNAME><LASTNAME>Lee Reilly</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>10</MONTH><DAY>6</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
    <ITEM><BLIST><TITLE>Tutorials</TITLE>
      <ITEM><ARTICLE><X><T>Scoping</T><A>https://www.youtube.com/watch?v=vXWOKZVdRaI</A><L>en</L><F>MP4</F><DURATION><MINUTE>42</MINUTE><SECOND>56</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kiro</FIRSTNAME><LASTNAME>Risk</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>7</MONTH><DAY>11</DAY></DATE><COMMENT>An explanation of JavaScript hoisting.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Object Oriented Programming</T><A>https://www.youtube.com/watch?v=5vsrq-9VhZs</A><L>en</L><F>MP4</F><DURATION><MINUTE>50</MINUTE><SECOND>56</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kiro</FIRSTNAME><LASTNAME>Risk</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>7</MONTH><DAY>11</DAY></DATE><COMMENT>How to perform some common OOP patterns in JavaScript: defining a class, deriving a class, calling a method of the super-class from a derived class…</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Promises</TITLE>
      <ITEM><ARTICLE><X><T>We have a problem with promises</T><A>https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Nolan</FIRSTNAME><LASTNAME>Lawson</LASTNAME></AUTHOR><DATE><YEAR>2015</YEAR><MONTH>5</MONTH><DAY>18</DAY></DATE><COMMENT>A list of mistakes done when using promises.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>JavaScript Promises: an introduction</T><A>https://web.dev/promises/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jake</FIRSTNAME><LASTNAME>Archibald</LASTNAME></AUTHOR><DATE><YEAR>2021</YEAR><MONTH>1</MONTH><DAY>18</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>History</TITLE>
      <ITEM><ARTICLE><X status="dead"><T>JavaScript: Past, Present, and Future</T><A>http://wp.netscape.com/computing/webbuilding/studio/feature19981111-1.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Molly</FIRSTNAME><MIDDLENAME>Wright</MIDDLENAME><LASTNAME>Steenson</LASTNAME></AUTHOR><DATE><YEAR>1998</YEAR></DATE><COMMENT>This a short history of JavaScript up to the 1.4 release and some hindsight on its future.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>The Deep Roots of Javascript Fatigue</T><A>https://segment.com/blog/the-deep-roots-of-js-fatigue/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Calvin</FIRSTNAME><LASTNAME>French-Owen</LASTNAME></AUTHOR><DATE><YEAR>2016</YEAR><MONTH>3</MONTH><DAY>15</DAY></DATE><COMMENT>A short history of the language, the Browsers, the toolkits, and the transpilers.</COMMENT></ARTICLE></ITEM>
      <ITEM><BLIST><TITLE>ECMAScript 5</TITLE>
        <ITEM><ARTICLE><X><T>Changes to JavaScript, Part 1: EcmaScript 5</T><A>https://www.youtube.com/watch?v=Kq4FpMe6cRs</A><L>en</L><F>MP4</F><DURATION><MINUTE>59</MINUTE><SECOND>27</SECOND></DURATION><DATE><YEAR>2009</YEAR><MONTH>5</MONTH><DAY>19</DAY></DATE></X><AUTHOR><FIRSTNAME>Mark</FIRSTNAME><LASTNAME>Miller</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Waldemar</FIRSTNAME><LASTNAME>Horwat</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Mike</FIRSTNAME><LASTNAME>Samuel</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>5</MONTH><DAY>18</DAY></DATE><COMMENT>A presentation of the new features and cleanups of EcmaScript 5.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Douglas Crockford: The State and Future of JavaScript</T><A>https://www.youtube.com/watch?v=V1_Y-KVhZ9Q</A><L>en</L><F>MP4</F><DURATION><MINUTE>55</MINUTE><SECOND>42</SECOND></DURATION><DATE><YEAR>2011</YEAR><MONTH>8</MONTH><DAY>28</DAY></DATE></X><AUTHOR><FIRSTNAME>Douglas</FIRSTNAME><LASTNAME>Crockford</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>11</MONTH><DAY>4</DAY></DATE><COMMENT>The history of ECMAScript 5 (ES3.1 vs. ES4, IBM's 754r…) and the future of the language (Harmony).</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>ECMAScript 6</TITLE>
        <ITEM><ARTICLE><X><T>Dave Herman: The Future of JavaScript</T><A>https://www.youtube.com/watch?v=u4IdoBU1uKE</A><L>en</L><F>MP4</F><DURATION><MINUTE>47</MINUTE><SECOND>42</SECOND></DURATION><DATE><YEAR>2011</YEAR><MONTH>11</MONTH><DAY>18</DAY></DATE></X><AUTHOR><FIRSTNAME>Dave</FIRSTNAME><LASTNAME>Herman</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>11</MONTH><DAY>4</DAY></DATE><COMMENT>The new features currently considered for ECMAScript 6: modules, block scoping, generators, proxies, binary data,…</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Brendan Eich on JavaScript at 17 - O'Reilly Fluent 2012</T><A>https://www.youtube.com/watch?v=Rj49rmc01Hs</A><L>en</L><F>MP4</F><DURATION><MINUTE>25</MINUTE><SECOND>43</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Brendan</FIRSTNAME><LASTNAME>Eich</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>5</MONTH><DAY>30</DAY></DATE><COMMENT>The rational of ES6 new features: easier to write applications, libraries, and code generators.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Brenda Eich on JavaScript at 18: Legal to Gamble - Fluent 2013</T><A>https://www.youtube.com/watch?v=qrf9ONmtXbM</A><L>en</L><F>MP4</F><DURATION><MINUTE>25</MINUTE><SECOND>44</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Brendan</FIRSTNAME><LASTNAME>Eich</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>5</MONTH><DAY>29</DAY></DATE><COMMENT>This is the same content as the previous year: the new JavaScript features added in ES6, asm.js and, once again, a FPS demo.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>John Paul - ES6 Right Now</T><A>https://www.youtube.com/watch?v=rwm5JLqCpdk</A><L>en</L><F>MP4</F><DURATION><MINUTE>52</MINUTE><SECOND>48</SECOND></DURATION><DATE><YEAR>2014</YEAR><MONTH>9</MONTH><DAY>19</DAY></DATE></X><AUTHOR><FIRSTNAME>John</FIRSTNAME><LASTNAME>Paul</LASTNAME></AUTHOR><DATE><YEAR>2014</YEAR><MONTH>9</MONTH><DAY>13</DAY></DATE><COMMENT>The presentation of some new JavaScript features and how to use some among them today.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>A Look at the Newly Approved ECMAScript 2015 Features</T><A>https://www.htmlgoodies.com/beyond/javascript/a-look-at-the-newly-approved-ecmascript-2015-features.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Rob</FIRSTNAME><LASTNAME>Gravelle</LASTNAME></AUTHOR><DATE><YEAR>2015</YEAR><MONTH>8</MONTH></DATE><COMMENT>A very quick presentation of some ES6 features.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Intro to Web Workers</T><A>https://www.youtube.com/watch?v=EiPytIxrZtU</A><L>en</L><F>MP4</F><DURATION><MINUTE>12</MINUTE><SECOND>12</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Steve</FIRSTNAME><LASTNAME>Griffith</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>8</MONTH><DAY>17</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
        <ITEM><BLIST><TITLE>The busy JavaScript developer's guide to ECMAScript 6</TITLE>
          <ITEM><ARTICLE><X><T>Variable declarations and more in the new JavaScript</T><ST>Syntactic sugar strengthens core features in ECMAScript 6</ST><A>https://developer.ibm.com/articles/wa-ecmascript6-neward-p1/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Ted</FIRSTNAME><LASTNAME>Neward</LASTNAME></AUTHOR><DATE><YEAR>2016</YEAR><MONTH>9</MONTH><DAY>29</DAY></DATE><COMMENT>String templates and interpolation, <CODEROUTINE>let</CODEROUTINE> and <CODEROUTINE>const</CODEROUTINE>, destructuring assignement.</COMMENT></ARTICLE></ITEM>
          <ITEM><ARTICLE predecessor="https://developer.ibm.com/articles/wa-ecmascript6-neward-p1/"><X status="zombie"><T>Functional enhancements in ECMAScript 6</T><ST>Using arrows, generators, and other functional elements in your JavaScript programs</ST><A>https://www.ibm.com/developerworks/library/wa-ecmascript6-neward-p2/index.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Ted</FIRSTNAME><LASTNAME>Neward</LASTNAME></AUTHOR><DATE><YEAR>2016</YEAR><MONTH>9</MONTH><DAY>29</DAY></DATE><COMMENT>Destructuring in function declarations, default parameters, rest parameters, spread operator, arrow functions, generator functions and <CODEROUTINE>yield</CODEROUTINE>, <CODEROUTINE>for</CODEROUTINE> … <CODEROUTINE>of</CODEROUTINE> loops.</COMMENT></ARTICLE></ITEM>
          <ITEM><ARTICLE predecessor="https://www.ibm.com/developerworks/library/wa-ecmascript6-neward-p2/index.html"><X status="zombie"><T>Classes in JavaScript</T><ST>Understanding properties and inheritance</ST><A>https://www.ibm.com/developerworks/library/wa-ecmascript6-neward-p3/index.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Ted</FIRSTNAME><LASTNAME>Neward</LASTNAME></AUTHOR><DATE><YEAR>2016</YEAR><MONTH>11</MONTH><DAY>8</DAY></DATE><COMMENT>Class definition, getters and setters, the preservation of the prototype chain mechanism, and static properties and fields.</COMMENT></ARTICLE></ITEM>
          <ITEM><ARTICLE predecessor="https://www.ibm.com/developerworks/library/wa-ecmascript6-neward-p3/index.html"><X status="zombie"><T>New objects and types in the standard library</T><ST>Using modules, collections, proxies, and more in the new JavaScript</ST><A>https://www.ibm.com/developerworks/library/wa-ecmascript6-neward-p4/index.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Ted</FIRSTNAME><LASTNAME>Neward</LASTNAME></AUTHOR><DATE><YEAR>2016</YEAR><MONTH>12</MONTH><DAY>8</DAY></DATE><COMMENT>Modules, symbols, collections (<CODEROUTINE>Map</CODEROUTINE> and <CODEROUTINE>Set</CODEROUTINE>), weak references, and proxies.</COMMENT></ARTICLE></ITEM>
        </BLIST></ITEM>
      </BLIST></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Web Dev Simplified</TITLE>
      <ITEM><ARTICLE><X><T>Differences Between Var, Let, and Const</T><A>https://www.youtube.com/watch?v=9WIJQDvt4Us</A><L>en</L><F>MP4</F><DURATION><MINUTE>8</MINUTE><SECOND>36</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>11</MONTH><DAY>10</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>JavaScript ES6 Arrow Functions Tutorial</T><A>https://www.youtube.com/watch?v=h33Srr5J9nY</A><L>en</L><F>MP4</F><DURATION><MINUTE>9</MINUTE><SECOND>31</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>1</MONTH><DAY>3</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>JavaScript Promises In 10 Minutes</T><A>https://www.youtube.com/watch?v=DHvZLI7Db8E</A><L>en</L><F>MP4</F><DURATION><MINUTE>11</MINUTE><SECOND>30</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>1</MONTH><DAY>17</DAY></DATE><COMMENT>A basic presentation of <CODEROUTINE>Promise</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>8 Must Know JavaScript Array Methods</T><A>https://www.youtube.com/watch?v=R8rmfD9Y5-c</A><L>en</L><F>MP4</F><DURATION><MINUTE>10</MINUTE><SECOND>4</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>2</MONTH><DAY>2</DAY></DATE><COMMENT><CODEROUTINE>filter</CODEROUTINE>, <CODEROUTINE>map</CODEROUTINE>, <CODEROUTINE>find</CODEROUTINE>, <CODEROUTINE>forEach</CODEROUTINE>, <CODEROUTINE>some</CODEROUTINE>, <CODEROUTINE>every</CODEROUTINE>, <CODEROUTINE>reduce</CODEROUTINE>, and <CODEROUTINE>includes</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>JavaScript Async Await</T><A>https://www.youtube.com/watch?v=V_Kr9OSfDeU</A><L>en</L><F>MP4</F><DURATION><MINUTE>7</MINUTE><SECOND>30</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>2</MONTH><DAY>9</DAY></DATE><COMMENT>A basic presentation of <CODEROUTINE>async</CODEROUTINE>/<CODEROUTINE>await</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Why Is Array/Object Destructuring So Useful And How To Use It</T><A>https://www.youtube.com/watch?v=NIq3qLaHCIs</A><L>en</L><F>MP4</F><DURATION><MINUTE>13</MINUTE><SECOND>23</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>7</MONTH><DAY>20</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Learn Fetch API In 6 Minutes</T><A>https://www.youtube.com/watch?v=cuEtnrL9-H0</A><L>en</L><F>MP4</F><DURATION><MINUTE>6</MINUTE><SECOND>34</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>10</MONTH><DAY>15</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X quality="-1"><T>How To Build JavaScript Projects Without Getting Stuck</T><A>https://www.youtube.com/watch?v=SNRFGw5Mb0g</A><L>en</L><F>MP4</F><DURATION><MINUTE>32</MINUTE><SECOND>56</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR><DATE><YEAR>2020</YEAR><MONTH>11</MONTH><DAY>17</DAY></DATE><COMMENT>It is obvious that <AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR> needs to do some advertising for his courses, but this presentation is very painful, long and slow.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Learn JavaScript DOM Traversal In 15 Minutes</T><A>https://www.youtube.com/watch?v=v7rSSy8CaYE</A><L>en</L><F>MP4</F><DURATION><MINUTE>14</MINUTE><SECOND>43</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR><DATE><YEAR>2020</YEAR><MONTH>11</MONTH><DAY>21</DAY></DATE><COMMENT>The API for querying the DOM.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Learn DOM Manipulation In 18 Minutes</T><A>https://www.youtube.com/watch?v=y17RuWkWdn8</A><L>en</L><F>MP4</F><DURATION><MINUTE>18</MINUTE><SECOND>36</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR><DATE><YEAR>2020</YEAR><MONTH>12</MONTH><DAY>8</DAY></DATE><COMMENT>The basics of DOM manipulation.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>5 Must Know JavaScript Features That Almost Nobody Knows</T><A>https://www.youtube.com/watch?v=v2tJ3nzXh8I</A><L>en</L><F>MP4</F><DURATION><MINUTE>18</MINUTE><SECOND>5</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR><DATE><YEAR>2021</YEAR><MONTH>2</MONTH><DAY>20</DAY></DATE><COMMENT>The nullish coalescing operator, the optional chaining operator, styling console output, declaring properties with a variable of the same name, and <CODEROUTINE>script</CODEROUTINE>'s <CODEROUTINE>defer</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>5+ Must Know HTML Tags That Almost Nobody Knows</T><A>https://www.youtube.com/watch?v=iX_QyjdctsQ</A><L>en</L><F>MP4</F><DURATION><MINUTE>15</MINUTE><SECOND>32</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR><DATE><YEAR>2021</YEAR><MONTH>2</MONTH><DAY>27</DAY></DATE><COMMENT><CODEROUTINE>&lt;fieldset&gt;</CODEROUTINE>, <CODEROUTINE>&lt;legend&gt;</CODEROUTINE>, <CODEROUTINE>&lt;datalist&gt;</CODEROUTINE>, <CODEROUTINE>&lt;input type="color"&gt;</CODEROUTINE>, <CODEROUTINE>&lt;input type="time"&gt;</CODEROUTINE>, <CODEROUTINE>&lt;progress&gt;</CODEROUTINE>, Open Graph meta tags, <CODEROUTINE>&lt;sub&gt;</CODEROUTINE>, <CODEROUTINE>&lt;sup&gt;</CODEROUTINE>, <CODEROUTINE>&lt;picture&gt;</CODEROUTINE>, and <CODEROUTINE>&lt;template&gt;</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>5 MORE Must Know JavaScript Features That Almost Nobody Knows</T><A>https://www.youtube.com/watch?v=WIP1czLm3CY</A><L>en</L><F>MP4</F><DURATION><MINUTE>18</MINUTE><SECOND>4</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR><DATE><YEAR>2021</YEAR><MONTH>3</MONTH><DAY>9</DAY></DATE><COMMENT>Block statements, <CODEROUTINE>in</CODEROUTINE> operator, tagged template literals, generator functions, and dynamic imports.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Why I Don't Use Else When Programming</T><A>https://www.youtube.com/watch?v=EumXak7TyQ0</A><L>en</L><F>MP4</F><DURATION><MINUTE>10</MINUTE><SECOND>17</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR><DATE><YEAR>2021</YEAR><MONTH>3</MONTH><DAY>23</DAY></DATE><COMMENT><CODEROUTINE>else</CODEROUTINE> considered harmful.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Is This The Best JavaScript Extension?</T><A>https://www.youtube.com/watch?v=TQXUeGYs8u0</A><L>en</L><F>MP4</F><DURATION><MINUTE>12</MINUTE><SECOND>11</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR><DATE><YEAR>2021</YEAR><MONTH>5</MONTH><DAY>1</DAY></DATE><COMMENT>A presentation of Quokka.js.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Why I Don't Use Semicolons In JavaScript</T><A>https://www.youtube.com/watch?v=cB0STl_A4l4</A><L>en</L><F>MP4</F><DURATION><MINUTE>6</MINUTE><SECOND>3</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR><DATE><YEAR>2021</YEAR><MONTH>5</MONTH><DAY>4</DAY></DATE><COMMENT><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR>'s opinion: do whatever you want and use Prettier to format the code and to add/remove semicolons according to the project's formatting policy.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X quality="-1"><T>How I Setup And Customize VSCode</T><A>https://www.youtube.com/watch?v=VknMxAIbJj4</A><L>en</L><F>MP4</F><DURATION><MINUTE>10</MINUTE><SECOND>20</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR><DATE><YEAR>2021</YEAR><MONTH>5</MONTH><DAY>8</DAY></DATE><COMMENT>The title says it all. This has little interest.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Why You Might Want To Make Your Website Slower</T><A>https://www.youtube.com/watch?v=wZ1jXhwH-z0</A><L>en</L><F>MP4</F><DURATION><MINUTE>6</MINUTE><SECOND>2</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>3</MONTH><DAY>22</DAY></DATE><COMMENT>Some basic UX advice.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Learn JavaScript Hoisting In 5 Minutes</T><A>https://www.youtube.com/watch?v=EvfRXyKa_GI</A><L>en</L><F>MP4</F><DURATION><MINUTE>5</MINUTE><SECOND>39</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>7</MONTH><DAY>19</DAY></DATE><COMMENT>An explanation of hoisting.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Learn Every CSS Viewport Unit In 10 Minutes</T><A>https://www.youtube.com/watch?v=5m6JOJLy5B0</A><L>en</L><F>MP4</F><DURATION><MINUTE>10</MINUTE><SECOND>49</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>7</MONTH><DAY>30</DAY></DATE><COMMENT>The title says it all: <CODEROUTINE>vw</CODEROUTINE>, <CODEROUTINE>vh</CODEROUTINE>, <CODEROUTINE>vmin</CODEROUTINE>, <CODEROUTINE>vmax</CODEROUTINE>, and their new large, small, and dynamic variations.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Learn JavaScript Scoping In 10 Minutes</T><A>https://www.youtube.com/watch?v=TkFN6e9ZDMw</A><L>en</L><F>MP4</F><DURATION><MINUTE>11</MINUTE><SECOND>38</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>8</MONTH><DAY>13</DAY></DATE><COMMENT>An explanation of scopes.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>WebAssembly</TITLE>
      <ITEM><ARTICLE><X><T>Emscripting a C library to Wasm</T><A>https://developers.google.com/web/updates/2018/03/emscripting-a-c-library</A><L>en</L><F>HTML</F></X><AUTHOR><GIVENNAME>Surma</GIVENNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>4</MONTH><DAY>12</DAY></DATE><COMMENT>An introduction to Emscripten by using WebP codec as an example.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Extending the browser with WebAssembly</T><A>https://developers.google.com/web/updates/2018/08/wasm-av1</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Alex</FIRSTNAME><LASTNAME>Danilo</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>8</MONTH><DAY>22</DAY></DATE><COMMENT>The same, but less detailed, with the AV1 codec.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Emscripten’s embind</T><A>https://developers.google.com/web/updates/2018/08/embind</A><L>en</L><F>HTML</F></X><AUTHOR><GIVENNAME>Surma</GIVENNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>8</MONTH><DAY>27</DAY></DATE><COMMENT>Embind simplifies the declaration of the exported C/C++ functions.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>WebAssembly Threads ready to try in Chrome 70</T><A>https://developers.google.com/web/updates/2018/10/wasm-threads</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Alex</FIRSTNAME><LASTNAME>Danilo</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>10</MONTH><DAY>30</DAY></DATE><COMMENT>Pthreads are now supported (as a trial) for WASM in Chrome 70.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Emscripten and npm</T><A>https://developers.google.com/web/updates/2019/01/emscripten-npm</A><L>en</L><F>HTML</F></X><AUTHOR><GIVENNAME>Surma</GIVENNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>1</MONTH><DAY>15</DAY></DATE><COMMENT>A detailed description on how to integrate the generation of the WebAssembly components in the npm build using Docker.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Replacing a hot path in your app's JavaScript with WebAssembly</T><ST>It's consistently fast, yo</ST><A>https://developer.chrome.com/blog/hotpath-with-wasm/</A><L>en</L><F>HTML</F></X><AUTHOR><GIVENNAME>Surma</GIVENNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>2</MONTH><DAY>15</DAY></DATE><COMMENT>Generating Wasm for a very simple piece of code from C, Rust and AssemblyScript.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>WebAssembly brings Google Earth to more browsers</T><A>https://blog.chromium.org/2019/06/webassembly-brings-google-earth-to-more.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Thomas</FIRSTNAME><LASTNAME>Nattestad</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>6</MONTH><DAY>20</DAY></DATE><COMMENT>Google Earth is now running on WebAssembly and the future of this one.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Mashups</TITLE>
      <ITEM><ARTICLE><X status="zombie"><T>Mashups: The new breed of Web app</T><ST>An introduction to mashups</ST><A>https://www.ibm.com/developerworks/xml/library/x-mashups/index.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Duane</FIRSTNAME><LASTNAME>Merrill</LASTNAME></AUTHOR><DATE><YEAR>2006</YEAR><MONTH>8</MONTH><DAY>8</DAY></DATE><COMMENT>A good introduction to mashups: the technological part is the repetition of the usual stuff, but the description of the challenges is interesting.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Web services from well-known sites</TITLE>
      <ITEM><ARTICLE><X><T>Build AJAX-Based Web Maps Using ka-Map</T><A>https://www.xml.com/pub/a/2005/08/10/ka-map.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Tyler</FIRSTNAME><LASTNAME>Mitchell</LASTNAME></AUTHOR><DATE><YEAR>2005</YEAR><MONTH>8</MONTH><DAY>10</DAY></DATE><COMMENT>This ka-Map stuff seems rather scary to develop with…</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="dead"><T>eBay Developer Challenge 2006</T><A>http://www.oreillynet.com/pub/a/network/2005/12/05/ebay-developer-challenge-2006.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Alan</FIRSTNAME><LASTNAME>Lewis</LASTNAME></AUTHOR><DATE><YEAR>2005</YEAR><MONTH>12</MONTH><DAY>5</DAY></DATE><COMMENT>eBay tries to do the same as Google: inviting hacker to build killer apps on top of their APIs.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Seattle Movie Finder: An AJAX- and REST-Powered Virtual Earth Mashup</T><A>https://www.xml.com/pub/a/2006/03/01/seattle-movie-finder-AJAX-REST-virtual-earth-mashup.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Dare</FIRSTNAME><LASTNAME>Obasanjo</LASTNAME></AUTHOR><DATE><YEAR>2006</YEAR><MONTH>3</MONTH><DAY>1</DAY></DATE><COMMENT>An example of using MSN Virtual Earth, but this article is not very clear.</COMMENT></ARTICLE></ITEM>
      <ITEM><BLIST><TITLE>Google Maps</TITLE>
        <ITEM><ARTICLE><X><T>Hacking Maps with the Google Maps API</T><A>https://www.xml.com/pub/a/2005/08/10/google-maps.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Hari</FIRSTNAME><LASTNAME>Gottipati</LASTNAME></AUTHOR><DATE><YEAR>2005</YEAR><MONTH>8</MONTH><DAY>10</DAY></DATE><COMMENT>A simple example of using the Google's API.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>YouTube</TITLE>
        <ITEM><ARTICLE><X><T>Google I/O 2011: YouTube's iframe Player: The Future of Embedding</T><A>https://www.youtube.com/watch?v=bHQqvYy5KYo</A><L>en</L><F>MP4</F><DURATION><MINUTE>54</MINUTE><SECOND>37</SECOND></DURATION><DATE><YEAR>2011</YEAR><MONTH>5</MONTH><DAY>13</DAY></DATE></X><AUTHOR><FIRSTNAME>Jeffrey</FIRSTNAME><LASTNAME>Posnick</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Jarek</FIRSTNAME><LASTNAME>Wilkiewicz</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Greg</FIRSTNAME><LASTNAME>Schechter</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>5</MONTH><DAY>11</DAY></DATE><COMMENT>A description of how is chosen Flash vs. HTML 5 rendering, the differences betwen the JavaScript and AS3 APIs, and some coding best practices.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Server side</TITLE>
      <ITEM><ARTICLE><X><T>Isaac Schlueter and Matt Hackett: Server-side JavaScript</T><A>https://www.youtube.com/watch?v=V3InSvKckAY</A><L>en</L><F>MP4</F><DURATION><MINUTE>23</MINUTE><SECOND>37</SECOND></DURATION><DATE><YEAR>2011</YEAR><MONTH>8</MONTH><DAY>28</DAY></DATE></X><AUTHOR><FIRSTNAME>Isaac</FIRSTNAME><LASTNAME>Schlueter</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Matt</FIRSTNAME><LASTNAME>Hackett</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>9</MONTH></DATE><COMMENT>A much too quick presentation of server side JS and a tic-tac-toe implementation using Narwhal and Jack.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="dead"><T>YUI Theater — Elijah Insua: “jsdom: a CommonJS Implementation of the DOM” (18 min.)</T><A>https://yuiblog.com/blog/2010/05/20/video-insua/</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>18</MINUTE><SECOND>24</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Elijah</FIRSTNAME><LASTNAME>Insua</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>5</MONTH></DATE><COMMENT>A presentation of the interest of JSDom, a JavaScript DOM Level 1 implementation.</COMMENT></ARTICLE></ITEM>
      <ITEM><BLIST><TITLE>Node.js</TITLE>
        <ITEM><ARTICLE><X status="dead"><T>YUI Theater — Ryan Dahl: “Introduction to NodeJS” (58 min.)</T><A>https://yuiblog.com/blog/2010/05/20/video-dahl/</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>58</MINUTE><SECOND>18</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Ryan</FIRSTNAME><LASTNAME>Dahl</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>5</MONTH></DATE><COMMENT>A presentation of Node.js, the rational of its design (using an event loop and having no blocking call - in particular I/Os -), and some code samples.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Node.js: JavaScript on the Server</T><A>https://www.youtube.com/watch?v=F6k8lTrAE2g</A><L>en</L><F>MP4</F><DURATION><MINUTE>59</MINUTE><SECOND>59</SECOND></DURATION><DATE><YEAR>2010</YEAR><MONTH>7</MONTH><DAY>29</DAY></DATE></X><AUTHOR><FIRSTNAME>Ryan</FIRSTNAME><LASTNAME>Dahl</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>7</MONTH><DAY>28</DAY></DATE><COMMENT>The same talk, but the Q&amp;A are different.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X status="dead"><T>YUI Theater — Dav Glass: “Using Node.js and YUI 3″ (36 min.)</T><A>https://yuiblog.com/blog/2010/09/29/video-glass-node/</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>36</MINUTE><SECOND>7</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Dav</FIRSTNAME><LASTNAME>Glass</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>9</MONTH></DATE><COMMENT>A demonstration of Node.js and YUI3 used to generate the HTML on the server and to transmit it to the browser.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X status="dead"><T>YUI Theater — Ryan Dahl: “Node.js Roadmap” (48 min.)</T><A>https://yuiblog.com/blog/2010/11/30/video-yuiconf2010-dahl/</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>47</MINUTE><SECOND>58</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Ryan</FIRSTNAME><LASTNAME>Dahl</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>11</MONTH><DAY>10</DAY></DATE><COMMENT>The current status of Node.js and the new improvements: fast buffers, long stack traces, and stream interfaces (with some demos of that last one).</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X status="dead"><T>YUI Theater — Dav Glass: “YUI 3 and Node.js (Not Just For Web Pages) ” (51 min.)</T><A>https://yuiblog.com/blog/2011/06/09/video-f2esummit2011-glass/</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>47</MINUTE><SECOND>58</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Dav</FIRSTNAME><LASTNAME>Glass</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>3</MONTH><DAY>29</DAY></DATE><COMMENT>Some small examples (SMTP, YUIDoc…) of using YUI with Node.js to code the server side, a performance improvement, and Qs&amp;As.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X status="zombie"><T>Use Node.js as a full cloud environment development stack</T><ST>Embrace the concurrency model using asynchronous I/O via callbacks, and build a chat server</ST><A>https://www.ibm.com/developerworks/cloud/library/cl-nodejscloud/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Noah</FIRSTNAME><LASTNAME>Gift</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Jeremy</FIRSTNAME><LASTNAME>Jones</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>4</MONTH><DAY>25</DAY></DATE><COMMENT>An introduction to Node.js with the example of a chat server.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X status="dead"><T>First Stable Build of NodeJs on Windows Released</T><A>https://blogs.msdn.microsoft.com/b/interoperability/archive/2011/11/07/first-stable-build-of-nodejs-on-windows-released.aspx</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Claudio</FIRSTNAME><LASTNAME>Caldato</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>11</MONTH><DAY>7</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X status="zombie"><T>Developing mobile apps with Node.js and MongoDB, Part 1: A team's methods and results</T><ST>Speeding time to value of systems of engagement</ST><A>https://www.ibm.com/developerworks/java/library/mo-nodejs-1/index.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Zach</FIRSTNAME><LASTNAME>Cross</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Aga</FIRSTNAME><LASTNAME>Pochec</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Santiago</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Divit</FIRSTNAME><LASTNAME>Singh</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>9</MONTH><DAY>5</DAY></DATE><COMMENT>Some IBM interns prototype a new implementation of IBM Passes using Node.js and MongoDB, getting more performance than using Java and DB2.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="https://www.ibm.com/developerworks/java/library/mo-nodejs-1/index.html"><X status="zombie"><T>Developing mobile apps with Node.js and MongoDB, Part 2: Hints and tips</T><ST>Avoiding the pitfalls of using an alternative stack</ST><A>https://www.ibm.com/developerworks/java/library/mo-nodejs-2/index.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Zach</FIRSTNAME><LASTNAME>Cross</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Aga</FIRSTNAME><LASTNAME>Pochec</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Santiago</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Divit</FIRSTNAME><LASTNAME>Singh</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>8</MONTH><DAY>19</DAY></DATE><COMMENT>Some pieces of advice when using Node.js.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X status="zombie"><T>Use JavaScript closures efficiently</T><ST>Avoid memory leaks in your Node.js apps</ST><A>https://www.ibm.com/developerworks/library/wa-use-javascript-closures-efficiently/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Michael</FIRSTNAME><LASTNAME>Dawson</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Gireesh</FIRSTNAME><LASTNAME>Punathil</LASTNAME></AUTHOR><DATE><YEAR>2016</YEAR><MONTH>5</MONTH><DAY>2</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X status="zombie"><T>Use the Node.js event loop effectively</T><ST>How to avoid unexpected results in your Node.js apps</ST><A>https://www.ibm.com/developerworks/library/wa-node-single-threaded-event-loop/index.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Doug</FIRSTNAME><LASTNAME>Tidwell</LASTNAME></AUTHOR><DATE><YEAR>2017</YEAR><MONTH>4</MONTH><DAY>11</DAY></DATE><COMMENT>A very very basic introduction to the event loop and callbacks.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Understanding the Node.js event loop phases and how it executes the JavaScript code.</T><A>https://dev.to/lunaticmonk/understanding-the-node-js-event-loop-phases-and-how-it-executes-the-javascript-code-1j9</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Sumedh</FIRSTNAME><LASTNAME>Nimkarde</LASTNAME></AUTHOR><DATE><YEAR>2020</YEAR><MONTH>2</MONTH><DAY>8</DAY></DATE><COMMENT>A description of the event loop.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>AJAX</TITLE>
      <ITEM><ARTICLE><X quality="1" status="zombie"><T>Ajax for Java developers: Build dynamic Java applications</T><ST>Ajax paves the way for better Web applications</ST><A>https://www.ibm.com/developerworks/library/j-ajax1/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Philip</FIRSTNAME><LASTNAME>McCarthy</LASTNAME></AUTHOR><DATE><YEAR>2005</YEAR><MONTH>9</MONTH><DAY>20</DAY></DATE><COMMENT>A clear introduction to using <CODEROUTINE>XMLHttpRequest</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="zombie"><T>Ajax for Java developers: Java object serialization for Ajax</T><ST>Five ways to serialize data in Ajax applications</ST><A>https://www.ibm.com/developerworks/java/library/j-ajax2/index.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Philip</FIRSTNAME><LASTNAME>McCarthy</LASTNAME></AUTHOR><DATE><YEAR>2005</YEAR><MONTH>10</MONTH><DAY>4</DAY></DATE><COMMENT>The author describes some Java→XML/text serialization methods with their pros and cons.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Is AJAX Here to Stay?</T><A>https://www.xml.com/pub/a/2005/10/05/ajax-web-20-soa.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jordan</FIRSTNAME><LASTNAME>Frank</LASTNAME></AUTHOR><DATE><YEAR>2005</YEAR><MONTH>10</MONTH><DAY>5</DAY></DATE><COMMENT>As usual with most of these articles, the author is a big believer in AJAX. I would rather think the real future of AJAX depends on the simplicity and the power of the development frameworks.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="zombie"><T>Considering Ajax, Part 1: Cut through the hype</T><ST>Learn when and how to implement this new technology</ST><A>https://www.ibm.com/developerworks/library/wa-ajaxtop1/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Chris</FIRSTNAME><LASTNAME>Laffra</LASTNAME></AUTHOR><DATE><YEAR>2006</YEAR><MONTH>5</MONTH><DAY>9</DAY></DATE><COMMENT>Some very basic facts about AJAX.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE predecessor="https://www.ibm.com/developerworks/library/wa-ajaxtop1/"><X status="zombie"><T>Considering Ajax, Part 2: Change your life with mashups - Pitfalls to avoid</T><ST>and great opportunities for the future</ST><A>https://www.ibm.com/developerworks/library/wa-ajaxtop2/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Chris</FIRSTNAME><LASTNAME>Laffra</LASTNAME></AUTHOR><DATE><YEAR>2006</YEAR><MONTH>5</MONTH><DAY>23</DAY></DATE><COMMENT>Some advantages and some disadvantages of using AJAX.</COMMENT></ARTICLE></ITEM>
      <ITEM><BLIST><TITLE>Mastering Ajax</TITLE>
        <ITEM><ARTICLE><X><T>Mastering Ajax, Part 1: Introduction to Ajax</T><ST>Understanding Ajax, a productive approach to building Web sites, and how it works</ST><A>https://www.cs.utexas.edu/~mitra/csFall2015/cs329/lectures/ajax/wa-ajaxintro1-pdf.pdf</A><L>en</L><F>PDF</F></X><AUTHOR><FIRSTNAME>Brett</FIRSTNAME><LASTNAME>McLaughlin</LASTNAME></AUTHOR><DATE><YEAR>2005</YEAR><MONTH>12</MONTH><DAY>6</DAY></DATE><COMMENT>An overview of the technologies used in AJAX.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="https://www.cs.utexas.edu/~mitra/csFall2015/cs329/lectures/ajax/wa-ajaxintro1-pdf.pdf"><X><T>Mastering Ajax, Part 2: Make asynchronous requests with JavaScript and Ajax</T><ST>Use XMLHttpRequest for Web requests</ST><A>https://www.cs.utexas.edu/~mitra/csFall2015/cs329/lectures/ajax/wa-ajaxintro2-pdf.pdf</A><L>en</L><F>PDF</F></X><AUTHOR><FIRSTNAME>Brett</FIRSTNAME><LASTNAME>McLaughlin</LASTNAME></AUTHOR><DATE><YEAR>2006</YEAR><MONTH>1</MONTH><DAY>17</DAY></DATE><COMMENT>A slow but good presentation of <CODEROUTINE>XMLHttpRequest</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="https://www.cs.utexas.edu/~mitra/csFall2015/cs329/lectures/ajax/wa-ajaxintro2-pdf.pdf"><X><T>Mastering Ajax, Part 3: Advanced requests and responses in Ajax</T><ST>Gain a complete understanding of HTTP status codes, ready states, and the XMLHttpRequest object</ST><A>https://www.cs.utexas.edu/~mitra/csFall2015/cs329/lectures/ajax/wa-ajaxintro3-pdf.pdf</A><L>en</L><F>PDF</F></X><AUTHOR><FIRSTNAME>Brett</FIRSTNAME><LASTNAME>McLaughlin</LASTNAME></AUTHOR><DATE><YEAR>2006</YEAR><MONTH>2</MONTH><DAY>14</DAY></DATE><COMMENT>Some additional details on <CODEROUTINE>XMLHttpRequest</CODEROUTINE>: <CODEROUTINE>XMLHttpRequest</CODEROUTINE> ready state values, how to perform a HEAD request, and HTTP status codes.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="https://www.cs.utexas.edu/~mitra/csFall2015/cs329/lectures/ajax/wa-ajaxintro3-pdf.pdf"><X><T>Mastering Ajax, Part 4: Exploiting DOM for Web response</T><ST>Convert HTML into an object model to make Web pages responsive and interactive</ST><A>https://www.cs.utexas.edu/~mitra/csFall2015/cs329/lectures/ajax/wa-ajaxintro4-pdf.pdf</A><L>en</L><F>PDF</F></X><AUTHOR><FIRSTNAME>Brett</FIRSTNAME><LASTNAME>McLaughlin</LASTNAME></AUTHOR><DATE><YEAR>2006</YEAR><MONTH>3</MONTH><DAY>14</DAY></DATE><COMMENT>A very slow introduction to the fact that Browsers encode HTML pages as trees.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="https://www.cs.utexas.edu/~mitra/csFall2015/cs329/lectures/ajax/wa-ajaxintro4-pdf.pdf"><X><T>Mastering Ajax, Part 5: Manipulate the DOM</T><ST>Use JavaScript to update your Web pages on the fly</ST><A>https://www.cs.utexas.edu/~mitra/csFall2015/cs329/lectures/ajax/wa-ajaxintro5-pdf.pdf</A><L>en</L><F>PDF</F></X><AUTHOR><FIRSTNAME>Brett</FIRSTNAME><LASTNAME>McLaughlin</LASTNAME></AUTHOR><DATE><YEAR>2006</YEAR><MONTH>4</MONTH><DAY>11</DAY></DATE><COMMENT>A presentation of the DOM API.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="https://www.cs.utexas.edu/~mitra/csFall2015/cs329/lectures/ajax/wa-ajaxintro5-pdf.pdf"><X><T>Mastering Ajax, Part 6: Build DOM-based Web applications -- Mix the DOM and JavaScript -- those perfect Ajax companions</T><ST>to change a Web page's user interface without page reloads</ST><A>https://www.cs.utexas.edu/~mitra/csFall2015/cs329/lectures/ajax/wa-ajaxintro6-pdf.pdf</A><L>en</L><F>PDF</F></X><AUTHOR><FIRSTNAME>Brett</FIRSTNAME><LASTNAME>McLaughlin</LASTNAME></AUTHOR><DATE><YEAR>2006</YEAR><MONTH>9</MONTH><DAY>12</DAY></DATE><COMMENT>A simple example demonstrating DOM.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="https://www.cs.utexas.edu/~mitra/csFall2015/cs329/lectures/ajax/wa-ajaxintro6-pdf.pdf"><X><T>Mastering Ajax, Part 7: Using XML in requests and responses</T><ST>Learn when it's a good idea -- and when it isn't</ST><A>https://www.cs.utexas.edu/~mitra/csFall2015/cs329/lectures/ajax/wa-ajaxintro7-pdf.pdf</A><L>en</L><F>PDF</F></X><AUTHOR><FIRSTNAME>Brett</FIRSTNAME><LASTNAME>McLaughlin</LASTNAME></AUTHOR><DATE><YEAR>2006</YEAR><MONTH>10</MONTH><DAY>10</DAY></DATE><COMMENT>How the client can generate an XML request for the server and why it is generally not a good idea to do this.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="https://www.cs.utexas.edu/~mitra/csFall2015/cs329/lectures/ajax/wa-ajaxintro7-pdf.pdf"><X><T>Mastering Ajax, Part 8: Using XML in requests and responses</T><ST>Ajax client/server communication can be a tricky business</ST><A>https://www.cs.utexas.edu/~mitra/csFall2015/cs329/lectures/ajax/wa-ajaxintro8-pdf.pdf</A><L>en</L><F>PDF</F></X><AUTHOR><FIRSTNAME>Brett</FIRSTNAME><LASTNAME>McLaughlin</LASTNAME></AUTHOR><DATE><YEAR>2006</YEAR><MONTH>11</MONTH><DAY>7</DAY></DATE><COMMENT>How the client can handle the server XML answer.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="https://www.cs.utexas.edu/~mitra/csFall2015/cs329/lectures/ajax/wa-ajaxintro8-pdf.pdf"><X><T>Mastering Ajax, Part 9: Using the Google Ajax Search API</T><ST>Take advantage of public APIs in your asynchronous applications</ST><A>https://www.cs.utexas.edu/~mitra/csFall2015/cs329/lectures/ajax/wa-ajaxintro9-pdf.pdf</A><L>en</L><F>PDF</F></X><AUTHOR><FIRSTNAME>Brett</FIRSTNAME><LASTNAME>McLaughlin</LASTNAME></AUTHOR><DATE><YEAR>2007</YEAR><MONTH>1</MONTH><DAY>23</DAY></DATE><COMMENT>A small introduction to the Google API.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="https://www.cs.utexas.edu/~mitra/csFall2015/cs329/lectures/ajax/wa-ajaxintro9-pdf.pdf"><X><T>Mastering Ajax, Part 10: Using JSON for data transfer</T><ST>Work natively with JavaScript objects</ST><A>https://www.cs.utexas.edu/~mitra/csFall2015/cs329/lectures/ajax/wa-ajaxintro10-pdf.pdf</A><L>en</L><F>PDF</F></X><AUTHOR><FIRSTNAME>Brett</FIRSTNAME><LASTNAME>McLaughlin</LASTNAME></AUTHOR><DATE><YEAR>2007</YEAR><MONTH>3</MONTH><DAY>27</DAY></DATE><COMMENT>An introduction to JSON.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="https://www.cs.utexas.edu/~mitra/csFall2015/cs329/lectures/ajax/wa-ajaxintro10-pdf.pdf"><X><T>Mastering Ajax, Part 11: JSON on the server side</T><ST>Responding to and replying with JSON in your server-side scripts and programs</ST><A>https://www.cs.utexas.edu/~mitra/csFall2015/cs329/lectures/ajax/wa-ajaxintro11-pdf.pdf</A><L>en</L><F>PDF</F></X><AUTHOR><FIRSTNAME>Brett</FIRSTNAME><LASTNAME>McLaughlin</LASTNAME></AUTHOR><DATE><YEAR>2007</YEAR><MONTH>8</MONTH><DAY>14</DAY></DATE><COMMENT>How to send and receive JSON between the Browser to the server.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>GWT</TITLE>
        <ITEM><ARTICLE><X quality="-1" status="dead"><T>Working with the Google Web Toolkit</T><A>http://www.onjava.com/pub/a/onjava/2006/05/31/working-with-google-web-toolkit.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Robert</FIRSTNAME><LASTNAME>Cooper</LASTNAME></AUTHOR><DATE><YEAR>2006</YEAR><MONTH>5</MONTH><DAY>31</DAY></DATE><COMMENT>The author presents GWT, but he dives directly in the details of a use example without giving an overview. So this article is not clear…</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X status="zombie"><T>Patterns + GWT + Ajax = Usability!</T><ST>Enhance your Web site with Ajax, GWT, and design patterns</ST><A>https://www.ibm.com/developerworks/web/library/wa-aj-patterns/index.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Federico</FIRSTNAME><LASTNAME>Kereki</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>8</MONTH><DAY>21</DAY></DATE><COMMENT>Some design patterns:<BR/>- prevalidation: asynchronous input validation on the client<BR/>- code sharing: use the same code to validate date on the client and on the server<BR/>- caching<BR/>- prefetching<BR/>- thread simulation: either with the <CODEROUTINE>Timer</CODEROUTINE> class or with deferred commands.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Google I/O 2010 - Optimizing apps with the GWT Compiler</T><A>https://www.youtube.com/watch?v=qT6ZsQBM7kY</A><L>en</L><F>MP4</F><DURATION><MINUTE>56</MINUTE><SECOND>17</SECOND></DURATION><DATE><YEAR>2010</YEAR><MONTH>5</MONTH><DAY>26</DAY></DATE></X><AUTHOR><FIRSTNAME>Ray</FIRSTNAME><LASTNAME>Cromwell</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>5</MONTH><DAY>19</DAY></DATE><COMMENT>A description of the tricks done by GWT to improve application performance: type tightening, converting methods to static, finalizing, pruning, inlining… both on Java and on JavaScript. How to build faster a GWT application.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Google I/O 2010 - GWT + HTML5 can do what?!</T><A>https://www.youtube.com/watch?v=aW--Wlf9EFs</A><L>en</L><F>MP4</F><DURATION><MINUTE>57</MINUTE><SECOND>59</SECOND></DURATION><DATE><YEAR>2010</YEAR><MONTH>5</MONTH><DAY>27</DAY></DATE></X><AUTHOR><FIRSTNAME>Ray</FIRSTNAME><LASTNAME>Cromwell</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Stefan</FIRSTNAME><LASTNAME>Haustein</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Joel</FIRSTNAME><LASTNAME>Webber</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>5</MONTH><DAY>19</DAY></DATE><COMMENT>Using WebGL to process images and sounds, and to play Quake II.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Scala + GWT</T><A>https://www.youtube.com/watch?v=_1GjgFjX5gE</A><L>en</L><F>MP4</F><DURATION><MINUTE>54</MINUTE><SECOND>28</SECOND></DURATION><DATE><YEAR>2011</YEAR><MONTH>2</MONTH><DAY>1</DAY></DATE></X><AUTHOR><FIRSTNAME>Grzegorz</FIRSTNAME><LASTNAME>Kossakowski</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>9</MONTH><DAY>30</DAY></DATE><COMMENT>A description of the current status of compiling Scala into JavaScript via a new language, Jribble, and GWT. This is not very convincing.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><ARTICLE><X status="zombie"><T>Five Ajax best practices</T><ST>Tips and tools for better Ajax development</ST><A>https://www.ibm.com/developerworks/web/library/wa-aj-5best/index.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Nathan</FIRSTNAME><MIDDLENAME>A.</MIDDLENAME><LASTNAME>Good</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>11</MONTH><DAY>9</DAY></DATE><COMMENT>Minimize number of calls to the server, reduce the size of the transferred data, preload data, handle errors, and use existing libraries. (This article seems much older than the indicated date of writing.)</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>WebGL</TITLE>
        <ITEM><ARTICLE><X quality="-1"><T>Exporting 3D Scenes from Maya to WebGL Using Clang and LLVM</T><A>https://www.youtube.com/watch?v=Ek-SkrGVyjY</A><L>en</L><F>MP4</F><DURATION><MINUTE>45</MINUTE><SECOND>41</SECOND></DURATION><DATE><YEAR>2011</YEAR><MONTH>11</MONTH><DAY>29</DAY></DATE></X><AUTHOR><FIRSTNAME>Jochen</FIRSTNAME><LASTNAME>Wilhelmy</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>11</MONTH><DAY>17</DAY></DATE><COMMENT>The title says it all. The technical feat may be worthwhile, but this presentation is boring.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Graceful degradation / progressive enhancement</TITLE>
      <ITEM><ARTICLE><X><T>Inclusive Web Design For the Future with Progressive Enhancement</T><A>http://hesketh.com/publications/inclusive_web_design_for_the_future/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Steven</FIRSTNAME><LASTNAME>Champeon</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Nick</FIRSTNAME><LASTNAME>Finck</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>3</MONTH><DAY>11</DAY></DATE><COMMENT>Using progressive enhancement to ensure compatibility with older Browsers.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Hijax</T><A>https://domscripting.com/blog/display/41</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jeremy</FIRSTNAME><LASTNAME>Keith</LASTNAME></AUTHOR><DATE><YEAR>2006</YEAR><MONTH>1</MONTH><DAY>1</DAY></DATE><COMMENT>Plan AJAX from the start, but implement it at the end, after the site is working correctly with static pages.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X quality="1" status="zombie"><T>A guide to writing unobtrusive JavaScript and Ajax</T><ST>Employ good programming practices when creating your web applications</ST><A>https://www.ibm.com/developerworks/web/library/wa-aj-unobtrusive/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Joe</FIRSTNAME><LASTNAME>Lennon</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>11</MONTH><DAY>2</DAY></DATE><COMMENT>A very good tutorial on writing Ajaxified pages that also work without JavaScript.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Nicholas Zakas: Progressive Enhancement 2.0</T><A>https://www.youtube.com/watch?v=hdTxeR90_1E</A><L>en</L><F>MP4</F><DURATION><MINUTE>50</MINUTE><SECOND>14</SECOND></DURATION><DATE><YEAR>2012</YEAR><MONTH>3</MONTH><DAY>19</DAY></DATE></X><AUTHOR><FIRSTNAME>Nicholas</FIRSTNAME><LASTNAME>Zakas</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>3</MONTH><DAY>5</DAY></DATE><COMMENT>Despite "2.0" branding, there is nothing new here.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Crockford on JavaScript</TITLE>
      <ITEM><BLIST><TITLE>Papers</TITLE>
        <ITEM><ARTICLE><X><T>Classical Inheritance in JavaScript</T><A>https://crockford.com/javascript/inheritance.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Douglas</FIRSTNAME><LASTNAME>Crockford</LASTNAME></AUTHOR><COMMENT>How to implement several types of inheritance in JavaScript.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>JavaScript: The World's Most Misunderstood Programming Language</T><A>https://www.crockford.com/javascript/javascript.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Douglas</FIRSTNAME><LASTNAME>Crockford</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR></DATE><COMMENT>Douglas tries to explains why there are so many misconceptions about JavaScript.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X quality="1"><T>Private Members in JavaScript</T><A>https://www.crockford.com/javascript/private.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Douglas</FIRSTNAME><LASTNAME>Crockford</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR></DATE><COMMENT>How to perform data encapsulation in JavaScript.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>Videos</TITLE>
        <ITEM><ARTICLE><X><T>Crockford on JavaScript - Volume 1: The Early Years</T><A>https://www.youtube.com/watch?v=JxAXlJEmNMg</A><L>en</L><F>MP4</F><DURATION><HOUR>1</HOUR><MINUTE>42</MINUTE><SECOND>9</SECOND></DURATION><DATE><YEAR>2011</YEAR><MONTH>9</MONTH><DAY>10</DAY></DATE></X><AUTHOR><FIRSTNAME>Douglas</FIRSTNAME><LASTNAME>Crockford</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>1</MONTH><DAY>25</DAY></DATE><COMMENT>A history of computer hardware and languages, from Jacquard loom to Caja.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="https://www.youtube.com/watch?v=JxAXlJEmNMg"><X><T>Crockford on JavaScript - Chapter 2: And Then There Was JavaScript</T><A>https://www.youtube.com/watch?v=RO1Wnu-xKoY</A><L>en</L><F>MP4</F><DURATION><HOUR>1</HOUR><MINUTE>30</MINUTE><SECOND>23</SECOND></DURATION><DATE><YEAR>2011</YEAR><MONTH>9</MONTH><DAY>20</DAY></DATE></X><AUTHOR><FIRSTNAME>Douglas</FIRSTNAME><LASTNAME>Crockford</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>2</MONTH><DAY>5</DAY></DATE><COMMENT>A high level description of JavaScript with its good and bad parts.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="https://www.youtube.com/watch?v=RO1Wnu-xKoY"><X><T>Crockford on JavaScript - Act III: Function the Ultimate</T><A>https://www.youtube.com/watch?v=ya4UHuXNygM</A><L>en</L><F>MP4</F><DURATION><HOUR>1</HOUR><MINUTE>13</MINUTE><SECOND>29</SECOND></DURATION><DATE><YEAR>2011</YEAR><MONTH>9</MONTH><DAY>20</DAY></DATE></X><AUTHOR><FIRSTNAME>Douglas</FIRSTNAME><LASTNAME>Crockford</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>2</MONTH><DAY>17</DAY></DATE><COMMENT>JavaScript functions (definition, invocation, constructors) and some examples.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="https://www.youtube.com/watch?v=ya4UHuXNygM"><X><T>Crockford on JavaScript - Episode IV: The Metamorphosis of Ajax</T><A>https://www.youtube.com/watch?v=Fv9qT9joc0M</A><L>en</L><F>MP4</F><DURATION><HOUR>1</HOUR><MINUTE>33</MINUTE><SECOND>55</SECOND></DURATION><DATE><YEAR>2011</YEAR><MONTH>9</MONTH><DAY>22</DAY></DATE></X><AUTHOR><FIRSTNAME>Douglas</FIRSTNAME><LASTNAME>Crockford</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>3</MONTH><DAY>3</DAY></DATE><COMMENT>DOM, events, AJAX libraries, IE6…</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="https://www.youtube.com/watch?v=Fv9qT9joc0M"><X><T>Crockford on JavaScript - Part 5: The End of All Things</T><A>https://www.youtube.com/watch?v=47Ceot8yqeI</A><L>en</L><F>MP4</F><DURATION><HOUR>1</HOUR><MINUTE>24</MINUTE><SECOND>43</SECOND></DURATION><DATE><YEAR>2011</YEAR><MONTH>9</MONTH><DAY>22</DAY></DATE></X><AUTHOR><FIRSTNAME>Douglas</FIRSTNAME><LASTNAME>Crockford</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>3</MONTH><DAY>31</DAY></DATE><COMMENT>Security (XSS, ECMAScript's Strict mode, object capability security system…), optimization, Crockford 10<SUP>th</SUP> anniversary with JavaScript, and JSLint.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="https://www.youtube.com/watch?v=47Ceot8yqeI"><X><T>Crockford on JavaScript - Scene 6: Loopage</T><A>https://www.youtube.com/watch?v=QgwSUtYSUqA</A><L>en</L><F>MP4</F><DURATION><MINUTE>51</MINUTE><SECOND>52</SECOND></DURATION><DATE><YEAR>2011</YEAR><MONTH>9</MONTH><DAY>23</DAY></DATE></X><AUTHOR><FIRSTNAME>Douglas</FIRSTNAME><LASTNAME>Crockford</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>8</MONTH><DAY>27</DAY></DATE><COMMENT>Blocking I/O, Grace Hopper, why an event loop is a better design than multithreading, Node.js, how to record the session state…</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="https://www.youtube.com/watch?v=QgwSUtYSUqA"><X><T>Crockford on JavaScript - Level 7: ECMAScript 5: The New Parts</T><A>https://www.youtube.com/watch?v=UTEqr0IlFKY</A><L>en</L><F>MP4</F><DURATION><MINUTE>57</MINUTE><SECOND>19</SECOND></DURATION><DATE><YEAR>2011</YEAR><MONTH>11</MONTH><DAY>14</DAY></DATE></X><AUTHOR><FIRSTNAME>Douglas</FIRSTNAME><LASTNAME>Crockford</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>3</MONTH><DAY>29</DAY></DATE><COMMENT>A description of the new features of ECMAScript 5: strict mode, meta object API, getters and setters, JSON…</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE predecessor="https://www.youtube.com/watch?v=UTEqr0IlFKY"><X><T>Crockford on JavaScript - Section 8: Programming Style &amp; Your Brain</T><A>https://www.youtube.com/watch?v=taaEzHI9xyY</A><L>en</L><F>MP4</F><DURATION><HOUR>1</HOUR><MINUTE>6</MINUTE><SECOND>46</SECOND></DURATION><DATE><YEAR>2011</YEAR><MONTH>11</MONTH><DAY>13</DAY></DATE></X><AUTHOR><FIRSTNAME>Douglas</FIRSTNAME><LASTNAME>Crockford</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>11</MONTH><DAY>3</DAY></DATE><COMMENT>JSLint: avoiding some bugs by limiting oneself to some safe coding styles.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>Douglas Crockford: Monads and Gonads (YUIConf Evening Keynote)</T><A>https://www.youtube.com/watch?v=dkZFtimgAcM</A><L>en</L><F>MP4</F><DURATION><MINUTE>54</MINUTE><SECOND>27</SECOND></DURATION><DATE><YEAR>2012</YEAR><MONTH>12</MONTH><DAY>13</DAY></DATE></X><AUTHOR><FIRSTNAME>Douglas</FIRSTNAME><LASTNAME>Crockford</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>11</MONTH><DAY>14</DAY></DATE><COMMENT>Using Monads in JavaScript: the Identity Monad, the Ajax Monad, the Maybe Monad, the Promise Monad.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X status="zombie"><T>Douglas Crockford: The Better Parts - JSConfUY 2014</T><A>https://www.youtube.com/watch?v=bo36MrBfTk4</A><L>en</L><F>MP4</F><DURATION><HOUR>1</HOUR><MINUTE>0</MINUTE><SECOND>52</SECOND></DURATION><DATE><YEAR>2014</YEAR><MONTH>9</MONTH><DAY>4</DAY></DATE></X><AUTHOR><FIRSTNAME>Douglas</FIRSTNAME><LASTNAME>Crockford</LASTNAME></AUTHOR><DATE><YEAR>2014</YEAR><MONTH>3</MONTH><DAY>15</DAY></DATE><COMMENT>Miscellaneous ideas: JSLint, ES6, some opinion changes on some JS features, a new numerical type (DEC64), JSON…</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>The Better Parts. Douglas Crockford. JS Fest 2018</T><A>https://www.youtube.com/watch?v=XFTOG895C7c</A><L>en</L><F>MP4</F><DURATION><MINUTE>55</MINUTE><SECOND>58</SECOND></DURATION><DATE><YEAR>2019</YEAR><MONTH>8</MONTH><DAY>12</DAY></DATE></X><AUTHOR><FIRSTNAME>Douglas</FIRSTNAME><LASTNAME>Crockford</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>3</MONTH><DAY>30</DAY></DATE><COMMENT>The usual talk about the good and bad parts of JavaScript, in particular ES6.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Debuggers</TITLE>
      <ITEM><BLIST><TITLE>Firebug</TITLE>
        <ITEM><ARTICLE><X><T>Debugging and Testing the Web with Firebug</T><A>https://www.youtube.com/watch?v=7p24bC8ZR3U</A><L>en</L><F>MP4</F><DURATION><MINUTE>39</MINUTE><SECOND>53</SECOND></DURATION><DATE><YEAR>2009</YEAR><MONTH>5</MONTH><DAY>5</DAY></DATE></X><AUTHOR><FIRSTNAME>Rob</FIRSTNAME><LASTNAME>Campbell</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>5</MONTH><DAY>1</DAY></DATE><COMMENT>A presentation of the new Firebug 1.4 features and some Q&amp;A about Firebug.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>Dragonfly</TITLE>
        <ITEM><ARTICLE><X status="dead"><T>YUI Theater — Charles McCathieNevile: “Opera Dragonfly”</T><A>https://yuiblog.com/blog/2009/06/01/video-mccathienevile-dragonfly/</A><L>en</L><F>Flash Video</F><F>MP4</F><DURATION><MINUTE>18</MINUTE><SECOND>51</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Charles</FIRSTNAME><LASTNAME>McCathieNevile</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>5</MONTH><DAY>26</DAY></DATE><COMMENT>A presentation of Opera debugger. <AUTHOR><FIRSTNAME>Charles</FIRSTNAME><LASTNAME>McCathieNevile</LASTNAME></AUTHOR> proposes to standardize a "scope API" so debuggers could be cross-Browsers.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Minifiers</TITLE>
      <ITEM><ARTICLE><X><T>Yahoo YUI Compressor vs. Microsoft AJAX Minifier vs. Google Closure Compiler</T><A>https://nickberardi.com/yahoo-yui-compressor-vs-microsoft-ajax-minifier-vs-google-closure-compiler/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Nick</FIRSTNAME><LASTNAME>Berardi</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>1</MONTH><DAY>18</DAY></DATE><COMMENT>A small benchmark focused only on the size reduction.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Performance Optimizations Made By Microsoft, Google, and Yahoo JavaScript Minimizers</T><A>https://nickberardi.com/performance-optimizations-made-by-microsoft-google-and-yahoo-javascript-minimizers/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Nick</FIRSTNAME><LASTNAME>Berardi</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>1</MONTH><DAY>20</DAY></DATE><COMMENT>An analysis of the compression tricks performed by these minifiers.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="zombie"><T>Make your web applications fly</T><ST>Improve loading performance and decrease bandwidth of CSS and JavaScript code</ST><A>https://www.ibm.com/developerworks/web/library/wa-improve/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Nathan</FIRSTNAME><MIDDLENAME>A.</MIDDLENAME><LASTNAME>Good</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>10</MONTH><DAY>26</DAY></DATE><COMMENT>A very basic and detailed description of using YUI Compressor to compress JavaScript and CSS.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
  </BLIST></ITEM>
</LLIST>
</CONTENT>
<X><T>HTML</T><A>html.html</A><L>en</L><F>HTML</F></X>
</PAGE>