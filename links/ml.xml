<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../css/strict.xsl"?>
<PAGE xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../css/schema.xsd" xml:lang="en">
<TITLE>ML</TITLE>
<PATH>links/ml.xml</PATH>
<DATE><YEAR>2023</YEAR><MONTH>11</MONTH><DAY>6</DAY></DATE>
<CONTENT>
<LLIST>
  <ITEM><SLIST>
    <ITEM><BLIST><TITLE>F#</TITLE>
      <ITEM><X><T>Try F#</T><A>https://try.fsharp.org/</A><L>en</L><F>HTML</F></X></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE><ANCHOR>ocaml</ANCHOR>OCaml</TITLE>
      <ITEM><X><T>ocaml.org</T><A>https://ocaml.org/</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>source</T><A>https://github.com/ocaml</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>Awesome OCaml</T><A>https://github.com/ocaml-community/awesome-ocaml</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><BLIST><TITLE>Playgrounds</TITLE>
      <ITEM><X><T>Playground</T><A>https://ocaml.org/play</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>Try OCaml</T><A>https://try.ocamlpro.com/</A><L>en</L><F>HTML</F></X></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>Courses</TITLE>
        <ITEM><X quality="1"><T>OCaml Programming: Correct + Efficient + Beautiful</T><A>https://cs3110.github.io/textbook/cover.html</A><L>en</L><F>HTML</F></X></ITEM>
        <ITEM><X><T>Gabriel Scherer</T><A>http://gallium.inria.fr/~scherer/tmp/cours-ocaml-paris8-2020.org.html</A><L>fr</L><F>HTML</F></X></ITEM>
        <ITEM><X><T>Jean-Christophe Filliâtre</T><A>https://www.enseignement.polytechnique.fr/profs/informatique/Jean-Christophe.Filliatre/14-15/INF549/ocaml.pdf</A><L>fr</L><F>PDF</F></X></ITEM>
      </BLIST></ITEM>
      <ITEM><CLIST><TITLE><X><T>dune</T><A>https://dune.build/</A><L>en</L><F>HTML</F></X></TITLE>
        <ITEM><X><T>documentation</T><A>https://dune.readthedocs.io/en/latest/</A><L>en</L><F>HTML</F></X></ITEM>
        <ITEM><X><T>source</T><A>https://github.com/ocaml/dune</A><L>en</L><F>HTML</F></X></ITEM>
      </CLIST></ITEM>
      <ITEM><CLIST><TITLE><X><T>opam</T><A>https://opam.ocaml.org/</A><L>en</L><F>HTML</F></X></TITLE>
        <ITEM><X><T>documentation</T><A>https://opam.ocaml.org/doc/Install.html</A><L>en</L><F>HTML</F></X></ITEM>
        <ITEM><X><T>source</T><A>https://github.com/ocaml/opam</A><L>en</L><F>HTML</F></X></ITEM>
      </CLIST></ITEM>
      <ITEM><X><T>personal notes</T><A>../notes/ocaml.html</A><L>en</L><F>HTML</F></X></ITEM>
    </BLIST></ITEM>
  </SLIST></ITEM>
  <ITEM><BLIST><TITLE>Articles and videos</TITLE>
    <ITEM><BLIST><TITLE>Curry-Howard Correspondence</TITLE>
      <ITEM><ARTICLE><X><T>The Curry-Howard Correspondence</T><A>https://www.youtube.com/watch?v=GdcOy6zVFC4</A><L>en</L><F>MP4</F><DURATION><MINUTE>45</MINUTE><SECOND>32</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Michael</FIRSTNAME><MIDDLENAME>Ryan</MIDDLENAME><LASTNAME>Clarkson</LASTNAME></AUTHOR><DATE><YEAR>2021</YEAR><MONTH>8</MONTH><DAY>8</DAY></DATE><COMMENT>An introduction to <KEYWORD><KEYID>Curry–Howard correspondence</KEYID><KEYEDTEXT>Curry–Howard correspondence</KEYEDTEXT></KEYWORD>: the equivalence between types / programs / evaluation on one side and propositions / proofs / simplification on the other side.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>The Deep Link Equating Math Proofs and Computer Programs</T><ST>Mathematical logic and the code of computer programs are, in an exact way, mirror images of each other.</ST><A>https://www.quantamagazine.org/the-deep-link-equating-math-proofs-and-computer-programs-20231011/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Sheon</FIRSTNAME><LASTNAME>Han</LASTNAME></AUTHOR><DATE><YEAR>2023</YEAR><MONTH>10</MONTH><DAY>11</DAY></DATE><COMMENT>A description of the Curry-Howard correspondence with no mathematical examples.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>F#</TITLE>
      <ITEM><ARTICLE><X status="dead"><T>YUI Theater — Adam Granicz: “Robust and Rapid Web Development with WebSharper” (57 min.)</T><A>https://yuiblog.com/blog/2010/04/23/video-granicz/</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>57</MINUTE><SECOND>12</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Adam</FIRSTNAME><LASTNAME>Granicz</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>4</MONTH><DAY>21</DAY></DATE><COMMENT>A marketing presentation of WebSharper, a platform to write both the client and server sides using F#.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="removed" quality="-1"><T>An Introduction to F# with Don Syme (#1 of 4)</T><A>https://channel9.msdn.com/Blogs/David+Gristwood/An-Introduction-to-F-with-Don-Syme-1-of-4</A><L>en</L><F>Windows Media Player</F><DURATION><MINUTE>26</MINUTE><SECOND>52</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Dave</FIRSTNAME><LASTNAME>Brown</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Don</FIRSTNAME><LASTNAME>Syme</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>9</MONTH></DATE><COMMENT>A verbose presentation of the advantages of F# with no technical information, this is mostly marketing bullshit.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="removed"><T>An F# Tutorial with Don Syme (#2 of 4)</T><A>https://channel9.msdn.com/Blogs/David+Gristwood/An-F-Tutorial-with-Don-Syme-2-of-4</A><L>en</L><F>Windows Media Player</F><DURATION><MINUTE>26</MINUTE><SECOND>46</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Dave</FIRSTNAME><LASTNAME>Brown</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Don</FIRSTNAME><LASTNAME>Syme</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>9</MONTH></DATE><COMMENT>Some simple code samples to discover F#.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="removed"><T>F# and Windows Azure with Don Syme (#3 of 4)</T><A>https://channel9.msdn.com/Blogs/David+Gristwood/F-and-Windows-Azure-with-Don-Syme-3-of-4</A><L>en</L><F>Windows Media Player</F><DURATION><MINUTE>19</MINUTE><SECOND>40</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Dave</FIRSTNAME><LASTNAME>Brown</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Don</FIRSTNAME><LASTNAME>Syme</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>9</MONTH></DATE><COMMENT>A presentation of the asynchronous features of F# used to build a Web service provider.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="removed"><T>F# in use at Microsoft Research (#4 of 4)</T><A>https://channel9.msdn.com/Blogs/David+Gristwood/F-in-use-at-Microsoft-Research-4-of-4</A><L>en</L><F>Windows Media Player</F><DURATION><MINUTE>40</MINUTE><SECOND>50</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Dave</FIRSTNAME><LASTNAME>Brown</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>David</FIRSTNAME><LASTNAME>Stern</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Jurgen</FIRSTNAME><LASTNAME>van Gael</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Anton</FIRSTNAME><LASTNAME>Schwaighofer</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Thore</FIRSTNAME><LASTNAME>Graepel</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Joaquin</FIRSTNAME><MIDDLENAME>Quiñonrero</MIDDLENAME><LASTNAME>Candela</LASTNAME></AUTHOR><DATE><YEAR>2010</YEAR><MONTH>9</MONTH></DATE><COMMENT>Three project (analysis of Twitter feeds, Bing’s AdPredictor, and a Go game) explain why they have chosen F#.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>F# Tools and Resources</T><A>https://learn.microsoft.com/en-us/archive/msdn-magazine/2011/april/msdn-magazine-toolbox-fsharp-tools-and-resources</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Terrence</FIRSTNAME><LASTNAME>Dorsey</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>4</MONTH></DATE><COMMENT>F# tools, books, blogs…</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Fun(ctional) Domain Driven Design (featuring Ukulele) (Jérémie CHASSAING)</T><A>https://www.youtube.com/watch?v=TLKtbm8NsPg</A><L>fr</L><F>MP4</F><DURATION><MINUTE>45</MINUTE><SECOND>46</SECOND></DURATION><DATE><YEAR>2023</YEAR><MONTH>4</MONTH><DAY>26</DAY></DATE></X><AUTHOR><FIRSTNAME>Jérémie</FIRSTNAME><LASTNAME>Chassaing</LASTNAME></AUTHOR><DATE><YEAR>2023</YEAR><MONTH>4</MONTH><DAY>13</DAY></DATE><COMMENT>A demo of writing some methods related to music theory.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>OCaml</TITLE>
      <ITEM><ARTICLE><X><T>Why OCaml</T><A>https://www.youtube.com/watch?v=v1CmGbOGb2I</A><L>en</L><F>MP4</F><DURATION><HOUR>1</HOUR><MINUTE>6</MINUTE><SECOND>39</SECOND></DURATION><DATE><YEAR>2016</YEAR><MONTH>3</MONTH><DAY>31</DAY></DATE></X><AUTHOR><FIRSTNAME>Yaron</FIRSTNAME><LASTNAME>Minsky</LASTNAME></AUTHOR><DATE><YEAR>2015</YEAR><MONTH>6</MONTH></DATE><COMMENT>A short presentation of OCaml characteristics and why Jane Street chose it.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Custom operators in OCaml</T><A>https://blog.shaynefletcher.org/2016/09/custom-operators-in-ocaml.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Shayne</FIRSTNAME><LASTNAME>Fletcher</LASTNAME></AUTHOR><DATE><YEAR>2016</YEAR><MONTH>9</MONTH><DAY>20</DAY></DATE><COMMENT>How to define infix and prefix operators.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>OCaml 5 With Multicore Support Is Here!</T><A>https://tarides.com/blog/2022-12-19-ocaml-5-with-multicore-support-is-here/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Christine</FIRSTNAME><LASTNAME>Rose</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>12</MONTH><DAY>19</DAY></DATE><COMMENT>A short announcement of OCaml 5.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Building the OCaml GPT library</T><A>https://medium.com/@playersrebirth/building-the-ocaml-gpt-library-650c00b4d72b</A><L>en</L><F>HTML</F></X><AUTHOR><GIVENNAME>PizieDust</GIVENNAME></AUTHOR><DATE><YEAR>2023</YEAR><MONTH>8</MONTH><DAY>22</DAY></DATE><COMMENT>An overview of using dune for a project, but this is too high-level to be really useful.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>WebAssembly Support for OCaml: Introducing Wasm_of_Ocaml</T><A>https://tarides.com/blog/2023-11-01-webassembly-support-for-ocaml-introducing-wasm-of-ocaml/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Isabella</FIRSTNAME><LASTNAME>Leandersson</LASTNAME></AUTHOR><DATE><YEAR>2023</YEAR><MONTH>11</MONTH><DAY>1</DAY></DATE><COMMENT>The projects to port OCaml to Wasm and, in particular <CODEROUTINE>wasm_of_ocaml</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>ReasonML</TITLE>
      <ITEM><ARTICLE><X quality="-1"><T>X Marks the Spot (Part 1): ReasonML</T><A>https://8thlight.com/insights/x-marks-the-spot-part-1-reasonml</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Chris</FIRSTNAME><LASTNAME>Wilson</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>3</MONTH><DAY>19</DAY></DATE><COMMENT>An unclear presentation of ReasonML.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE predecessor="https://8thlight.com/insights/x-marks-the-spot-part-1-reasonml"><X quality="-1"><T>X Marks the Spot (Part 2): ReasonReact</T><A>https://8thlight.com/insights/x-marks-the-spot-part-2-reasonreact</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Chris</FIRSTNAME><LASTNAME>Wilson</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>4</MONTH><DAY>9</DAY></DATE><COMMENT>This description of ReasonReact, a Reason library for React, is also difficult to understand.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
  </BLIST></ITEM>
</LLIST>
</CONTENT>
</PAGE>