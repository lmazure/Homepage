<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../css/strict.xsl"?>
<PAGE xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../css/schema.xsd" xml:lang="en">
<TITLE>Configuration management</TITLE>
<PATH>links/scm.xml</PATH>
<DATE><YEAR>2024</YEAR><MONTH>7</MONTH><DAY>31</DAY></DATE>
<CONTENT>
<LLIST>
  <ITEM><SLIST>
    <ITEM><BLIST><TITLE><ANCHOR>clearcase</ANCHOR>ClearCase</TITLE>
      <ITEM><X><T>Rational</T><A>https://www.ibm.com/products/devops-code-clearcase</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>personal notes</T><A>../notes/clcase.htm</A><L>en</L><F>HTML</F></X></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE><ANCHOR>cvs</ANCHOR><X status="obsolete"><T>CVS</T><A>https://cvs.nongnu.org/</A><L>en</L><F>HTML</F></X></TITLE>
      <ITEM><X><T>tkcvs</T><A>https://tkcvs.sourceforge.io/</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>personal notes</T><A>../notes/cvs.html</A><L>en</L><F>HTML</F></X></ITEM>
    </BLIST></ITEM>
    <ITEM><X status="obsolete"><T>RCS</T><A>https://www.cs.purdue.edu/homes/trinkle/RCShome/</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X status="obsolete"><T>CSSC</T><A>https://www.gnu.org/software/cssc/</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X><T>BitKeeper</T><A>https://www.bitkeeper.org/</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><BLIST><TITLE><ANCHOR>svn</ANCHOR><X><T>subversion</T><A>https://subversion.apache.org/</A><L>en</L><F>HTML</F></X></TITLE>
      <ITEM><X><T>TortoiseSVN</T><A>https://tortoisesvn.net/</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>VisualSVN</T><A>https://www.visualsvn.com</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>personal notes</T><A>../notes/svn.html</A><L>en</L><F>HTML</F></X></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE><ANCHOR>git</ANCHOR><X><T>Git</T><A>https://git-scm.com/</A><L>en</L><F>HTML</F></X></TITLE>
      <ITEM><BLIST><TITLE>Doc</TITLE>
          <ITEM><CLIST><TITLE><X><T>documentation</T><A>https://git-scm.com/doc</A><L>en</L><F>HTML</F></X></TITLE>
          <ITEM><X><T>glossary</T><A>https://git-scm.com/docs/gitglossary/</A><L>en</L><F>HTML</F></X></ITEM>
        </CLIST></ITEM>
        <ITEM><X><T>Pro Git</T><A>https://git-scm.com/book/en/v2</A><L>en</L><F>HTML</F></X></ITEM>
        <ITEM><X><T>visual cheatsheet</T><A>http://ndpsoftware.com/git-cheatsheet.html</A><L>en</L><F>HTML</F></X></ITEM>
        <ITEM><X><T>GitLab cheatsheet</T><A>https://about.gitlab.com/images/press/git-cheat-sheet.pdf</A><L>en</L><F>PDF</F></X></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>Clients</TITLE>
        <ITEM><X><T>Git for Windows</T><A>https://gitforwindows.org/</A><L>en</L><F>HTML</F></X></ITEM>
        <ITEM><X><T>DeepGit</T><A>https://www.syntevo.com/deepgit/</A><L>en</L><F>HTML</F></X></ITEM>
        <ITEM><X><T>git-hyper-blame</T><A>https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/git-hyper-blame.html</A><L>en</L><F>HTML</F></X></ITEM>
        <ITEM><X><T>SourceTree</T><A>https://www.sourcetreeapp.com</A><L>en</L><F>HTML</F></X></ITEM>
        <ITEM><X><T>GitButler</T><A>https://gitbutler.com/</A><L>en</L><F>HTML</F></X></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>Servers</TITLE>
        <ITEM><X><T>Gogs</T><A>https://gogs.io/</A><L>en</L><F>HTML</F></X></ITEM>
        <ITEM><X><T>Gitea</T><A>https://about.gitea.com/</A><L>en</L><F>HTML</F></X></ITEM>
      </BLIST></ITEM>
      <ITEM><CLIST><TITLE>Hook management</TITLE>
        <ITEM><X><T>pre-commit</T><A>https://pre-commit.com/</A><L>en</L><F>HTML</F></X></ITEM>
        <ITEM><X><T>Husky</T><A>https://typicode.github.io/husky/</A><L>en</L><F>HTML</F></X></ITEM>
      </CLIST></ITEM>
      <ITEM><X><T>Conventional Commits</T><A>https://www.conventionalcommits.org/en/v1.0.0/</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>Karma Git Commit Msg</T><A>https://karma-runner.github.io/latest/dev/git-commit-msg.html</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>personal notes</T><A>../notes/git.html</A><L>en</L><F>HTML</F></X></ITEM>
    </BLIST></ITEM>
    <ITEM><X status="obsolete"><T>Aegis</T><A>https://sourceforge.net/projects/aegis/</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X status="obsolete"><T>Arch</T><A>https://www.gnu.org/software/gnu-arch/</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X status="obsolete"><T>monotone</T><A>https://www.monotone.ca/</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X><T>Perforce</T><A>https://www.perforce.com/</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X status="obsolete"><T>ArX</T><A>https://www.nongnu.org/arx/</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X status="obsolete"><T>CVSNT</T><A>https://www.march-hare.com/cvspro/</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X><T>Darcs</T><A>https://darcs.net/</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X><T>mercurial</T><A>https://www.mercurial-scm.org/</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X><T>Dimensions CM</T><A>https://www.opentext.com/products/dimensions-cm</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><BLIST><TITLE><ANCHOR>tfs</ANCHOR>TFS</TITLE>
      <ITEM><X><T>personal notes</T><A>../notes/tfs.html</A><L>en</L><F>HTML</F></X></ITEM>
    </BLIST></ITEM>
    <ITEM><X><T>Pijul</T><A>https://pijul.org/</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><CLIST><TITLE>Comparisons</TITLE>
      <ITEM><X status="obsolete" quality="1"><T>Better SCM</T><A>http://better-scm.shlomifish.org</A><L>en</L><F>HTML</F></X></ITEM>
    </CLIST></ITEM>
  </SLIST></ITEM>
  <ITEM><BLIST><TITLE>Articles and videos</TITLE>
    <ITEM><ARTICLE><X status="removed"><T>The New Breed of Version Control Systems</T><A>http://www.onlamp.com/pub/a/onlamp/2004/01/29/scm_overview.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Shlomi</FIRSTNAME><LASTNAME>Fish</LASTNAME></AUTHOR><DATE><YEAR>2004</YEAR><MONTH>1</MONTH><DAY>29</DAY></DATE><COMMENT>A short description of the current open source version control systems.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Comments on Open Source Software / Free Software (OSS/FS) Software Configuration Management (SCM) / Revision-Control Systems</T><A>https://dwheeler.com/essays/scm.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>David</FIRSTNAME><MIDDLENAME>A.</MIDDLENAME><LASTNAME>Wheeler</LASTNAME></AUTHOR><DATE><YEAR>2005</YEAR><MONTH>5</MONTH><DAY>18</DAY></DATE><COMMENT>A good overview of the current source management tools.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Code Health: Providing Context with Commit Messages and Bug Reports</T><A>https://testing.googleblog.com/2017/09/code-health-providing-context-with.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Chris</FIRSTNAME><LASTNAME>Lewis</LASTNAME></AUTHOR><DATE><YEAR>2017</YEAR><MONTH>9</MONTH><DAY>11</DAY></DATE><COMMENT>The title says it all: writing informative commit comments and bug reports will help the future developers understand the code changes.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Beyond Git: The other version control systems developers use</T><ST>Our developer survey found 93% of developers use Git. But what are the other 7% using?</ST><A>https://stackoverflow.blog/2023/01/09/beyond-git-the-other-version-control-systems-developers-use/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Ryan</FIRSTNAME><LASTNAME>Donovan</LASTNAME></AUTHOR><DATE><YEAR>2023</YEAR><MONTH>1</MONTH><DAY>9</DAY></DATE><COMMENT>The current status of version control systems with some information about Subversion, Mercurial, Perforce, and TFVC.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X quality="-1"><T>Pijul: Version-Control Post-Git • Pierre-Étienne Meunier • GOTO 2023</T><A>https://www.youtube.com/watch?v=7MpdZkGj5AI</A><L>en</L><F>MP4</F><DURATION><MINUTE>50</MINUTE><SECOND>11</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Pierre-Étienne</FIRSTNAME><LASTNAME>Meunier</LASTNAME></AUTHOR><DATE><YEAR>2023</YEAR><MONTH>7</MONTH><DAY>11</DAY></DATE><COMMENT>A list of technical or theoretical details, but there is no real presentation of Pijul use.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>3 Key Version Control Mistakes (HUGE STEP BACKWARDS)</T><A>https://www.youtube.com/watch?v=LGX_i-4BHG0</A><L>en</L><F>MP4</F><DURATION><MINUTE>15</MINUTE><SECOND>7</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Dave</FIRSTNAME><LASTNAME>Farley</LASTNAME></AUTHOR><DATE><YEAR>2024</YEAR><MONTH>6</MONTH><DAY>26</DAY></DATE><COMMENT>Not versionning the definition of the versions of the system components, no versionning control because using low-code or no-code tools, and AI tools not working incrementally.</COMMENT></ARTICLE></ITEM>
    <ITEM><BLIST><TITLE>Branch management</TITLE>
      <ITEM><ARTICLE><X><T>Microsoft’s Branching and Merging Guidelines</T><A>https://www.infoq.com/news/2012/04/Branching-Guide/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jonathan</FIRSTNAME><LASTNAME>Allen</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>4</MONTH><DAY>23</DAY></DATE><COMMENT>Microsoft released a guide on branch management.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Patterns for Managing Source Code Branches</T><A>https://martinfowler.com/articles/branching-patterns.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Martin</FIRSTNAME><LASTNAME>Fowler</LASTNAME></AUTHOR><DATE><YEAR>2020</YEAR><MONTH>5</MONTH><DAY>28</DAY></DATE><COMMENT>A description and analysis of the several ways used to manage source code branches.</COMMENT></ARTICLE></ITEM>
      <ITEM><BLIST><TITLE>Gitflow</TITLE>
        <ITEM><ARTICLE><X><T>Gitflow Workflow</T><A>https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow</A><L>en</L><F>HTML</F></X><COMMENT>Yet another description of git-flow, this one describes how to use the git-flow toolset.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X quality="1"><T>A successful Git branching model</T><A>https://nvie.com/posts/a-successful-git-branching-model/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Vincent</FIRSTNAME><LASTNAME>Driessen</LASTNAME></AUTHOR><DATE><YEAR>2020</YEAR><MONTH>3</MONTH><DAY>5</DAY></DATE><COMMENT>The historical well-known description of git-flow.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>CVS</TITLE>
      <ITEM><ARTICLE><X><T>Open Source Development with CVS</T><A>http://cvsbook.red-bean.com/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Karl</FIRSTNAME><LASTNAME>Fogel</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Moshe</FIRSTNAME><LASTNAME>Bar</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>7</MONTH></DATE><COMMENT>A free book teaching CVS.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Subversion</TITLE>
      <ITEM><ARTICLE><X status="removed"><T>Single-User Subversion</T><A>http://www.onlamp.com/pub/a/onlamp/2002/10/31/subversion.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Rafael</FIRSTNAME><LASTNAME>Garcia-Suarez</LASTNAME></AUTHOR><DATE><YEAR>2002</YEAR><MONTH>10</MONTH><DAY>31</DAY></DATE><COMMENT>An introduction to Subversion.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Using and hacking Subclipse - the Subversion plugin for Eclipse</T><A>https://www.oracle.com/technical-resources/articles/enterprise-architecture/subclipse.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Eugene</FIRSTNAME><LASTNAME>Kuleshov</LASTNAME></AUTHOR><DATE><YEAR>2005</YEAR><MONTH>11</MONTH><DAY>30</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Installation de Subversion sur Windows</T><A>https://ericreboisson.developpez.com/tutoriels/install-subversion/</A><L>fr</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Eric</FIRSTNAME><LASTNAME>Reboisson</LASTNAME></AUTHOR><DATE><YEAR>2008</YEAR><MONTH>4</MONTH><DAY>1</DAY></DATE><COMMENT>Installing Subversion, the Windows service, and TortoiseSVN.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Git</TITLE>
      <ITEM><ARTICLE><X><T>Git Prune</T><A>https://www.atlassian.com/git/tutorials/git-prune</A><L>en</L><F>HTML</F></X><COMMENT>Some information about (not) using <CODEROUTINE>git prune</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Git Magic</T><A>http://www-cs-students.stanford.edu/~blynn/gitmagic/index.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Ben</FIRSTNAME><LASTNAME>Lynn</LASTNAME></AUTHOR><DATE><YEAR>2007</YEAR><MONTH>8</MONTH></DATE><COMMENT>A Git recipe book.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Git</T><A>https://www.youtube.com/watch?v=8dhZ9BXQgc4</A><L>en</L><F>MP4</F><DURATION><MINUTE>59</MINUTE><SECOND>48</SECOND></DURATION><DATE><YEAR>2007</YEAR><MONTH>10</MONTH><DAY>26</DAY></DATE></X><AUTHOR><FIRSTNAME>Randal</FIRSTNAME><MIDDLENAME>L.</MIDDLENAME><LASTNAME>Schwartz</LASTNAME></AUTHOR><DATE><YEAR>2007</YEAR><MONTH>10</MONTH><DAY>12</DAY></DATE><COMMENT>A presentation of Git, but this goes too fast, <AUTHOR><FIRSTNAME>Randal</FIRSTNAME><MIDDLENAME>L.</MIDDLENAME><LASTNAME>Schwartz</LASTNAME></AUTHOR> tries to say too many things in too little time.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="dead"><T>YUI Theater — Tom Preston-Werner, Chris Wanstrath and Scott Chacon: "Git, GitHub and Social Coding"</T><A>https://yuiblog.com/blog/2009/09/29/video-github/</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>8</MINUTE><SECOND>19</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Tom</FIRSTNAME><LASTNAME>Preston-Werner</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Chris</FIRSTNAME><LASTNAME>Wanstrath</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Scott</FIRSTNAME><LASTNAME>Chacon</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>7</MONTH><DAY>2</DAY></DATE><COMMENT>A presentation of Git and GitHub: how to organise the repositories, some tips and tricks…</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="removed"><T>Git changes the game of distributed Web development</T><ST>Modern version control systems provide powerful support for collaboration</ST><A>https://www.ibm.com/developerworks/linux/library/wa-git/index.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>William</FIRSTNAME><LASTNAME>von Hagen</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>8</MONTH><DAY>25</DAY></DATE><COMMENT>A (too) short introduction to Git.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Mind the End of Your Line</T><A>https://adaptivepatchwork.com/2012/03/01/mind-the-end-of-your-line/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Tom</FIRSTNAME><LASTNAME>Clem</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>3</MONTH><DAY>1</DAY></DATE><COMMENT>A description of Git mechanisms to handle newlines.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="removed"><T>Introducing Git Version Control into Your Team</T><A>https://channel9.msdn.com/Events/Patterns-Practices-Symposium-Online/pattern-practices-symposium-2013/Introducing-Git-Version-Control-into-Your-Team</A><L>en</L><F>Windows Media Player</F><DURATION><MINUTE>53</MINUTE><SECOND>52</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Mark</FIRSTNAME><LASTNAME>Groves</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>1</MONTH><DAY>17</DAY></DATE><COMMENT>Yet another introduction to Git. This one is rather good. It also gives a few tips for those working with TFS and wanting to use Git.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>GIT-SVN comment survivre dans un environnement hostile</T><A>https://code-troopers.com/2015/07/16/gitsvn/</A><L>fr</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Florian</FIRSTNAME><LASTNAME>Chauveau</LASTNAME></AUTHOR><DATE><YEAR>2015</YEAR><MONTH>7</MONTH><DAY>16</DAY></DATE><COMMENT>A presentation of <CODEROUTINE>git svn</CODEROUTINE> to synchronise a Subversion repository and a Git repository.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="zombie"><T>A Better Git Blame</T><A>https://slacker.ro/2016/02/07/a-better-git-blame/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Andrew</FIRSTNAME><LASTNAME>Ray</LASTNAME></AUTHOR><DATE><YEAR>2016</YEAR><MONTH>2</MONTH><DAY>7</DAY></DATE><COMMENT>Using <CODEROUTINE>git log -p -M --follow --stat -- file</CODEROUTINE> to find who is the author of some code.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Screencast : trouvez un commit avec git-bisect</T><A>https://www.youtube.com/watch?v=842RnLfqb3g</A><L>fr</L><F>MP4</F><DURATION><MINUTE>6</MINUTE><SECOND>15</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Alexandre</FIRSTNAME><LASTNAME>Dergham</LASTNAME></AUTHOR><DATE><YEAR>2016</YEAR><MONTH>4</MONTH><DAY>5</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Clean GIT history — a Step by Step Guide</T><A>https://medium.com/@catalinaturlea/clean-git-history-a-step-by-step-guide-eefc0ad8696d</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Catalina</FIRSTNAME><LASTNAME>Turlea</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>6</MONTH><DAY>12</DAY></DATE><COMMENT>Some advice to have a cleaner Git history, but the description could be clearer.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Supercharging the Git Commit Graph</T><A>https://devblogs.microsoft.com/devops/supercharging-the-git-commit-graph/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Derrick</FIRSTNAME><LASTNAME>Stolee</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>6</MONTH><DAY>25</DAY></DATE><COMMENT>Microsoft contributed Commit-Graph that improves performance of some commands on large repositories.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE predecessor="https://devblogs.microsoft.com/devops/supercharging-the-git-commit-graph/"><X><T>Supercharging the Git Commit Graph II: File Format</T><A>https://devblogs.microsoft.com/devops/supercharging-the-git-commit-graph-ii-file-format/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Derrick</FIRSTNAME><LASTNAME>Stolee</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>7</MONTH><DAY>2</DAY></DATE><COMMENT>A description of the structure of Commit-Graph files and of some small performance improvements.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE predecessor="https://devblogs.microsoft.com/devops/supercharging-the-git-commit-graph-ii-file-format/"><X><T>Supercharging the Git Commit Graph III: Generations and Graph Algorithms</T><A>https://devblogs.microsoft.com/devops/supercharging-the-git-commit-graph-iii-generations/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Derrick</FIRSTNAME><LASTNAME>Stolee</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>7</MONTH><DAY>9</DAY></DATE><COMMENT>How generation numbers can be used to optimise the use of the Commit-Graph.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE predecessor="https://devblogs.microsoft.com/devops/supercharging-the-git-commit-graph-iii-generations/"><X><T>Supercharging the Git Commit Graph IV: Bloom Filters</T><A>https://devblogs.microsoft.com/devops/super-charging-the-git-commit-graph-iv-bloom-filters/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Derrick</FIRSTNAME><LASTNAME>Stolee</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>7</MONTH><DAY>16</DAY></DATE><COMMENT>A description of <KEYWORD><KEYID>Bloom filter</KEYID><KEYEDTEXT>Bloom filters</KEYEDTEXT></KEYWORD> and how they can accelerate the extraction of the list of commits impacting a file.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Git MERGE vs REBASE</T><A>https://www.youtube.com/watch?v=CRlGDDprdOQ</A><L>en</L><F>MP4</F><DURATION><MINUTE>16</MINUTE><SECOND>11</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Manuel</FIRSTNAME><LASTNAME>Lorenz</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>9</MONTH><DAY>6</DAY></DATE><COMMENT>A basic description of the difference between <CODEROUTINE>merge</CODEROUTINE> and <CODEROUTINE>rebase</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Git power tools for daily use</T><A>https://nvie.com/posts/git-power-tools/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Vincent</FIRSTNAME><LASTNAME>Driessen</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>11</MONTH><DAY>8</DAY></DATE><COMMENT><AUTHOR><FIRSTNAME>Vincent</FIRSTNAME><LASTNAME>Driessen</LASTNAME></AUTHOR> presents some of his Git scripts.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>🌳🚀 CS Visualized: Useful Git Commands</T><A>https://dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Lydia</FIRSTNAME><LASTNAME>Hallie</LASTNAME></AUTHOR><DATE><YEAR>2020</YEAR><MONTH>4</MONTH><DAY>1</DAY></DATE><COMMENT>Visualisations of some Git basic commands.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>3 Ways to Fix Git Clone "Filename too long" Error in Windows [Fixed]</T><A>https://www.javaprogramto.com/2020/04/git-filename-too-long.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Venkatesh</FIRSTNAME></AUTHOR><DATE><YEAR>2020</YEAR><MONTH>4</MONTH><DAY>6</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>15 Git tips to improve your workflow</T><A>https://about.gitlab.com/blog/2020/04/07/15-git-tips-improve-workflow/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Suri</FIRSTNAME><LASTNAME>Patel</LASTNAME></AUTHOR><DATE><YEAR>2020</YEAR><MONTH>4</MONTH><DAY>7</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Git Worktrees: The Best Git Feature You’ve Never Heard Of</T><A>https://levelup.gitconnected.com/git-worktrees-the-best-git-feature-youve-never-heard-of-9cd21df67baf</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>James</FIRSTNAME><LASTNAME>Pulec</LASTNAME></AUTHOR><DATE><YEAR>2020</YEAR><MONTH>4</MONTH><DAY>28</DAY></DATE><COMMENT>A short presentation of worktrees and their advantages.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X quality="-1"><T>GitHub vs Bitbucket vs GitLab : une bataille épique pour l’esprit de développeur</T><A>https://www.hebergeurcloud.com/github-vs-bitbucket-vs-gitlab-une-bataille-epique-pour-lesprit-de-developpeur/</A><L>fr</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Aina</FIRSTNAME><LASTNAME>Strauss</LASTNAME></AUTHOR><DATE><YEAR>2020</YEAR><MONTH>9</MONTH><DAY>23</DAY></DATE><COMMENT>An unclear comparison of the three tools.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X quality="1"><T>Get up to speed with partial clone and shallow clone</T><A>https://github.blog/2020-12-21-get-up-to-speed-with-partial-clone-and-shallow-clone/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Derrick</FIRSTNAME><LASTNAME>Stolee</LASTNAME></AUTHOR><DATE><YEAR>2020</YEAR><MONTH>12</MONTH><DAY>21</DAY></DATE><COMMENT>A description of blobless clones, treeless clones, shallow clones, and when to use them.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Git Maintenance</T><A>https://www.alchemists.io/articles/git_maintenance</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Brooke</FIRSTNAME><LASTNAME>Kuhlmann</LASTNAME></AUTHOR><DATE><YEAR>2021</YEAR><MONTH>3</MONTH><DAY>20</DAY></DATE><COMMENT>A presentation of <CODEROUTINE>git maintenance</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X quality="-1"><T>A look under the hood: how branches work in Git</T><ST>Git branches allow you to keep different versions of your code cleanly separated. Here's a look at how they work and why you should know about them.</ST><A>https://stackoverflow.blog/2021/04/05/a-look-under-the-hood-how-branches-work-in-git/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Tobias</FIRSTNAME><LASTNAME>Günther</LASTNAME></AUTHOR><DATE><YEAR>2021</YEAR><MONTH>4</MONTH><DAY>5</DAY></DATE><COMMENT>This article is strange: on one side, it describes the basics of why branches are useful; on the other side, it gives some technical details of how Git implements branches; but it does not explain the Git commands used to manage branches.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Git Force vs Force with Lease</T><ST>And When to Use Them</ST><A>https://itnext.io/git-force-vs-force-with-lease-9d0e753e8c41</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Mohammad-Ali</FIRSTNAME><LASTNAME>A’Râbi</LASTNAME></AUTHOR><DATE><YEAR>2021</YEAR><MONTH>8</MONTH><DAY>12</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>13 Advanced (but useful) Git Techniques and Shortcuts</T><A>https://www.youtube.com/watch?v=ecK3EnyGD8o</A><L>en</L><F>MP4</F><DURATION><MINUTE>8</MINUTE><SECOND>6</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Jeff</FIRSTNAME><LASTNAME>Delaney</LASTNAME></AUTHOR><DATE><YEAR>2021</YEAR><MONTH>9</MONTH><DAY>7</DAY></DATE><COMMENT>Some not so-well-known Git commands.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>10 Must Know Git Commands That Almost Nobody Knows</T><A>https://www.youtube.com/watch?v=mnmYwRoSisg</A><L>en</L><F>MP4</F><DURATION><MINUTE>15</MINUTE><SECOND>22</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Kyle</FIRSTNAME><LASTNAME>Cook</LASTNAME></AUTHOR><DATE><YEAR>2021</YEAR><MONTH>10</MONTH><DAY>19</DAY></DATE><COMMENT>The title is misleading, the described commands are rather well-known. Anyway, it is true that it is worthwhile to know them.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Curly Braces #1: Java and a project monorepo</T><ST>In his debut Java Magazine column, Eric Bruno explores the benefits of keeping all your project elements in a single Git repository.</ST><A>https://blogs.oracle.com/javamagazine/post/curly-braces-java-git-monorepo</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Eric</FIRSTNAME><MIDDLENAME>J.</MIDDLENAME><LASTNAME>Bruno</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>1</MONTH><DAY>21</DAY></DATE><COMMENT>The pros and cons to use a monorepo and how to structure the POM files in this case.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Protect secrets in Git with the clean/smudge filter</T><A>https://developers.redhat.com/articles/2022/02/02/protect-secrets-git-cleansmudge-filter</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Tomer</FIRSTNAME><LASTNAME>Figenblat</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>2</MONTH><DAY>2</DAY></DATE><COMMENT>How to define a clean/smudge filter in Git config.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Inside the Hidden Git Folder - Computerphile</T><A>https://www.youtube.com/watch?v=bSA91XTzeuA</A><L>en</L><F>MP4</F><DURATION><MINUTE>8</MINUTE><SECOND>32</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Max</FIRSTNAME><LASTNAME>Wilson</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>2</MONTH><DAY>11</DAY></DATE><COMMENT>A basic description of the <CODEFILENAME>.git</CODEFILENAME> folder.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE predecessor="https://www.youtube.com/watch?v=bSA91XTzeuA"><X quality="-1"><T>Git Version Control _final_new_final.new - Computerphile</T><A>https://www.youtube.com/watch?v=lJu5xwbGgRk</A><L>en</L><F>MP4</F><DURATION><MINUTE>6</MINUTE><SECOND>57</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Max</FIRSTNAME><LASTNAME>Wilson</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>2</MONTH><DAY>25</DAY></DATE><COMMENT>A much too simplified description of tags and branches.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE predecessor="https://www.youtube.com/watch?v=lJu5xwbGgRk"><X quality="-1"><T>Teamwork &amp; Git - Computerphile</T><A>https://www.youtube.com/watch?v=RzYJvSnzlMk</A><L>en</L><F>MP4</F><DURATION><MINUTE>9</MINUTE><SECOND>52</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Max</FIRSTNAME><LASTNAME>Wilson</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>3</MONTH><DAY>25</DAY></DATE><COMMENT>A quick description of the features of Git and GitHub/GitLab to manage team work.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Improve Git monorepo performance with a file system monitor</T><ST>Monorepo performance can suffer due to the sheer number of files in your working directory. Git’s new builtin file system monitor makes it easy to speed up monorepo performance.</ST><A>https://github.blog/2022-06-29-improve-git-monorepo-performance-with-a-file-system-monitor/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jeff</FIRSTNAME><LASTNAME>Hostetler</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>6</MONTH><DAY>29</DAY></DATE><COMMENT>A description of the performance improvements enabled by Git’s FSMonitor.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Write Better Commits, Build Better Projects</T><ST>High-quality Git commits are the key to a maintainable and collaborative open- or closed-source project. Learn strategies to improve and use commits to streamline your development process.</ST><A>https://github.blog/2022-06-30-write-better-commits-build-better-projects/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Victoria</FIRSTNAME><LASTNAME>Dye</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>6</MONTH><DAY>30</DAY></DATE><COMMENT><AUTHOR><FIRSTNAME>Victoria</FIRSTNAME><LASTNAME>Dye</LASTNAME></AUTHOR> suggests to rewrite the Git history to simplify code reviews and later analysis. But doing this as far as in her example is unlikely to be worthwhile.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X quality="1"><T>Git’s database internals I: packed object store</T><ST>This blog series will examine Git’s internals to help make your engineering system more efficient. Part I discusses how Git stores its data in packfiles using custom compression techniques.</ST><A>https://github.blog/2022-08-29-gits-database-internals-i-packed-object-store/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Derrick</FIRSTNAME><LASTNAME>Stolee</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>8</MONTH><DAY>29</DAY></DATE><COMMENT>A description of the object store, the reference store, and the packfiles.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE predecessor="https://github.blog/2022-08-29-gits-database-internals-i-packed-object-store/"><X quality="1"><T>Git’s database internals II: commit history queries</T><ST>This post explores Git commit history as a database where ‘git log’ is the query language. Learn about Git’s custom query index – the commit-graph file – and how to make sure it's enabled in your repositories.</ST><A>https://github.blog/2022-08-30-gits-database-internals-ii-commit-history-queries/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Derrick</FIRSTNAME><LASTNAME>Stolee</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>8</MONTH><DAY>30</DAY></DATE><COMMENT>A description of the commit-graph and generation numbers, and how they are used. (<AUTHOR><FIRSTNAME>Derrick</FIRSTNAME><LASTNAME>Stolee</LASTNAME></AUTHOR> already explained this in some previous articles.)</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE predecessor="https://github.blog/2022-08-30-gits-database-internals-ii-commit-history-queries/"><X quality="1"><T>Git’s database internals III: file history queries</T><ST>Git’s file history queries use specialized algorithms that are tailored to common developer behavior. Level up your history spelunking skills by learning how different history modes behave and which ones to use when you need them.</ST><A>https://github.blog/2022-08-31-gits-database-internals-iii-file-history-queries/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Derrick</FIRSTNAME><LASTNAME>Stolee</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>8</MONTH><DAY>31</DAY></DATE><COMMENT>A description of some <CODEROUTINE>git log</CODEROUTINE> options: <CODEROUTINE>--show-pulls</CODEROUTINE>, <CODEROUTINE>--full-history</CODEROUTINE>, <CODEROUTINE>--full-history</CODEROUTINE>, and <CODEROUTINE>-L</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE predecessor="https://github.blog/2022-08-31-gits-database-internals-iii-file-history-queries/"><X quality="1"><T>Git’s database internals IV: distributed synchronization</T><ST>We're examining Git’s internals to help make your engineering system more efficient. This post views Git as a distributed database and looks into its synchronization techniques, specifically ‘git fetch’ and ‘git push’.</ST><A>https://github.blog/2022-09-01-gits-database-internals-iv-distributed-synchronization/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Derrick</FIRSTNAME><LASTNAME>Stolee</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>9</MONTH><DAY>1</DAY></DATE><COMMENT>The algorithms used by <CODEROUTINE>git fetch</CODEROUTINE> and <CODEROUTINE>git push</CODEROUTINE>, including the reachability bitmaps.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE predecessor="https://github.blog/2022-09-01-gits-database-internals-iv-distributed-synchronization/"><X quality="1"><T>Git’s database internals V: scalability</T><ST>This fifth and final part of our blog series exploring Git's internals shows several strategies for scaling your Git repositories that match related database sharding techniques.</ST><A>https://github.blog/2022-09-02-gits-database-internals-v-scalability/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Derrick</FIRSTNAME><LASTNAME>Stolee</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>9</MONTH><DAY>2</DAY></DATE><COMMENT>Multi-repos, submodules, using an archived repository possibly configuring it as a Git alternate and as the commit root of the new repository, and blobless clones.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Scaling Git’s garbage collection</T><ST>A tour of recent work to re-engineer Git’s garbage collection process to scale to our largest and most active repositories.</ST><A>https://github.blog/2022-09-13-scaling-gits-garbage-collection/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Taylor</FIRSTNAME><LASTNAME>Blau</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>9</MONTH><DAY>13</DAY></DATE><COMMENT>A detailed description of the management of reachable and unreachable objects, and of cruft packs.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Search All of Your Git History for Code and Commits with 2 Commands</T><A>https://www.youtube.com/watch?v=BaBKBy2vHmM</A><L>en</L><F>MP4</F><DURATION><MINUTE>9</MINUTE><SECOND>40</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Nick</FIRSTNAME><LASTNAME>Janetakis</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>10</MONTH><DAY>11</DAY></DATE><COMMENT>Some tips to use <CODEROUTINE>git log</CODEROUTINE> to search all commits containing some text (either in the changed code or in the commit comment).</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>The Story of Scalar</T><ST>New to Git v2.38, Scalar is a built-in repository manager for large repos. Here, we’ll tell the story of how Scalar went from a rough VFS for Git successor to a fully-integrated Git tool, with all of the engineering lessons learned in the process.</ST><A>https://github.blog/2022-10-13-the-story-of-scalar/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Derrick</FIRSTNAME><LASTNAME>Stolee</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Victoria</FIRSTNAME><LASTNAME>Dye</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>10</MONTH><DAY>13</DAY></DATE><COMMENT>The subtitle says it all.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Git: Rebase stacked branches with --update-refs</T><A>https://adamj.eu/tech/2022/10/15/how-to-rebase-stacked-git-branches/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Adam</FIRSTNAME><LASTNAME>Johnson</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>10</MONTH><DAY>15</DAY></DATE><COMMENT>How to use <CODEROUTINE>git rebase --update-refs</CODEROUTINE> to rebase stacked branches.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>How to use Git rebase in real life</T><A>https://about.gitlab.com/blog/2022/11/08/rebase-in-real-life/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Toon</FIRSTNAME><LASTNAME>Claes</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>11</MONTH><DAY>8</DAY></DATE><COMMENT>How to use <CODEROUTINE>fixup</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Use Git tactically</T><ST>How you can use micro-commits to effectively apply the Strangler Fig pattern.</ST><A>https://stackoverflow.blog/2022/12/19/use-git-tactically/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Mark</FIRSTNAME><LASTNAME>Seeman</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>12</MONTH><DAY>19</DAY></DATE><COMMENT>The subtitle is misleading, this is not about the Strangler Fig pattern, but some advice for using micro-commits. The author should have used a more convincing example.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Git security vulnerabilities announced</T><ST>Git users are encouraged to upgrade to the latest version, especially if they use `git archive`, work in untrusted repositories, or use Git GUI on Windows.</ST><A>https://github.blog/2023-01-17-git-security-vulnerabilities-announced-2/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Taylor</FIRSTNAME><LASTNAME>Blau</LASTNAME></AUTHOR><DATE><YEAR>2023</YEAR><MONTH>1</MONTH><DAY>17</DAY></DATE><COMMENT>The description of three CVEs.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE predecessor="https://github.blog/2023-01-17-git-security-vulnerabilities-announced-2/"><X><T>Git security audit: Inside the hunt for - and discovery of - CVEs</T><A>https://about.gitlab.com/blog/2023/01/24/git-security-audit/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Joern</FIRSTNAME><LASTNAME>Schneeweisz</LASTNAME></AUTHOR><DATE><YEAR>2023</YEAR><MONTH>1</MONTH><DAY>24</DAY></DATE><COMMENT>Some little information about the finding of one of the CVEs.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Git security vulnerabilities announced</T><ST>Git users are encouraged to upgrade to the latest version, especially if they use `git apply` or `git clone` against untrusted patches or repositories.</ST><A>https://github.blog/2023-02-14-git-security-vulnerabilities-announced-3/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Taylor</FIRSTNAME><LASTNAME>Blau</LASTNAME></AUTHOR><DATE><YEAR>2023</YEAR><MONTH>2</MONTH><DAY>14</DAY></DATE><COMMENT>Two new CVEs.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X quality="1"><T>Savez-vous vraiment comment fonctionne git ? (Sébastien LECACHEUR)</T><A>https://www.youtube.com/watch?v=uA2WZCQP4EI</A><L>fr</L><F>MP4</F><DURATION><MINUTE>47</MINUTE><SECOND>54</SECOND></DURATION><DATE><YEAR>2023</YEAR><MONTH>4</MONTH><DAY>26</DAY></DATE></X><AUTHOR><FIRSTNAME>Sébastien</FIRSTNAME><LASTNAME>Lecacheur</LASTNAME></AUTHOR><DATE><YEAR>2023</YEAR><MONTH>4</MONTH><DAY>13</DAY></DATE><COMMENT>A good presentation of Git internals.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Git security vulnerabilities announced</T><ST>A new set of Git releases were published to address a variety of security vulnerabilities. All users are encouraged to upgrade. Take a look at GitHub’s view of the latest round of releases.</ST><A>https://github.blog/2023-04-25-git-security-vulnerabilities-announced-4/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Taylor</FIRSTNAME><LASTNAME>Blau</LASTNAME></AUTHOR><DATE><YEAR>2023</YEAR><MONTH>4</MONTH><DAY>25</DAY></DATE><COMMENT>Five new CVE, three being specific to Windows.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Organizing multiple Git identities</T><A>https://garrit.xyz/posts/2023-10-13-organizing-multiple-git-identities</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Garrit</FIRSTNAME><LASTNAME>Franke</LASTNAME></AUTHOR><DATE><YEAR>2023</YEAR><MONTH>10</MONTH><DAY>13</DAY></DATE><COMMENT>How to configure different user data for different Git repositories.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Git reflog : ma commande (sous-côtée) préférée de Git par Eve Julliard</T><A>https://www.youtube.com/watch?v=E09Mml_ZHCw</A><L>fr</L><F>MP4</F><DURATION><MINUTE>15</MINUTE><SECOND>46</SECOND></DURATION><DATE><YEAR>2024</YEAR><MONTH>1</MONTH><DAY>23</DAY></DATE></X><AUTHOR><FIRSTNAME>Eve</FIRSTNAME><LASTNAME>Juliard</LASTNAME></AUTHOR><DATE><YEAR>2023</YEAR><MONTH>12</MONTH><DAY>12</DAY></DATE><COMMENT>A description of the <CODEROUTINE>git reflog</CODEROUTINE> command.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>So You Think You Know Git - FOSDEM 2024</T><A>https://www.youtube.com/watch?v=aolI_Rz0ZqY</A><L>en</L><F>MP4</F><DURATION><MINUTE>46</MINUTE><SECOND>59</SECOND></DURATION><DATE><YEAR>2024</YEAR><MONTH>2</MONTH><DAY>8</DAY></DATE></X><AUTHOR><FIRSTNAME>Scott</FIRSTNAME><LASTNAME>Chacon</LASTNAME></AUTHOR><DATE><YEAR>2024</YEAR><MONTH>2</MONTH><DAY>4</DAY></DATE><COMMENT>Some little known features, new features, large repositories, and a few new GitHub features.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE predecessor="https://www.youtube.com/watch?v=aolI_Rz0ZqY"><X><T>So You Think You Know Git Part 2 - DevWorld 2024</T><A>https://www.youtube.com/watch?v=Md44rcw13k4</A><L>en</L><F>MP4</F><DURATION><MINUTE>23</MINUTE><SECOND>1</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Scott</FIRSTNAME><LASTNAME>Chacon</LASTNAME></AUTHOR><DATE><YEAR>2024</YEAR><MONTH>3</MONTH><DAY>20</DAY></DATE><COMMENT>Some other features: <CODEROUTINE>git switch</CODEROUTINE>, <CODEROUTINE>git restore</CODEROUTINE>, hooks, attributes, rebasing stacked branches, worktrees…</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>How to Fix Git “Refusing to Merge Unrelated Histories”</T><A>https://www.baeldung.com/ops/git-merge-unrelated-histories-error</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Aliaksei</FIRSTNAME><LASTNAME>Laurynovich</LASTNAME></AUTHOR><DATE><YEAR>2024</YEAR><MONTH>2</MONTH><DAY>6</DAY></DATE><COMMENT>The solution is to run <CODEROUTINE>git pull origin main --allow-unrelated-histories</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Configuring git Credentials</T><A>https://www.baeldung.com/ops/git-configure-credentials</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Michael</FIRSTNAME><LASTNAME>Pratt</LASTNAME></AUTHOR><DATE><YEAR>2024</YEAR><MONTH>3</MONTH><DAY>19</DAY></DATE><COMMENT>The basics of Git credentials.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Securing Git: Addressing 5 new vulnerabilities</T><ST>Git is releasing several new versions to address five CVEs. Upgrading to the latest Git version is essential to protect against these vulnerabilities.</ST><A>https://github.blog/2024-05-14-securing-git-addressing-5-new-vulnerabilities/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Johannes</FIRSTNAME><LASTNAME>Schindelin</LASTNAME></AUTHOR><DATE><YEAR>2024</YEAR><MONTH>5</MONTH><DAY>14</DAY></DATE><COMMENT>Some fixes of vulnerabilities related to cloning repositories.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>A beginner's guide to the Git reftable format</T><A>https://about.gitlab.com/blog/2024/05/30/a-beginners-guide-to-the-git-reftable-format/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Patrick</FIRSTNAME><LASTNAME>Steinhardt</LASTNAME></AUTHOR><DATE><YEAR>2024</YEAR><MONTH>5</MONTH><DAY>30</DAY></DATE><COMMENT>A detailed description of reftables.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Developer Git Commit Hygiene</T><ST>This article will demonstrate good developer Git commit hygiene as well as educate the developer audience to use short and frequent commits.</ST><A>https://dzone.com/articles/developer-git-commit-hygiene-1</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Gaurav</FIRSTNAME><LASTNAME>Shekhar</LASTNAME></AUTHOR><DATE><YEAR>2024</YEAR><MONTH>6</MONTH><DAY>20</DAY></DATE><COMMENT>A basic (and somewhat out-dated) list of Git good practices.</COMMENT></ARTICLE></ITEM>
      <ITEM><BLIST><TITLE>History</TITLE>
        <ITEM><BLIST><TITLE>2.6</TITLE>
          <ITEM><ARTICLE><X><T>Git 2.6 Brings Many New Features and Improvements</T><A>https://www.infoq.com/news/2015/10/git-26-released/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Sergio</FIRSTNAME><LASTNAME>De Simone</LASTNAME></AUTHOR><DATE><YEAR>2015</YEAR><MONTH>10</MONTH><DAY>8</DAY></DATE><COMMENT>A description of the new release.</COMMENT></ARTICLE></ITEM>
        </BLIST></ITEM>
        <ITEM><BLIST><TITLE>2.25</TITLE>
          <ITEM><ARTICLE><X><T>Git 2.25 Improves Support for Sparse Checkout</T><A>https://www.infoq.com/news/2020/01/git-2-25-sparse-checkout/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Sergio</FIRSTNAME><LASTNAME>De Simone</LASTNAME></AUTHOR><DATE><YEAR>2020</YEAR><MONTH>1</MONTH><DAY>15</DAY></DATE><COMMENT>The <CODEROUTINE>git sparse-checkout</CODEROUTINE> and "code" mode have been added to manage partial clones.</COMMENT></ARTICLE></ITEM>
        </BLIST></ITEM>
        <ITEM><BLIST><TITLE>2.31</TITLE>
          <ITEM><ARTICLE><X><T>Highlights from Git 2.31</T><A>https://github.blog/2021-03-15-highlights-from-git-2-31/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Taylor</FIRSTNAME><LASTNAME>Blau</LASTNAME></AUTHOR><DATE><YEAR>2021</YEAR><MONTH>3</MONTH><DAY>15</DAY></DATE><COMMENT>Background maintenance has been added with <CODEROUTINE>git maintenance</CODEROUTINE>, on-disk reverse indexes are now supported (disabled by default), and some small improvements.</COMMENT></ARTICLE></ITEM>
        </BLIST></ITEM>
        <ITEM><BLIST><TITLE>2.34</TITLE>
          <ITEM><ARTICLE><X><T>Highlights from Git 2.34</T><ST>To celebrate this most recent release, here's GitHub's look at some of the most interesting features and changes introduced since last time.</ST><A>https://github.blog/2021-11-15-highlights-from-git-2-34/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Taylor</FIRSTNAME><LASTNAME>Blau</LASTNAME></AUTHOR><DATE><YEAR>2021</YEAR><MONTH>11</MONTH><DAY>15</DAY></DATE><COMMENT>The index now understands sparse checkouts, the bitmat format now supports multi-pack indexes, <CODEROUTINE>ort</CODEROUTINE> becomes the default merge strategy.</COMMENT></ARTICLE></ITEM>
        </BLIST></ITEM>
        <ITEM><BLIST><TITLE>2.35</TITLE>
          <ITEM><ARTICLE><X><T>Highlights from Git 2.35</T><ST>The open source Git project just released Git 2.35. Here's GitHub's look at some of the most interesting features and changes introduced since last time.</ST><A>https://github.blog/2022-01-24-highlights-from-git-2-35/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Taylor</FIRSTNAME><LASTNAME>Blau</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>1</MONTH><DAY>24</DAY></DATE><COMMENT><CODEROUTINE>git stash --staged</CODEROUTINE>, new formats for <CODEROUTINE>git describe</CODEROUTINE>, SSH signing is improved, a new <CODEROUTINE>zdiff3</CODEROUTINE> mode for reporting merge conflicts, some performance improvements in <CODEROUTINE>git diff</CODEROUTINE>…</COMMENT></ARTICLE></ITEM>
        </BLIST></ITEM>
        <ITEM><BLIST><TITLE>2.37</TITLE>
          <ITEM><ARTICLE><X><T>Highlights from Git 2.37</T><ST>The open source Git project just released Git 2.37. Take a look at some of our highlights from the latest release.</ST><A>https://github.blog/2022-06-27-highlights-from-git-2-37/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Taylor</FIRSTNAME><LASTNAME>Blau</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>6</MONTH><DAY>27</DAY></DATE><COMMENT>Cruft packs have been added to better manage unreachable objects, a filesystem monitor is built in for Windows and macOS, the sparse index is now fully integrated…</COMMENT></ARTICLE></ITEM>
        </BLIST></ITEM>
        <ITEM><BLIST><TITLE>2.38</TITLE>
          <ITEM><ARTICLE><X><T>Highlights from Git 2.38</T><ST>Another new release of Git is here! Take a look at some of our highlights on what's new in Git 2.38.</ST><A>https://github.blog/2022-10-03-highlights-from-git-2-38/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Taylor</FIRSTNAME><LASTNAME>Blau</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>10</MONTH><DAY>3</DAY></DATE><COMMENT>Scalar is now included in the release, <CODEROUTINE>git rebase</CODEROUTINE> can now update dependant branches, <CODEROUTINE>git rm</CODEROUTINE> supports spare index, <CODEROUTINE>git merge-tree</CODEROUTINE> supports the ort merge strategy…</COMMENT></ARTICLE></ITEM>
        </BLIST></ITEM>
        <ITEM><BLIST><TITLE>2.39</TITLE>
          <ITEM><ARTICLE><X><T>Highlights from Git 2.39</T><ST>Another new release of Git is here to end the year! Take a look at some of our highlights on what's new in Git 2.39.</ST><A>https://github.blog/2022-12-12-highlights-from-git-2-39/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Taylor</FIRSTNAME><LASTNAME>Blau</LASTNAME></AUTHOR><DATE><YEAR>2022</YEAR><MONTH>12</MONTH><DAY>12</DAY></DATE><COMMENT>Improved grouping in <CODEROUTINE>git shortlog</CODEROUTINE>, <CODEROUTINE>git repack --expire-to</CODEROUTINE> can be used to generate a backup of the removed objects, <CODEROUTINE>git grep --cached</CODEROUTINE> improved performance with sparse index, and improved <CODEROUTINE>git push</CODEROUTINE> performance when some refs are hidden by the server.</COMMENT></ARTICLE></ITEM>
        </BLIST></ITEM>
        <ITEM><BLIST><TITLE>2.40</TITLE>
          <ITEM><ARTICLE><X><T>Highlights from Git 2.40</T><ST>The first Git release of the year is here! Take a look at some of our highlights on what's new in Git 2.40.</ST><A>https://github.blog/2023-03-13-highlights-from-git-2-40/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Taylor</FIRSTNAME><LASTNAME>Blau</LASTNAME></AUTHOR><DATE><YEAR>2023</YEAR><MONTH>3</MONTH><DAY>13</DAY></DATE><COMMENT><CODEMENU>git jump</CODEMENU> now supports Emacs, <CODEROUTINE>git cat-file</CODEROUTINE> has been fixed to compute correct sizes when used with a <CODEROUTINE>mailmap</CODEROUTINE>, <CODEROUTINE>git check-attr</CODEROUTINE> can be used on a bare repository…</COMMENT></ARTICLE></ITEM>
        </BLIST></ITEM>
        <ITEM><BLIST><TITLE>2.41</TITLE>
          <ITEM><ARTICLE><X><T>Highlights from Git 2.41</T><ST>The open-source Git project just released Git 2.41. Take a look at our highlights on what’s new in Git 2.41.</ST><A>https://github.blog/2023-06-01-highlights-from-git-2-41/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Taylor</FIRSTNAME><LASTNAME>Blau</LASTNAME></AUTHOR><DATE><YEAR>2023</YEAR><MONTH>6</MONTH><DAY>1</DAY></DATE><COMMENT>Cruft packs and reverse indexes are now generated by default, credential helpers support <CODEROUTINE>WWW-Authenticate headers</CODEROUTINE>, <CODEROUTINE>git fetch</CODEROUTINE> has a new <CODEROUTINE>--porcelain</CODEROUTINE> flag, <CODEROUTINE>git fsck</CODEROUTINE> performs more controls…</COMMENT></ARTICLE></ITEM>
          <ITEM><ARTICLE><X><T>Git 2.41 release - Here are five of our contributions in detail</T><A>https://about.gitlab.com/blog/2023/06/20/contributions-to-latest-git-release/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>John</FIRSTNAME><LASTNAME>Cai</LASTNAME></AUTHOR><DATE><YEAR>2023</YEAR><MONTH>6</MONTH><DAY>20</DAY></DATE><COMMENT>The improvements and fixes that GitLab has contributed in Git 2.41.</COMMENT></ARTICLE></ITEM>
        </BLIST></ITEM>
        <ITEM><BLIST><TITLE>2.42</TITLE>
          <ITEM><ARTICLE><X><T>Highlights from Git 2.42</T><ST>Another new release of Git is here! Take a look at some of our highlights on what's new in Git 2.42.</ST><A>https://github.blog/2023-08-21-highlights-from-git-2-42/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Taylor</FIRSTNAME><LASTNAME>Blau</LASTNAME></AUTHOR><DATE><YEAR>2023</YEAR><MONTH>8</MONTH><DAY>21</DAY></DATE><COMMENT>A new variant of the bitmap traversal algorithm, optimised scan of the <CODEROUTINE>packed-refs</CODEROUTINE> file, the <CODEROUTINE>gc.recentObjectsHook</CODEROUTINE> configuration allows to define hooks to avoid some files to be pruned…</COMMENT></ARTICLE></ITEM>
          <ITEM><ARTICLE><X><T>Git 2.42 release: Here are four of our contributions in detail</T><A>https://about.gitlab.com/blog/2023/10/12/contributions-to-git-2-42-release/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Christian</FIRSTNAME><LASTNAME>Couder</LASTNAME></AUTHOR><DATE><YEAR>2023</YEAR><MONTH>10</MONTH><DAY>12</DAY></DATE><COMMENT>Adding <CODEROUTINE>-include</CODEROUTINE> and <CODEROUTINE>-exclude</CODEROUTINE> options to <CODEROUTINE>git pack-refs</CODEROUTINE>, adding a <CODEROUTINE>-Z</CODEROUTINE> option to <CODEROUTINE>git cat-file</CODEROUTINE>, allowing to provide pseudo options in <CODEROUTINE>stdin</CODEROUTINE> to <CODEROUTINE>git rev-list --stdin</CODEROUTINE>, and some code cleanup.</COMMENT></ARTICLE></ITEM>
        </BLIST></ITEM>
        <ITEM><BLIST><TITLE>2.43</TITLE>
          <ITEM><ARTICLE><X><T>Highlights from Git 2.43</T><ST>The last Git release of 2023 is here! Take a look at some of our highlights on what's new in Git 2.43.</ST><A>https://github.blog/2023-11-20-highlights-from-git-2-43/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Taylor</FIRSTNAME><LASTNAME>Blau</LASTNAME></AUTHOR><DATE><YEAR>2023</YEAR><MONTH>11</MONTH><DAY>20</DAY></DATE><COMMENT>Multiple cruft packs, <CODEROUTINE>git repack</CODEROUTINE> now supports <CODEROUTINE>--filter</CODEROUTINE> and <CODEROUTINE>--filter-to</CODEROUTINE> to remove some blobs from the workspace, improved message for revert of revert, <CODEROUTINE>git log</CODEROUTINE> has now a <CODEROUTINE>%(decorate)</CODEROUTINE> placeholder…</COMMENT></ARTICLE></ITEM>
          <ITEM><ARTICLE><X><T>The contributions we made to the Git 2.43 release</T><A>https://about.gitlab.com/blog/2024/01/11/the-contributions-we-made-to-the-git-2-43-release/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>John</FIRSTNAME><LASTNAME>Cai</LASTNAME></AUTHOR><DATE><YEAR>2024</YEAR><MONTH>1</MONTH><DAY>11</DAY></DATE><COMMENT><CODEROUTINE>git repack --filter</CODEROUTINE>, <CODEROUTINE>git show --exists</CODEROUTINE>, <CODEROUTINE>git rev-list --missing</CODEROUTINE> now handles missing commit objects, and reading attributes from <CODEROUTINE>HEAD</CODEROUTINE> by default.</COMMENT></ARTICLE></ITEM>
        </BLIST></ITEM>
        <ITEM><BLIST><TITLE>2.44</TITLE>
          <ITEM><ARTICLE><X><T>Highlights from Git 2.44</T><ST>The first Git release of 2024 is here! Take a look at some of our highlights on what's new in Git 2.44.</ST><A>https://github.blog/2024-02-23-highlights-from-git-2-44/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Taylor</FIRSTNAME><LASTNAME>Blau</LASTNAME></AUTHOR><DATE><YEAR>2024</YEAR><MONTH>2</MONTH><DAY>23</DAY></DATE><COMMENT>Reusing objects across multiple packs, a new <CODEROUTINE>git replay</CODEROUTINE> which is a more powerful and faster alternative of <CODEROUTINE>git rebase</CODEROUTINE>, <CODEROUTINE>--autosquash</CODEROUTINE> for non-interactive rebase…</COMMENT></ARTICLE></ITEM>
          <ITEM><ARTICLE><X><T>GitLab's contributions to Git 2.44.0</T><A>https://about.gitlab.com/blog/2024/02/26/gitlabs-contributions-to-git-2-44-0/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Patrick</FIRSTNAME><LASTNAME>Steinhardt</LASTNAME></AUTHOR><DATE><YEAR>2024</YEAR><MONTH>2</MONTH><DAY>26</DAY></DATE><COMMENT><CODEROUTINE>git replay</CODEROUTINE>, addition then removal of the detection of commits that exist in the commit-graph but no longer in the object database, preparation of a future new format to store refs, and integration of the definition of the GitLab CI/CD pipeline in Git repository.</COMMENT></ARTICLE></ITEM>
        </BLIST></ITEM>
        <ITEM><BLIST><TITLE>2.45</TITLE>
          <ITEM><ARTICLE><X><T>Highlights from Git 2.45</T><ST>Git 2.45 is here with experimental support for reftables, and SHA-256 interoperability. Get our take on the latest here.</ST><A>https://github.blog/2024-04-29-highlights-from-git-2-45/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Taylor</FIRSTNAME><LASTNAME>Blau</LASTNAME></AUTHOR><DATE><YEAR>2024</YEAR><MONTH>4</MONTH><DAY>29</DAY></DATE><COMMENT>Reftable storage, first experiment of SHA-1/SHA-256 interoperability, <CODEROUTINE>git rev-list --missing=print</CODEROUTINE> now supports missing query tips, <CODEROUTINE>git reflog list</CODEROUTINE> can be use to how which references have a reflog even when using reftables, <CODEROUTINE>git config --comment</CODEROUTINE> can be used to comment a line, <CODEROUTINE>git cherry-pick</CODEROUTINE> now supports <CODEROUTINE>--empty</CODEROUTINE>…</COMMENT></ARTICLE></ITEM>
        </BLIST></ITEM>
        <ITEM><BLIST><TITLE>2.46</TITLE>
          <ITEM><ARTICLE><X><T>What’s new in Git 2.46.0?</T><A>https://about.gitlab.com/blog/2024/07/29/whats-new-in-git-2-46-0/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Justin</FIRSTNAME><LASTNAME>Tobler</LASTNAME></AUTHOR><DATE><YEAR>2024</YEAR><MONTH>7</MONTH><DAY>29</DAY></DATE><COMMENT><CODEROUTINE>git refs migrate</CODEROUTINE> can be used to convert a repo to reftables, <CODEROUTINE>git update-ref</CODEROUTINE> has new instructions to support symrefs, <CODEROUTINE>git config</CODEROUTINE> supports also the common command syntax, more unit tests, and some bug fixes.</COMMENT></ARTICLE></ITEM>
        </BLIST></ITEM>
      </BLIST></ITEM>
      <ITEM><BLIST><TITLE>GitButler</TITLE>
        <ITEM><ARTICLE><X><T>GitButler Product Demo February 2024</T><A>https://www.youtube.com/watch?v=PWc4meBj4jo</A><L>en</L><F>MP4</F><DURATION><MINUTE>5</MINUTE><SECOND>20</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Scott</FIRSTNAME><LASTNAME>Chacon</LASTNAME></AUTHOR><DATE><YEAR>2024</YEAR><MONTH>2</MONTH><DAY>6</DAY></DATE><COMMENT>A short and rather impressive demo of GitButler.</COMMENT></ARTICLE></ITEM>
        <ITEM><ARTICLE><X><T>New GitButler Release - Power rebasing, infinite undo and more!</T><A>https://www.youtube.com/watch?v=zZD24Ikxd1g</A><L>en</L><F>MP4</F><DURATION><MINUTE>6</MINUTE><SECOND>41</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Scott</FIRSTNAME><LASTNAME>Chacon</LASTNAME></AUTHOR><DATE><YEAR>2024</YEAR><MONTH>6</MONTH><DAY>10</DAY></DATE><COMMENT>Simple rebasing and project history.</COMMENT></ARTICLE></ITEM>
      </BLIST></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Mercurial</TITLE>
      <ITEM><ARTICLE><X><T>Google I/O 2009 - Mercurial on BigTable</T><A>https://www.youtube.com/watch?v=ri796Hx8las</A><L>en</L><F>MP4</F><DURATION><MINUTE>47</MINUTE><SECOND>18</SECOND></DURATION><DATE><YEAR>2009</YEAR><MONTH>6</MONTH><DAY>8</DAY></DATE></X><AUTHOR><FIRSTNAME>Jacob</FIRSTNAME><LASTNAME>Lee</LASTNAME></AUTHOR><DATE><YEAR>2009</YEAR><MONTH>5</MONTH><DAY>28</DAY></DATE><COMMENT>A description on the Mercurial implementation done on top of Google’s Bigtable.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Team Foundation Server</TITLE>
      <ITEM><ARTICLE><X quality="1"><T>diff/merge configuration in Team Foundation - common Command and Argument values</T><A>https://learn.microsoft.com/en-us/archive/blogs/jmanning/diffmerge-configuration-in-team-foundation-common-command-and-argument-values</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>James</FIRSTNAME><LASTNAME>Manning</LASTNAME></AUTHOR><DATE><YEAR>2006</YEAR><MONTH>2</MONTH><DAY>20</DAY></DATE><COMMENT>How to configure diff and merge tools in Visual Studio for Team Foundation Server.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="dead"><T>Cloaking in TFS</T><A>https://blogs.msdn.microsoft.com/b/fai/archive/2008/10/02/cloaking-in-tfs.aspx</A><L>en</L><F>HTML</F></X><AUTHOR><GIVENNAME>Faister</GIVENNAME></AUTHOR><DATE><YEAR>2008</YEAR><MONTH>10</MONTH><DAY>2</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="dead"><T>Introducing Microsoft Visual Studio Team Foundation Server 2010, Part I</T><A>https://www.codeguru.com/cpp/article.php/c18481</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jani</FIRSTNAME><LASTNAME>Jarvinen</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>2</MONTH><DAY>7</DAY></DATE><COMMENT>An overview of TFS.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="dead"><T>Benefiting from Team Foundation Server Work Items</T><A>https://www.codeguru.com/csharp/.net/article.php/c18505</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jani</FIRSTNAME><LASTNAME>Jarvinen</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>2</MONTH><DAY>14</DAY></DATE><COMMENT>What are Work Items and how to use them.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="dead"><T>Unit and Load Testing With Team Foundation Server 2010</T><A>https://www.codeguru.com/csharp/.net/article.php/c18555</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Jani</FIRSTNAME><LASTNAME>Jarvinen</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>2</MONTH><DAY>28</DAY></DATE><COMMENT>Running unit tests, Web tests, and load tests in TFS.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>TFS 2010 Scrum - Relation between PBIs, Tasks, Bugs and Impediments</T><A>https://www.c-sharpcorner.com/uploadfile/sanks/tfs-2010-scrum-relation-between-pbis-tasks-bugs-and-impediments/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Sanket</FIRSTNAME><LASTNAME>Terdal</LASTNAME></AUTHOR><DATE><YEAR>2011</YEAR><MONTH>5</MONTH><DAY>4</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Microsoft announces cloud building with TFS, Feature Packs for Visual Studio</T><ST>Microsoft has announced a new cloud-building service for its Team Foundation …</ST><A>https://arstechnica.com/information-technology/2012/03/microsoft-announces-cloud-building-with-tfs-feature-packs-for-visual-studio/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Peter</FIRSTNAME><LASTNAME>Bright</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>3</MONTH><DAY>28</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Branching and Merging Visualization with VS2012 &amp; TFS2012</T><A>https://www.youtube.com/watch?v=_2PljrAQpao</A><L>en</L><F>MP4</F><DURATION><MINUTE>13</MINUTE><SECOND>30</SECOND></DURATION></X><AUTHOR><FIRSTNAME>Mohammed</FIRSTNAME><LASTNAME>Omar</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>9</MONTH><DAY>11</DAY></DATE><COMMENT>How to merge a changeset from one branch to another one.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Exploratory Testing in TFS 2012</T><ST>Learn how Visual Studio 2012 makes exploratory testing quick and easy.</ST><A>https://visualstudiomagazine.com/articles/2012/11/27/exploratory-testing-in-tfs-2012.aspx</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Mickey</FIRSTNAME><LASTNAME>Gousset</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>11</MONTH><DAY>27</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Teams without areas using a team field in TFS</T><A>https://nkdagility.com/blog/team-foundation-server-2012-teams-without-areas/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Martin</FIRSTNAME><LASTNAME>Hinshelwood</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>12</MONTH><DAY>18</DAY></DATE><COMMENT>The title says it all.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Work Item Tagging In TFS</T><ST>Work item tagging allows you to add searchable "keywords" to individual work items in TFS.</ST><A>https://visualstudiomagazine.com/articles/2013/03/01/work-item-tagging.aspx</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Mickey</FIRSTNAME><LASTNAME>Gousset</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>4</MONTH><DAY>1</DAY></DATE><COMMENT>Visual Studio 2012 Update 2’s CTP allows to add tags to Work Items and to filter on them.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Kanban and Team Foundation Server 2012</T><A>https://visualstudiomagazine.com/articles/2013/06/01/kanban-and-team-foundation-server-2012.aspx</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Mickey</FIRSTNAME><LASTNAME>Gousset</LASTNAME></AUTHOR><DATE><YEAR>2013</YEAR><MONTH>6</MONTH><DAY>1</DAY></DATE><COMMENT>A very short presentation on using TFS for Kanban.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
  </BLIST></ITEM>
</LLIST>
</CONTENT>
</PAGE>