<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../css/strict.xsl"?>
<PAGE status="unmaintained" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../css/schema.xsd" xml:lang="en">
<TITLE>C</TITLE>
<PATH>links/c.xml</PATH>
<DATE><YEAR>2014</YEAR><MONTH>6</MONTH><DAY>14</DAY></DATE>
<CONTENT>
<LLIST>
  <ITEM><SLIST>
    <ITEM><X><T>Jutta Degener repository</T><A>https://www.quut.com/c/</A><L>en</L><F>HTML</F></X>
      (<X><T>⧉</T><A>http://www.lysator.liu.se/c/</A><L>en</L><F>HTML</F></X>)</ITEM>
    <ITEM><CLIST><TITLE><ANCHOR>rules</ANCHOR>Coding rules</TITLE>
      <ITEM><X status="zombie"><T>updated Indian Hill</T><A>https://www.maultech.com/chrislott/resources/cstyle/indhill-cstyle.html</A><L>en</L><F>HTML</F></X></ITEM>
    </CLIST></ITEM>
    <ITEM><CLIST><TITLE><ANCHOR>glibc</ANCHOR><X><T>glibc</T><A>https://www.gnu.org/software/libc/libc.html</A><L>en</L><F>HTML</F></X></TITLE>
      <ITEM><X><T>doc</T><A>https://www.gnu.org/software/libc/manual/</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>personal notes</T><A>../notes/glibc.html</A><L>en</L><F>HTML</F></X></ITEM>
    </CLIST></ITEM>
    <ITEM><CLIST><TITLE>Memory allocator</TITLE>
      <ITEM><X><T>Hoard</T><A>http://hoard.org/</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>ptmalloc</T><A>http://www.malloc.de/en/</A><L>en</L><F>HTML</F></X></ITEM>
      <ITEM><X><T>Doug Lea</T><A>https://gee.cs.oswego.edu/pub/misc/malloc.c</A><L>en</L><F>HTML</F></X></ITEM>
    </CLIST></ITEM>
    <ITEM><CLIST><TITLE>Mathematical libraries</TITLE>
      <ITEM><X><T>Meschach</T><A>http://homepage.divms.uiowa.edu/~dstewart/meschach/</A><L>en</L><F>HTML</F></X></ITEM>
    </CLIST></ITEM>
    <ITEM><X><T>personal notes</T><A>../notes/c.html</A><L>en</L><F>HTML</F></X></ITEM>
  </SLIST></ITEM>
  <ITEM><BLIST><TITLE>Articles and videos</TITLE>
    <ITEM><BLIST><TITLE>Porting to 64 bits</TITLE>
      <ITEM><ARTICLE><X status="zombie"><T>From the stacks: Making the transition to 64 bits</T><ST>Porting PowerPC software from 32-bit mode to 64-bit mode on the PowerPC 970FX</ST><A>https://www.ibm.com/developerworks/library/pa-intro64.html</A><L>en</L><F>HTML</F></X><DATE><YEAR>2004</YEAR><MONTH>10</MONTH><DAY>19</DAY></DATE><COMMENT>Some advice to port C and PowerPC assembly code from 32 bits to 64 bits.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="dead"><T>Porting Linux* Applications to 64-Bit Intel® Architecture</T><A>http://software.intel.com/en-us/articles/porting-linux-applications-to-64-bit-intel-architecture/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Allan</FIRSTNAME><MIDDLENAME>Mc</MIDDLENAME><LASTNAME>Naughton</LASTNAME></AUTHOR><DATE><YEAR>2008</YEAR><MONTH>10</MONTH><DAY>3</DAY></DATE><COMMENT>A list of the most common 64 bits porting issues.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
    <ITEM><BLIST><TITLE>Miscellaneous</TITLE>
      <ITEM><ARTICLE><X><T>The Development of the C Language</T><A>https://www.bell-labs.com/usr/dmr/www/chist.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Dennis</FIRSTNAME><MIDDLENAME>M.</MIDDLENAME><LASTNAME>Ritchie</LASTNAME></AUTHOR><DATE><YEAR>1993</YEAR><MONTH>4</MONTH></DATE><COMMENT>This history of BCPL, B and mainly C told by one of the language authors, is a worthy read: some idiosyncrasies are explained.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Restricted Pointers in C</T><A>http://www.lysator.liu.se/c/restrict.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Bill</FIRSTNAME><LASTNAME>Homer</LASTNAME></AUTHOR><DATE><YEAR>1994</YEAR><MONTH>4</MONTH><DAY>25</DAY></DATE><COMMENT>A discussion on the <CODEROUTINE>restrict</CODEROUTINE> keyword to indicate non aliased pointers.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Programming in C UNIX System Calls and Subroutines using C.</T><A>https://users.cs.cf.ac.uk/Dave.Marshall/C/CE.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>A.</FIRSTNAME><MIDDLENAME>D.</MIDDLENAME><LASTNAME>Marshall</LASTNAME></AUTHOR><DATE><YEAR>1999</YEAR><MONTH>3</MONTH></DATE><COMMENT>An introduction to programming C on Unix.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="dead"><T>The New ISO Standard for C (C9X)</T><A>http://home.tiscalinet.ch/t_wolf/tw/c/c9x_changes.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Thomas</FIRSTNAME><LASTNAME>Wolf</LASTNAME></AUTHOR><DATE><YEAR>2000</YEAR><MONTH>8</MONTH><DAY>1</DAY></DATE><COMMENT>This presentation summarizes the changes from C94 to C99.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>The New C: Declarations &amp; Initializations</T><A>https://www.drdobbs.com/the-new-c-declarations-initializations/184401377</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Randy</FIRSTNAME><LASTNAME>Meyers</LASTNAME></AUTHOR><DATE><YEAR>2001</YEAR><MONTH>4</MONTH></DATE><COMMENT>Some new C99 features: declarations not at the start of a block, non-constant initializers and designated initalizers.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="dead"><T>Manipulating Fixed-Width Integer Data Types</T><A>http://www.oreillynet.com/pub/a/network/2003/10/07/michael_barr.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Michael</FIRSTNAME><LASTNAME>Barr</LASTNAME></AUTHOR><DATE><YEAR>2003</YEAR><MONTH>10</MONTH><DAY>7</DAY></DATE><COMMENT>ANSI C99 defines <CODEROUTINE>int8_t</CODEROUTINE>, <CODEROUTINE>uint8_t</CODEROUTINE>, <CODEROUTINE>int16_t</CODEROUTINE>, <CODEROUTINE>uint16_t</CODEROUTINE>, <CODEROUTINE>int32_t</CODEROUTINE>, <CODEROUTINE>uint32_t</CODEROUTINE>, <CODEROUTINE>int64_t</CODEROUTINE> and <CODEROUTINE>uint64_t</CODEROUTINE>. His last advice is not the best one: if your C compiler does not support C99, you can use <X><T>this</T><A>../notes/uint32.html</A><L>en</L><F>HTML</F></X>.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="zombie"><T>Self-manage data buffer memory</T><ST>Deliver code efficiency, simplicity, portability, and security</ST><A>https://www.ibm.com/developerworks/linux/library/wa-memmng/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Xiaoming</FIRSTNAME><LASTNAME>Zhang</LASTNAME></AUTHOR><DATE><YEAR>2004</YEAR><MONTH>1</MONTH><DAY>6</DAY></DATE><COMMENT>The author proposes a simple API/implementation for handling memory buffers which are dynamically sized.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="zombie"><T>Open source development using C99</T><ST>Is your C code up to standard</ST><A>https://www.ibm.com/developerworks/linux/library/l-c99/index.html</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Peter</FIRSTNAME><LASTNAME>Seebach</LASTNAME></AUTHOR><DATE><YEAR>2004</YEAR><MONTH>3</MONTH><DAY>24</DAY></DATE><COMMENT>This article describe some features added in C99 and how they are supported by <CODEROUTINE>gcc</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X status="zombie"><T>Standards and specs: The nitty-gritty on the C committee</T><ST>Find out what goes into the making of an ISO standard</ST><A>https://www.ibm.com/developerworks/power/library/pa-spec3/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Peter</FIRSTNAME><LASTNAME>Seebach</LASTNAME></AUTHOR><DATE><YEAR>2004</YEAR><MONTH>11</MONTH><DAY>23</DAY></DATE><COMMENT>A mix of standard rational, technical details, standard structure… This is quite a mess, but it is still an interesting reading.</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
  </BLIST></ITEM>
</LLIST>
</CONTENT>
</PAGE>