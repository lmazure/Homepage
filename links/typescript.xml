<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../css/strict.xsl"?>
<PAGE xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../css/schema.xsd">
<TITLE>TypeScript</TITLE>
<PATH>links/typescript.xml</PATH>
<DATE><YEAR>2020</YEAR><MONTH>7</MONTH><DAY>14</DAY></DATE>
<CONTENT>
<LLIST>
  <ITEM><SLIST>
    <ITEM><X><T>typescriptlang.org</T><A>https://www.typescriptlang.org/</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X><T>DefinitelyTyped</T><A>http://definitelytyped.org/</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X><T>TypeScript Deep Dive</T><A>https://basarat.gitbooks.io/typescript/</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X><T>tutorialspoint's tutorial</T><A>https://www.tutorialspoint.com/typescript/index.htm</A><L>en</L><F>HTML</F></X></ITEM>
    <ITEM><X><T>personal notes</T><A>../notes/typescript.html</A><L>en</L><F>HTML</F></X></ITEM>
  </SLIST></ITEM>
  <ITEM><BLIST><TITLE>Articles</TITLE>
    <ITEM><ARTICLE><X><T>With TypeScript, Microsoft Embraces and Augments</T><A>https://visualstudiomagazine.com/articles/2012/11/01/typescript.aspx</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Andrew</FIRSTNAME><MIDDLENAME>J.</MIDDLENAME><LASTNAME>Brust</LASTNAME></AUTHOR><DATE><YEAR>2012</YEAR><MONTH>11</MONTH><DAY>1</DAY></DATE><COMMENT>Microsoft's Hejlsberg tries to create yet another better JavaScript.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Copying Classes in TypeScript</T><A>https://visualstudiomagazine.com/articles/2018/02/28/copying-classes.aspx</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Peter</FIRSTNAME><LASTNAME>Vogel</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>3</MONTH><DAY>6</DAY></DATE><COMMENT>A description of the spread syntax.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>How to Upgrade to TypeScript Without Anybody Noticing, Part 1</T><A>https://devblogs.microsoft.com/typescript/how-to-upgrade-to-typescript-without-anybody-noticing-part-1/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Nathan</FIRSTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>6</MONTH><DAY>14</DAY></DATE><COMMENT>How to keep a JavaScript build pipeline and nevertheless use TypeScript when editing files.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>How to Upgrade to TypeScript without anybody noticing, Part 2</T><A>https://devblogs.microsoft.com/typescript/how-to-upgrade-to-typescript-without-anybody-noticing-part-2/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Nathan</FIRSTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>6</MONTH><DAY>24</DAY></DATE><COMMENT>The continuation of the previous article: how to deal with the errors.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Talking TypeScript with the engineer who leads the team</T><ST>We wanted to find out what about TypeScript makes it so dang lovable, so we reached out to Ryan Cavanaugh, the principal engineering lead for the TypeScript language at Microsoft. He was generous enough to sit down and answer our questions.</ST><A>https://stackoverflow.blog/2020/06/15/talking-typescript-with-ryan-cavanaugh/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Ryan</FIRSTNAME><LASTNAME>Cavanaugh</LASTNAME></AUTHOR><AUTHOR><FIRSTNAME>Ryan</FIRSTNAME><LASTNAME>Donovan</LASTNAME></AUTHOR><DATE><YEAR>2020</YEAR><MONTH>6</MONTH><DAY>15</DAY></DATE><COMMENT>The creation of TypeScript, its popularity increase, the movement toward static typing, deno, and the TypeScript team at Microsoft.</COMMENT></ARTICLE></ITEM>
    <ITEM><BLIST><TITLE>History</TITLE>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 2.2 RC</T><A>https://blogs.msdn.microsoft.com/typescript/2017/02/02/announcing-typescript-2-2-rc/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2017</YEAR><MONTH>2</MONTH><DAY>2</DAY></DATE><COMMENT>The <CODEROUTINE>object</CODEROUTINE> type, improved mixin support, new JSX emit mode.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 2.3 RC</T><A>https://blogs.msdn.microsoft.com/typescript/2017/04/10/announcing-typescript-2-3-rc/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2017</YEAR><MONTH>4</MONTH><DAY>10</DAY></DATE><COMMENT>The <CODEROUTINE>--strict</CODEROUTINE> option, async generators and async iterators.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 2.4</T><A>https://blogs.msdn.microsoft.com/typescript/2017/06/27/announcing-typescript-2-4/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2017</YEAR><MONTH>6</MONTH><DAY>27</DAY></DATE><COMMENT>Dynamic <CODEROUTINE>import</CODEROUTINE>, string <CODEROUTINE>enum</CODEROUTINE>s, improved checking for generics expressionsâ€¦</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 2.5 RC</T><A>https://blogs.msdn.microsoft.com/typescript/2017/08/17/announcing-typescript-2-5-rc/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2017</YEAR><MONTH>7</MONTH><DAY>17</DAY></DATE><COMMENT><CODEROUTINE>catch</CODEROUTINE> with no parameter, deduplication of packages, the <CODEROUTINE>--preserveSymlinks</CODEROUTINE> compiler flag.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 2.5</T><A>https://blogs.msdn.microsoft.com/typescript/2017/08/31/announcing-typescript-2-5/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2017</YEAR><MONTH>8</MONTH><DAY>31</DAY></DATE><COMMENT>In addition to what was added in the release candidate: Extract Function and Extract Method refactorings, new quick fixes, <CODEROUTINE>/** @type {YOUR_TYPE_HERE} */ ()</CODEROUTINE> syntax to force TypeScript to assume a given type.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 2.6</T><A>https://blogs.msdn.microsoft.com/typescript/2017/10/31/announcing-typescript-2-6/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2017</YEAR><MONTH>10</MONTH><DAY>31</DAY></DATE><COMMENT>Verification of contravariant parameter types, localisation of the compiler messages, <CODEROUTINE>--watch</CODEROUTINE> working more incrementally, and suppressing errors with the <CODEROUTINE>// @ts-ignore</CODEROUTINE> comment.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 2.7 RC</T><A>https://blogs.msdn.microsoft.com/typescript/2018/01/17/announcing-typescript-2-7-rc/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>1</MONTH><DAY>17</DAY></DATE><COMMENT><CODEROUTINE>--strictPropertyInitialization</CODEROUTINE> checks initialisation of class properties, tuples of different arities are no longer assignable, <CODEROUTINE>instanceof</CODEROUTINE> and <CODEROUTINE>in</CODEROUTINE> have better narrowing behavior.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 2.7</T><A>https://blogs.msdn.microsoft.com/typescript/2018/01/31/announcing-typescript-2-7/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>1</MONTH><DAY>31</DAY></DATE><COMMENT>In addition to what was added in the release candidate: definite assignment assertions, easier ECMAScript module interoperability, <CODEROUTINE>unique symbol</CODEROUTINE>s, numeric separators.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 2.8 RC</T><A>https://blogs.msdn.microsoft.com/typescript/2018/03/15/announcing-typescript-2-8-rc/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>3</MONTH><DAY>15</DAY></DATE><COMMENT>Conditional types, fine addition/removal of modifiers in mapped types, JSX pragma and resolution of <CODEROUTINE>JSX.Element</CODEROUTINE> with the JSX Factory.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 2.8</T><A>https://blogs.msdn.microsoft.com/typescript/2018/03/27/announcing-typescript-2-8/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>3</MONTH><DAY>27</DAY></DATE><COMMENT>The same features as in the RC plus the possibility to organize imports and to quick-fix uninitialized properties.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 2.9 RC</T><A>https://blogs.msdn.microsoft.com/typescript/2018/05/16/announcing-typescript-2-9-rc/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>5</MONTH><DAY>16</DAY></DATE><COMMENT><CODEROUTINE>keyof</CODEROUTINE> now supports unique symbols and numeric literal types, and it is possible to <CODEROUTINE>import</CODEROUTINE> a type.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 2.9</T><A>https://blogs.msdn.microsoft.com/typescript/2018/05/31/announcing-typescript-2-9/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>5</MONTH><DAY>31</DAY></DATE><COMMENT>In addition to the RC: improvements of the language server (rename file, extract declaration to new file, report unused parameters / local variables, convert property to getter/setter), <CODEROUTINE>--pretty</CODEROUTINE> is now the default, import of JSON files as input files, type arguments for tagged template strings.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 3.0 RC</T><A>https://blogs.msdn.microsoft.com/typescript/2018/07/12/announcing-typescript-3-0-rc/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>7</MONTH><DAY>12</DAY></DATE><COMMENT>Project references, better checking of rest arguments, improved tuple types, the <CODEROUTINE>unknown</CODEROUTINE> type, and support of JSX's <CODEROUTINE>defaultProps</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 3.0</T><A>https://blogs.msdn.microsoft.com/typescript/2018/07/30/announcing-typescript-3-0/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>7</MONTH><DAY>30</DAY></DATE><COMMENT>In addition to the RC content: improved error messages, <CODEROUTINE>/// &lt;reference lib="â€¦" /&gt;</CODEROUTINE>, and some new editor features.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>TypeScript and Babel 7</T><A>https://blogs.msdn.microsoft.com/typescript/2018/08/27/typescript-and-babel-7/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>8</MONTH><DAY>27</DAY></DATE><COMMENT>Babel has now a TypeScript plugin.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 3.1 RC</T><A>https://blogs.msdn.microsoft.com/typescript/2018/09/13/announcing-typescript-3-1-rc/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>9</MONTH><DAY>13</DAY></DATE><COMMENT>There is no new syntax, but some improvements on mapped arrays and tuples, and on function property declarations.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 3.1</T><A>https://blogs.msdn.microsoft.com/typescript/2018/09/27/announcing-typescript-3-1/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>9</MONTH><DAY>27</DAY></DATE><COMMENT>In addition to the RC: possibility to indicate the TypeScript version to use with the <CODEROUTINE>typesVersions</CODEROUTINE> field in <CODEROUTINE>package.json</CODEROUTINE>, and a refactoring that transform promises into <CODEROUTINE>async</CODEROUTINE>/<CODEROUTINE>await</CODEROUTINE>.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 3.2 RC</T><A>https://blogs.msdn.microsoft.com/typescript/2018/11/15/announcing-typescript-3-2-rc/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>11</MONTH><DAY>15</DAY></DATE><COMMENT>Better control of <CODEROUTINE>bind</CODEROUTINE>, <CODEROUTINE>call</CODEROUTINE>, and <CODEROUTINE>apply</CODEROUTINE> calls, typing spread and rest parameters, and <CODEROUTINE>BigInt</CODEROUTINE> support.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 3.2</T><A>https://blogs.msdn.microsoft.com/typescript/2018/11/29/announcing-typescript-3-2/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2018</YEAR><MONTH>11</MONTH><DAY>29</DAY></DATE><COMMENT>In addition of the RC: mechanism of looking up in node_modules folders to find a base config file, <CODEROUTINE>--showConfig</CODEROUTINE> to display the effective <CODEROUTINE>tsconfig.json</CODEROUTINE>â€¦</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 3.3 RC</T><A>https://blogs.msdn.microsoft.com/typescript/2019/01/23/announcing-typescript-3-3-rc/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>1</MONTH><DAY>23</DAY></DATE><COMMENT>More intelligent type check of parameters for unions of method types and improved build time for incremental build of composite projects.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 3.3</T><A>https://blogs.msdn.microsoft.com/typescript/2019/01/31/announcing-typescript-3-3/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>1</MONTH><DAY>31</DAY></DATE><COMMENT>The same as in the RC plus JavaScript editing in Sublime Text.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 3.4 RC</T><A>https://devblogs.microsoft.com/typescript/announcing-typescript-3-4-rc/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>3</MONTH><DAY>15</DAY></DATE><COMMENT><CODEROUTINE>--incremental</CODEROUTINE> is added to save information of the last build to optimize the next one, the <CODEROUTINE>readonly</CODEROUTINE> for arrays and tuples, <CODEROUTINE>const</CODEROUTINE> assertions, ECMAScriptâ€™s <CODEROUTINE>globalThis</CODEROUTINE>, and the refactoring conversion to named parameters.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 3.4</T><A>https://devblogs.microsoft.com/typescript/announcing-typescript-3-4/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>3</MONTH><DAY>29</DAY></DATE><COMMENT>The same as for the Release Candidate plus improved type inference for generic functions.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 3.5 RC</T><A>https://devblogs.microsoft.com/typescript/announcing-typescript-3-5-rc/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>5</MONTH><DAY>16</DAY></DATE><COMMENT>Speed improvements, the <CODEROUTINE>Omit</CODEROUTINE> helper, better property checks and union type checks, the <CODEROUTINE>--allowUmdGlobalAccess</CODEROUTINE> flag, further improved type inference for generic functions.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 3.5</T><A>https://devblogs.microsoft.com/typescript/announcing-typescript-3-5/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>5</MONTH><DAY>29</DAY></DATE><COMMENT>The same as for the Release Candidate plus two small editor improvements.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 3.6 Beta</T><A>https://devblogs.microsoft.com/typescript/announcing-typescript-3-6-beta/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>7</MONTH><DAY>19</DAY></DATE><COMMENT>Stricter checking for iterators and generators, improved array spread when targeting pre-ES2015, improved error messagesâ€¦</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 3.6 RC</T><A>https://devblogs.microsoft.com/typescript/announcing-typescript-3-6-rc/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>8</MONTH><DAY>16</DAY></DATE><COMMENT>The same as for the beta, with the addition of better unicode support for identifiers, transforming <CODEROUTINE>import.meta</CODEROUTINE> to <CODEROUTINE>context.meta</CODEROUTINE> when targeting <CODEROUTINE>system</CODEROUTINE>, more powerful ambient contexts, incremental build APIs for build tools.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 3.6</T><A>https://devblogs.microsoft.com/typescript/announcing-typescript-3-6/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>8</MONTH><DAY>28</DAY></DATE><COMMENT>The same as for the Release Candidate plus an improved playground.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 3.7 Beta</T><A>https://devblogs.microsoft.com/typescript/announcing-typescript-3-7-beta/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>10</MONTH><DAY>1</DAY></DATE><COMMENT>Optional chaining (<CODEROUTINE>?.</CODEROUTINE> operator), nullish coalescing (<CODEROUTINE>??.</CODEROUTINE> operator), assertion signatures, functions returning <CODEROUTINE>never</CODEROUTINE>, recursive type aliases, support of <CODEROUTINE>--declaration</CODEROUTINE> with <CODEROUTINE>--allowJs</CODEROUTINE>, editing a project with dependencies not built will use the TS files, detecting <CODEROUTINE>if</CODEROUTINE>s incorrectly testing the definition of a function instead of calling itâ€¦</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 3.7 RC</T><A>https://devblogs.microsoft.com/typescript/announcing-typescript-3-7-rc/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>10</MONTH><DAY>24</DAY></DATE><COMMENT>The same as the beta, plus the removal of the <CODEROUTINE>typeArguments</CODEROUTINE> property from the <CODEROUTINE>TypeReference</CODEROUTINE> interface.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 3.7</T><A>https://devblogs.microsoft.com/typescript/announcing-typescript-3-7/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2019</YEAR><MONTH>11</MONTH><DAY>5</DAY></DATE><COMMENT>The same as the RC, plus the <CODEROUTINE>useDefineForClassFields</CODEROUTINE> flag to declare public class fields with <CODEROUTINE>Object.defineProperty</CODEROUTINE> and improved error messages for deep hierarchies of objects.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 3.8 Beta</T><A>https://devblogs.microsoft.com/typescript/announcing-typescript-3-8-beta/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2020</YEAR><MONTH>1</MONTH><DAY>10</DAY></DATE><COMMENT><CODEROUTINE>import type</CODEROUTINE>, <CODEROUTINE>export type</CODEROUTINE> and the <CODEROUTINE>importsNotUsedAsValues</CODEROUTINE> compilation flag allow a better management of type imports, <CODEROUTINE>export * as</CODEROUTINE>, top-level <CODEROUTINE>await</CODEROUTINE>, support of some new JSDoc tagsâ€¦</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 3.9 Beta</T><A>https://devblogs.microsoft.com/typescript/announcing-typescript-3-9-beta/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2020</YEAR><MONTH>3</MONTH><DAY>27</DAY></DATE><COMMENT>Fixed type inference in <CODEROUTINE>Promise.all</CODEROUTINE>, speed improvements, <CODEROUTINE>@ts-expect-error</CODEROUTINE> can be used to unit test errors, improved detection of uncalled functions, refactoring now respects newlinesâ€¦</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 3.9 RC</T><A>https://devblogs.microsoft.com/typescript/announcing-typescript-3-9-rc/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2020</YEAR><MONTH>4</MONTH><DAY>28</DAY></DATE><COMMENT>The same as for the Beta, plus some quick fixes for missing return expressions.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 3.9</T><A>https://devblogs.microsoft.com/typescript/announcing-typescript-3-9/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2020</YEAR><MONTH>5</MONTH><DAY>12</DAY></DATE><COMMENT>The same as for the Release Candidate, plus a quick fix for uncalled function checks, exports using getters, and exports being hoisted.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Changes to How We Manage DefinitelyTyped</T><A>https://devblogs.microsoft.com/typescript/changes-to-how-we-manage-definitelytyped/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Orta</FIRSTNAME><LASTNAME>Therox</LASTNAME></AUTHOR><DATE><YEAR>2020</YEAR><MONTH>5</MONTH><DAY>29</DAY></DATE><COMMENT>Some Pull Requests will be mergeable by Definition Owners.</COMMENT></ARTICLE></ITEM>
      <ITEM><ARTICLE><X><T>Announcing TypeScript 4.0 Beta</T><A>https://devblogs.microsoft.com/typescript/announcing-typescript-4-0-beta/</A><L>en</L><F>HTML</F></X><AUTHOR><FIRSTNAME>Daniel</FIRSTNAME><LASTNAME>Rosenwasser</LASTNAME></AUTHOR><DATE><YEAR>2020</YEAR><MONTH>6</MONTH><DAY>26</DAY></DATE><COMMENT>Improved inference process for rest parameters and rest tuple elements, labeled tuple elements, short-circuiting assignment operators, class property inference from constructorsâ€¦</COMMENT></ARTICLE></ITEM>
    </BLIST></ITEM>
  </BLIST></ITEM>
</LLIST>
</CONTENT>
</PAGE>