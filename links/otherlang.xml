<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="../css/strict.xsl"?>
<PAGE xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../css/schema.xsd">
<TITLE>Languages</TITLE>
<PATH>links/otherlang.xml</PATH>
<DATE><YEAR>2014</YEAR><MONTH>7</MONTH><DAY>5</DAY></DATE>
<CONTENT>

<X><T>Lists of programming languages</T><A>http://en.wikipedia.org/wiki/Lists_of_programming_languages</A><L>en</L><F>HTML</F></X><BR/>
<BR/>

<X><T>Scratch</T><A>http://scratch.mit.edu</A><L>en</L><F>HTML</F></X><BR/>

<LINE/>

<BLIST><TITLE>Articles</TITLE>
  <ITEM><ARTICLE><X><T>RedMonk Programming Language Rankings: CoffeeScript and Java Make Gains</T><A>http://www.readwriteweb.com/hack/2012/02/redmonk-programming-language-r.php</A><L>en</L><F>HTML</F></X><AUTHOR>Joe Brockmeier</AUTHOR><DATE><YEAR>2012</YEAR><MONTH>2</MONTH><DAY>14</DAY></DATE><COMMENT>The current popularity of languages.</COMMENT></ARTICLE></ITEM>
  <ITEM><ARTICLE><X protection='payed_registration'><T>Computing Trends Lead to New Programming Languages</T><A>http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6228573</A><L>en</L><F>HTML</F></X><AUTHOR>Sixto Ortiz</AUTHOR><DATE><YEAR>2012</YEAR><MONTH>7</MONTH></DATE><COMMENT>Some languages targeting some particular domains: Dart, Chapel, Haxe, F#, Ceylon, and X10.</COMMENT></ARTICLE></ITEM>
  <ITEM><BLIST><TITLE>R</TITLE>
    <ITEM><ARTICLE><X><T>David Champagne on the R programming language and its relevance in the world of big data</T><A>http://www.ibm.com/developerworks/java/library/j-gloverpodcast2/index.html#champagne</A><L>en</L><F>MP3</F><DURATION><MINUTE>23</MINUTE><SECOND>52</SECOND></DURATION></X><AUTHOR>Andrew Glover</AUTHOR><AUTHOR>David Champagne</AUTHOR><DATE><YEAR>2011</YEAR><MONTH>5</MONTH><DAY>24</DAY></DATE><COMMENT>A presentation of R. This is not technical, but marketing bullshit.</COMMENT></ARTICLE></ITEM>
  </BLIST></ITEM>
  <ITEM><BLIST><TITLE>Factor</TITLE>
    <ITEM><ARTICLE><X><T>Factor: an extensible interactive language</T><A>http://www.youtube.com/watch?v=f_0QlhYlS8g</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>36</MINUTE><SECOND>39</SECOND></DURATION></X><AUTHOR>Slava Pestov</AUTHOR><DATE><YEAR>2008</YEAR><MONTH>10</MONTH><DAY>28</DAY></DATE><COMMENT>A presentation of Factor, a stack-based language with garbage collection and object orientation.</COMMENT></ARTICLE></ITEM>
  </BLIST></ITEM>
  <ITEM><BLIST><TITLE>Clojure</TITLE>
    <ITEM><ARTICLE><X><T>Uncle Bob Martin presents Clojure (Chicago Java Users Group 2013-10-16 Meetup)</T><A>https://www.youtube.com/watch?v=SYeDxWKftfA</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>30</MINUTE><SECOND>10</SECOND></DURATION></X><AUTHOR>Robert C. Martin</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>10</MONTH><DAY>15</DAY></DATE><COMMENT>An introduction.</COMMENT></ARTICLE></ITEM>
  </BLIST></ITEM>
  <ITEM><BLIST><TITLE>PHP</TITLE>
    <ITEM><ARTICLE><X><T>Compiling and Optimizing Scripting Languages</T><A>http://www.youtube.com/watch?v=kKySEUrP7LA</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>1</MINUTE><SECOND>37</SECOND></DURATION></X><AUTHOR>Paul Biggar</AUTHOR><DATE><YEAR>2009</YEAR><MONTH>3</MONTH><DAY>18</DAY></DATE><COMMENT>A description of the difficulties to write a PHP compiler and some comments about the PHP community.</COMMENT></ARTICLE></ITEM>
  </BLIST></ITEM>
  <ITEM><BLIST><TITLE>Go</TITLE>
    <ITEM><ARTICLE><X><T>Google I/O 2010 - Go Programming</T><A>http://www.youtube.com/watch?v=jgVhBThJdXc</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>56</MINUTE><SECOND>11</SECOND></DURATION></X><AUTHOR>Rob Pike</AUTHOR><AUTHOR>Russ Cox</AUTHOR><DATE><YEAR>2010</YEAR><MONTH>5</MONTH><DAY>19</DAY></DATE><COMMENT>Some examples and Q&amp;As on the Go language.</COMMENT></ARTICLE></ITEM>
  </BLIST></ITEM>
  <ITEM><BLIST><TITLE>D</TITLE>
    <ITEM><ARTICLE><X><T>Three Cool Things About D - The Case for the D Programing Language</T><A>http://www.youtube.com/watch?v=RlVpPstLPEc</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>25</MINUTE><SECOND>8</SECOND></DURATION></X><AUTHOR>Andrei Alexandrescu</AUTHOR><DATE><YEAR>2010</YEAR><MONTH>8</MONTH><DAY>29</DAY></DATE><COMMENT>A presentation of D which tries to be a better C++.</COMMENT></ARTICLE></ITEM>
  </BLIST></ITEM>
  <ITEM><BLIST><TITLE>Dart</TITLE>
    <ITEM><ARTICLE><X><T>Google Dart aims to supplant 'fundamentally flawed' JavaScript</T><ST>The company says JavaScript needs to be replaced due to its performance shortcomings and slow evolution</ST><A>http://podcasts.infoworld.com/t/web-development/google-dart-aimed-supplanting-fundamentally-flawed-javascript-173096</A><L>en</L><F>HTML</F></X><AUTHOR>Ted Samson</AUTHOR><DATE><YEAR>2011</YEAR><MONTH>9</MONTH><DAY>14</DAY></DATE><COMMENT>Google invents yet another language. JavaScript is indeed not a good language, but this will be difficult to convince people to switch to Dart.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Batteries Included: The Dart Toolchain</T><A>http://www.youtube.com/watch?v=P5YodNSX4jk</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>24</MINUTE><SECOND>17</SECOND></DURATION></X><AUTHOR>Andrei Mouravski</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>5</MONTH><DAY>7</DAY></DATE><COMMENT>A quick overview of the tools available for Dart development.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>8 Dart Features Those Fat Cats Don&#x2019;t Want You to Know</T><ST>Productive code without ceremony</ST><A>http://programming.oreilly.com/2013/05/8-dart-features-those-fat-cats-dont-want-you-to-know.html</A><L>en</L><F>HTML</F></X><AUTHOR>Seth Ladd</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>5</MONTH><DAY>30</DAY></DATE><COMMENT>Some random Dart features: method cascades, getters and setters, named constructors, Futures, Streams, named optional parameters, tree shaking, and isolates.</COMMENT></ARTICLE></ITEM>
  </BLIST></ITEM>
  <ITEM><BLIST><TITLE>Kotlin</TITLE>
    <ITEM><ARTICLE><X><T>Advanced Kotlin: New Features and More</T><A>http://www.youtube.com/watch?v=rwsvbSve_BI</A><L>en</L><F>Flash Video</F><DURATION><HOUR>1</HOUR><MINUTE>1</MINUTE><SECOND>6</SECOND></DURATION></X><AUTHOR>Andrey Breslav</AUTHOR><DATE><YEAR>2012</YEAR><MONTH>10</MONTH><DAY>4</DAY></DATE><COMMENT>JetBrains creates yet another language running on the JVM.</COMMENT></ARTICLE></ITEM>
  </BLIST></ITEM>
  <ITEM><BLIST><TITLE>Scala</TITLE>
    <ITEM><ARTICLE><X><T>O'Reilly OSCON Java 2011: Martin Odersky, "Working Hard to Keep It Simple"</T><A>http://www.youtube.com/watch?v=3jg1AheF4n0</A><L>en</L><F>Flash Video</F><DURATION><MINUTE>16</MINUTE><SECOND>31</SECOND></DURATION></X><AUTHOR>Martin Odersky</AUTHOR><DATE><YEAR>2011</YEAR><MONTH>7</MONTH><DAY>25</DAY></DATE><COMMENT>A short marketing speech explaining why parallelism is easier with Scala.</COMMENT></ARTICLE></ITEM>
  </BLIST></ITEM>
  <ITEM><BLIST><TITLE>TypeScript</TITLE>
    <ITEM><ARTICLE><X><T>With TypeScript, Microsoft Embraces and Augments</T><A>http://visualstudiomagazine.com/articles/2012/11/01/typescript.aspx</A><L>en</L><F>HTML</F></X><AUTHOR>Andrew J. Brust</AUTHOR><DATE><YEAR>2012</YEAR><MONTH>11</MONTH><DAY>1</DAY></DATE><COMMENT>Microsoft's Hejlsberg tries to create yet another better JavaScript.</COMMENT></ARTICLE></ITEM>
  </BLIST></ITEM>
  <ITEM><BLIST><TITLE>Java.Next</TITLE>
    <ITEM><ARTICLE><X><T>Java.next: The Java.next languages</T><ST>Leveraging Groovy, Scala, and Clojure in an increasingly polyglot world</ST><A>https://www.ibm.com/developerworks/library/j-jn1/</A><L>en</L><F>HTML</F></X><AUTHOR>Neal Ford</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>1</MONTH><DAY>29</DAY></DATE><COMMENT>A very first introduction to Groovy, Scala, and Clojure: static vs. dynamic typing, and imperative vs. functional.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Java.next: Common ground in Groovy, Scala, and Clojure, Part 1</T><ST>Explore how these next-generation JVM languages handle operator overloading</ST><A>https://www.ibm.com/developerworks/library/j-jn2/</A><L>en</L><F>HTML</F></X><AUTHOR>Neal Ford</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>3</MONTH><DAY>12</DAY></DATE><COMMENT>Operator overloading, associativity, and precedence.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Java.next: Common ground in Groovy, Scala, and Clojure, Part 2</T><ST>Learn how the Java.next languages reduce boilerplate and complexity</ST><A>http://www.ibm.com/developerworks/library/j-jn3/index.html</A><L>en</L><F>HTML</F></X><AUTHOR>Neal Ford</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>4</MONTH><DAY>16</DAY></DATE><COMMENT>Everything is an object, classes are easier to write, and some syntactic sugar.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Java.next: Common ground in Groovy, Scala, and Clojure, Part 3</T><ST>Rethinking exceptions, expressions, and emptiness</ST><A>http://www.ibm.com/developerworks/library/j-jn4/index.html</A><L>en</L><F>HTML</F></X><AUTHOR>Neal Ford</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>5</MONTH><DAY>14</DAY></DATE><COMMENT>No more statement vs expression difference, how the new languages handle exceptions and null.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Java.next: Extension without inheritance, Part 1</T><ST>See how Groovy, Scala, and Clojure bolt behavior onto classes</ST><A>http://www.ibm.com/developerworks/library/j-jn5/index.html</A><L>en</L><F>HTML</F></X><AUTHOR>Neal Ford</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>6</MONTH><DAY>12</DAY></DATE><COMMENT>How to add methods to a class without recompiling it.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Java.next: Extension without inheritance, Part 2</T><ST>Explore Clojure protocols</ST><A>http://www.ibm.com/developerworks/library/j-jn6/index.html</A><L>en</L><F>HTML</F></X><AUTHOR>Neal Ford</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>7</MONTH><DAY>30</DAY></DATE><COMMENT>Futher information about Clojure protocols.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Java.next: Extension without inheritance, Part 3</T><ST>Groovy metaprogramming gives you easy solutions to common problems</ST><A>http://www.ibm.com/developerworks/library/j-jn7/index.html</A><L>en</L><F>HTML</F></X><AUTHOR>Neal Ford</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>9</MONTH><DAY>3</DAY></DATE><COMMENT>Extending Groovy classes or objects.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Java.next: Mixins and traits</T><ST>Mix new behaviors into Groovy and Scala classes</ST><A>http://www.ibm.com/developerworks/library/j-jn8/index.html</A><L>en</L><F>HTML</F></X><AUTHOR>Neal Ford</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>9</MONTH><DAY>19</DAY></DATE><COMMENT>Groovy mixins and Scala traits.</COMMENT></ARTICLE></ITEM>
    <ITEM><ARTICLE><X><T>Java.next: Currying and partial application</T><ST>Add power and indirection to function dispatch</ST><A>http://www.ibm.com/developerworks/library/j-jn9/index.html</A><L>en</L><F>HTML</F></X><AUTHOR>Neal Ford</AUTHOR><DATE><YEAR>2013</YEAR><MONTH>9</MONTH><DAY>26</DAY></DATE><COMMENT>After defining currying and partial application, the author explains how to apply them in Scala, Groovy and Clojure.</COMMENT></ARTICLE></ITEM>
  </BLIST></ITEM>
</BLIST>

</CONTENT>
</PAGE>

