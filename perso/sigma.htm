<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="keywords" content="sigma un et en pour">
   <meta name="GENERATOR" content="Mozilla/4.74 [en] (Win95; U) [Netscape]">
   <title>Six sigma et le logiciel</title>
<link REL=STYLESHEET TYPE="text/css" HREF="../css/standard" TITLE="standard">
<script language="JavaScript" src="../css/common.js"></script>
</head>
<body>
Depuis 1996, General Electric est en train de mettre
en avant l'application de la m&eacute;thodologie Six Sigma dans l'ensemble
de son entreprise et notamment dans des domaines o&ugrave; aucune autre
soci&eacute;t&eacute; ne l'avait utilis&eacute;e auparavant : finance,
d&eacute;veloppement logiciel,… Il s'agit de la derni&egrave;re lubie de
Jack Welch et elle dispara&icirc;tra d&eacute;s qu'il sera parti &agrave;
la retraite et qu'un successeur l'aura remplac&eacute; en apportant une
autre m&eacute;thodologie. C'est une situation classique que l'on retrouve
dans beaucoup de grosses soci&eacute;t&eacute;s. Mais il se trouve que
Six Sigma me tape particuli&egrave;rement sur les nerfs. Je vais essayer
de vous expliquer pourquoi.
<p>(Certains des exemples cit&eacute;s ici sont fictifs car les exemples
r&eacute;els que j'ai &agrave; l'esprit sont trop complexes pour pouvoir
&ecirc;tre d&eacute;crits simplement. Une longue description technique
aurait pour effet de noyer le point que je cherche &agrave; montrer.)
<p>Comme toute m&eacute;thodologie, il s'agit de rendre la qualit&eacute;
d'un travail ind&eacute;pendante de son ex&eacute;cutant. Pour Six Sigma,
il suffit de d&eacute;finir le param&egrave;tre Y que l'on veut am&eacute;liorer
(on veut lui donner une moyenne et un &eacute;cart-type donn&eacute;),
de d&eacute;terminer les facteurs d'entr&eacute;es X qui font varier ce
param&egrave;tre, il n'y a ensuite plus qu'&agrave; utiliser Six Sigma
pour trouver les valeurs de chacun des X qui permettent d'obtenir le Y
(moyenne et &eacute;cart-type) d&eacute;sir&eacute;. N'importe quel abruti
peut faire cela. C'est donc l'outil id&eacute;al pour un manager, celui-ci
peut donner le travail &agrave; Pierre ou &agrave; Paul, cette m&eacute;thodologie
permettra &agrave; l'un ou &agrave; l'autre d'obtenir le r&eacute;sultat
d&eacute;sir&eacute;, bien que Paul soit le dernier des imb&eacute;ciles
et Pierre un gourou du domaine.
<p>Bien &eacute;videmment, il n'en est rien. Employ&eacute; b&ecirc;tement,
Six Sigma sera une catastrophe :
<ul>
<li>
A force de vouloir passer son temps &agrave; optimiser des Y, on en oublie
l'utilisation r&eacute;elle du produit. GE Capital a con&ccedil;u une nouvelle
carte de cr&eacute;dit, le process de conception a suivi la m&eacute;thodologie
Six Sigma, toutes les cartes ont &eacute;t&eacute; produites dans les temps
et avec les valeurs des Y d&eacute;sir&eacute;es. Il n'y a eu qu'un seul
petit probl&egrave;me : le num&eacute;ro de la carte n'&eacute;tait pas
indiqu&eacute; sur celle-ci, elle &eacute;tait donc totalement inutilisable.
Dommage !</li>

<li>
Il arrive qu'une optimisation d'une caract&eacute;ristique du syst&egrave;me
d&eacute;grade l'ensemble de celui-ci (c'est toute la diff&eacute;rence
entre optimisation locale et optimisation globale). Un exemple : vous voulez
am&eacute;liorez la dur&eacute;e de vie Y des tubes d'une gamme de scanners
CT, vous vous rendez compte que l'un des X est la temp&eacute;rature du
tube, vous acc&eacute;l&eacute;rez donc la vitesse de rotation du ventilateur.
R&eacute;sultat : le scan est devenu beaucoup trop bruyant.</li>

<li>
Six Sigma est un m&eacute;thode facile &agrave; utiliser, elle ne demande
pas &agrave; r&eacute;fl&eacute;chir. Elle conduit les gens &agrave; de
pas faire de raisonnements alors que ceux-ci sont possibles, voire m&ecirc;me
n&eacute;cessaires. Au cours de la formation Six Sigma que j'ai subie,
le sp&eacute;cialiste formateur nous a dit que lorsqu'il &eacute;tait jeune,
il avait &eacute;t&eacute; beaucoup ennuy&eacute; d'avoir &agrave; lire
les d&eacute;monstrations de Donald Knuth sur les performances des diff&eacute;rents
algorithmes. Il lui fallait plusieurs heures pour arriver au r&eacute;sultat.
Maintenant, avec Six Sigma, il peut obtenir le r&eacute;sultat en quelques
minutes en utilisant des outils statistiques. Je vois cependant un petit
inconv&eacute;nient. En proc&eacute;dant comme Knuth ou une autre personne
faisant de l'informatique (en opposition avec les gens faisant de la statistique),
je suis capable de montrer que la performance moyenne d'un algo est en
O(n) et sa performance pire en O(n<sup>3</sup>). Ce formateur est juste
capable de voir que la performance moyenne est en O(n). Le jour o&ugrave;
je devrais freiner violemment sur une route mouill&eacute;e, je pr&eacute;f&egrave;re
que ce soit moi, plut&ocirc;t que lui, qui ait programm&eacute; le micro-contr&ocirc;leur
pilotant l'ABS ; on ne sait jamais, si l'algo &eacute;tait dans son pire
cas…</li>

<li>
Il y a de nombreux cas o&ugrave; Six Sigma est non applicable car l'&eacute;chantillon
des mesures est trop petit pour &ecirc;tre statistiquement significatif.
Mais comme il faut malgr&eacute; tout utiliser Six Sigma, la m&ecirc;me
magouille intellectuelle est toujours utilis&eacute;e : on change la d&eacute;finition
de la population, les individus ne sont pas les mesures initiales, mais
des composants de celles-ci. Par exemple, au lieu de mesurer le temps n&eacute;cessaire
pour un transfert un ensemble de donn&eacute;es constitu&eacute; de 150
fichiers, vous prenez le temps n&eacute;cessaire pour transf&eacute;rer
un fichier. Mais il faut se rendre compte que ceci fausse le probl&egrave;me
(et tr&egrave;s g&eacute;n&eacute;ralement les gens ne s'en rendent pas
compte), vous n'optimisez plus globalement, mais localement. Vous pouvez
ainsi obtenir des temps de transfert de fichiers tr&egrave;s courts, mais
avec des temps de r&eacute;initialisation/n&eacute;gociation tr&egrave;s
longs entre chaque transfert, le temps global (ce qui nous int&eacute;resse)
se trouve alors allong&eacute;.</li>

<li>
GE oblige toute personne &agrave; avoir effectu&eacute; au moins deux &eacute;tudes
Six Sigma. On appelle une telle &eacute;tude un <i>Green Belt Project</i>.
Apparemment, les managers de GE ont une passion pour les arts martiaux
: les sp&eacute;cialistes de Six Sigma sont des <i>Black Belt</i> et les
super-sp&eacute;cialistes des <i>Master Black Belt</i>. Mais certains employ&eacute;s
ont beaucoup de mal a trouver un th&egrave;me d'&eacute;tude (autrement
dit un Y). En effet, certains probl&egrave;mes sont impossibles ou tr&egrave;s
difficiles &agrave; mettre sous la forme Six Sigma. Du coup, ils choisissent
un sujet qui n'a aucun int&eacute;r&ecirc;t r&eacute;elle pour la soci&eacute;t&eacute;.
C'est ainsi que l'une de mes coll&egrave;gues, en charge des builds nocturnes
cherche &agrave; optimiser le temps de construction du logiciel (compilation,
cr&eacute;ation du package,…). Ceci n'a aucun int&eacute;r&ecirc;t, nous
n'avons aucun probl&egrave;me avec ceci puisque la construction est toujours
finie le matin lorsque les membres de l'&eacute;quipe arrivent. Il y aurait
eu des choses bien plus int&eacute;ressantes &agrave; faire : mettre en
place un syst&egrave;me de tests automatiques pour faire des tests de non
r&eacute;gression sur le build, utiliser un debugger statistique (du type
lint ou ProLint) pour v&eacute;rifier qu'aucun d&eacute;veloppeur n'a int&eacute;gr&eacute;
de bug trivial, utiliser un outil d'analyse de code pour v&eacute;rifier
que la complexit&eacute; du code n'est pas en train de s'accro&icirc;tre,…
Mais comme tous ces points ne peuvent &ecirc;tre mis dans le cadre de Six
Sigma, ils ont &eacute;t&eacute; abandonn&eacute;s au b&eacute;n&eacute;fice
d'une &eacute;tude sur un non probl&egrave;me.</li>

<li>
L'application de Six Sigma donne des situations plut&ocirc;t amusantes.
Afin de pouvoir fliquer les projets Green Belt, GE a mis en place un syst&egrave;me
de quatre jalons au cours de la vie du projet. A chacun des jalons, l'employ&eacute;
se doit de pr&eacute;senter o&ugrave; il en est sous la forme d'un document
Power Point en respectant un patron pr&eacute;d&eacute;fini. Certains de
mes coll&egrave;gues appellent ces pr&eacute;sentations des soutenances
et, parfois, ils se font recal&eacute;s parce qu'ils n'ont pas suffisamment
bien respecter le patron, ils devront repasser leur soutenance (l'un a
eu le droit &agrave; trois tentatives). Ce vocabulaire estudiantin est
plut&ocirc;t significatif : GE prend vraiment ses employ&eacute;s pour
des abrutis &agrave; la petite &eacute;cole.</li>
</ul>
Cette liste pourrait &ecirc;tre continu&eacute;e, mais je pense avoir montr&eacute;
le point o&ugrave; je veux venir : contrairement &agrave; l'id&eacute;e
de certains managers, Six Sigma ne permet pas de rendre interchangeable
un employ&eacute; par un autre. Six Sigma est un outil, pas un process,
vous devez travailler avec votre bon sens et utiliser les outils statistiques
dans le cas o&ugrave; ceux-ci sont applicables et ont un int&eacute;r&ecirc;t.
Et comme chacun sait, le bon sens est la chose la moins bien partag&eacute;e
au monde, c'est pour cela qu'il y a des personnes comp&eacute;tentes et
d'autres qui sont incomp&eacute;tentes.
<br>&nbsp;
<br>&nbsp;
<p>Le point qui m'ennuie le plus avec Six Sigma est que je suis un informaticien
et que, &agrave; mon avis, Six Sigma n'est g&eacute;n&eacute;ralement (c'est
&agrave; dire 99% du temps ) pas applicable &agrave; ce domaine. Il me
semble que ceci est &eacute;vident, mais comme Jack Welch et tous ses sous-fifres
font semblant d'y croire, il faut sans doute que je me justifie.
<ul>
<li>
Le premier probl&egrave;me est &eacute;vident : le X principal en informatique
est le code, mais il est impossible de mettre celui-ci sur une droite d'un
diagramme Six Sigma, il ne s'agit pas d'une grandeur continue. Du coup,
pour appliquer Six Sigma, vous &ecirc;tes oblig&eacute;s de repr&eacute;senter
le code par une valeur d&eacute;bilement simplificatrice, en g&eacute;n&eacute;ral
le nombre de lignes de code. Mais, par exemple, quel est le rapport entre
le nombre de lignes de code d'un algorithme et sa vitesse ? Aucun, dans
le cas g&eacute;n&eacute;ral, le tri pas bulle est tr&egrave;s court et
tr&egrave;s lent, le tri par arbre AVL est tr&egrave;s long et moyennement
rapide, le tri par tas est court et tr&egrave;s rapide.</li>

<li>
Six Sigma encourage les gens &agrave; ne pas essayer de comprendre comment
le syst&egrave;me fonctionne r&eacute;ellement. On consid&egrave;re le
syst&egrave;me comme un bo&icirc;te noire, on tourne des boutons plac&eacute;s
sur le c&ocirc;t&eacute; de la bo&icirc;te et on regarde ce qui en sort.
Cette m&eacute;thodologie conduit directement &agrave; la catastrophe en
informatique. Vous vous devez de comprendre ce qui se passe : Les probl&egrave;mes
de performance sont-ils dus &agrave; des contentions CPU, disque, r&eacute;seau,
affichage… ? Quelles sont les routines qui sont des goulets d'&eacute;tranglement
? Doit-on les r&eacute;&eacute;crire en assembleur, les multi-threader…
pour tourner plus vite ? De m&ecirc;me, la qualit&eacute; du code ne s'am&eacute;liore
pas en modifiant le pourcentage de lignes comment&eacute;es, la taille
moyen des fichiers sources…</li>

<li>
En informatique, plus que dans beaucoup d'autres domaines, le X essentiel
pour un Y repr&eacute;sentant l'ad&eacute;quation du produit au besoin
du client, la robustesse du logiciel, sa performance… (les Y r&eacute;ellement
choisis sont trop souvent &eacute;loign&eacute;s de ces crit&egrave;res
pragmatiques, basiques et pourtant les seuls r&eacute;ellement importants)
et la comp&eacute;tence du sp&eacute;cificateur, du concepteur, du d&eacute;veloppeur,
du testeur… Mais ce n'est pas politiquement correct de mesurer cette derni&egrave;re
valeur. Alors autant l'ignorer !</li>
</ul>
Utiliser Six Sigma en informatique revient &agrave; essayer de creuser
un trou dans le sol avec un marteau : &eacute;videmment, vous arriverez
&agrave; faire un creux d'une quinzaine de centim&egrave;tres en tapant
tr&egrave;s fort et en consommant beaucoup d'&eacute;nergie ; mais vous
auriez pris une pelle, vous auriez &eacute;t&eacute; beaucoup plus efficace.
A chaque domaine correspondent des outils ad&eacute;quats. En informatique,
utilisez Six Sigma est stupide (sauf dans de tr&egrave;s rares exceptions),
il aurait &eacute;t&eacute; beaucoup plus intelligent de travailler avec
CMM.
<br>&nbsp;
<br>&nbsp;
<p>L'application de Six Sigma dans mon &eacute;quipe n'est pas aussi catastrophique
que cela. Elle a au moins deux b&eacute;n&eacute;fices :
<ul>
<li>
Six Sigma est appliqu&eacute; sous la forme de projets Green Belt, ce qui
permet de d&eacute;dier des ressources &agrave; la r&eacute;solution de
certains probl&egrave;mes, ce qui est trop rarement le cas. Ceci nous a
permis de r&eacute;soudre plusieurs points noirs.</li>

<li>
Six Sigma nous oblige &agrave; faire des mesures, ce qui a toujours &eacute;t&eacute;
notre point faible et s'av&egrave;re tr&egrave;s b&eacute;n&eacute;fique.
Nous pouvons maintenant comparer une situation avec une autre : telle solution
est-elle plus performante que telle autre,… ?</li>
</ul>
Mais, comme vous le remarquez, ces deux points ne sont en rien sp&eacute;cifiques
&agrave; Six Sigma. La mise en application de CMM aurait apport&eacute;
ces b&eacute;n&eacute;fices. Par contre, &eacute;norm&eacute;ment de temps
a &eacute;t&eacute; perdu &agrave; faire des pseudo analyses statistiques
toutes plus inutiles les unes que les autres : ce n'est pas Six Sigma qui
nous a permis d'am&eacute;liorer nos performances, notre robustesse… mais
les comp&eacute;tences informatiques des membres de l'&eacute;quipe.
<p>En fait, au niveau global de GE, les deux avantages essentiels de Six
Sigma sont &eacute;vidents et c'est s&ucirc;rement de que Jack Welch a
en fait &agrave; l'esprit : primo, c'est un &eacute;norme coup de pub aupr&egrave;s
des clients, certains d'entre eux sont peut-&ecirc;tre suffisamment cr&eacute;dules
pour croire que la qualit&eacute; de nos produits va r&eacute;ellement
s'am&eacute;liorer ; secundo, et c'est le point essentiel, c'est un coup
de pub aupr&egrave;s des actionnaires qui sont la seule et unique chose
qui compte pour General Electric.
<br>&nbsp;
<p>
<hr NOSHADE WIDTH="80%">
<p><i><font size=-1>Last update: January 9</font><sup><font size=-2>th</font></sup><font size=-1>,
1999 - <a href="javascript:do_email()">Laurent</a></font></i>
</body>
</html>
